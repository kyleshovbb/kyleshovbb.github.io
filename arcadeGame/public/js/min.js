!function e(t,n,a){function r(o,s){if(!n[o]){if(!t[o]){var u="function"==typeof require&&require;if(!s&&u)return u(o,!0);if(i)return i(o,!0);var c=new Error("Cannot find module '"+o+"'");throw c.code="MODULE_NOT_FOUND",c}var h=n[o]={exports:{}};t[o][0].call(h.exports,function(e){var n=t[o][1][e];return r(n||e)},h,h.exports,e,t,n,a)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<a.length;o++)r(a[o]);return r}({1:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.default=function(){if(!document.querySelector("#aboutDiv")){var e=document.createElement("div");e.setAttribute("id","aboutDiv"),document.body.appendChild(e)}aboutDiv.innerHTML="<p>Аркдная игра была создана Кулешовым Владимиром</p>\n<p><a href='https://vk.com/vvkuleshov' target='_blank'>ВКонтакте</a></p>\n<p><a href='https://www.linkedin.com/in/vladimir-kuleshov-27325712a/' target='_blank'>LinkedIn</a></p>\n<p>Игра была создана по ТЗ описанному тут: <a href='https://github.com/vvscode/js--base-course/tree/master/09/ht' target='_blank'>ТЗ для игры</a></p>"}},{}],2:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var r=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.containerWidth=document.documentElement.clientWidth,this.containerHeight=document.documentElement.clientHeight,this.sx=0,this.sy=0}return a(e,[{key:"setRandomPositions",value:function(){this.x=this.getRandomInt(0,this.containerWidth),this.y=this.getRandomInt(0,this.containerHeight);this.getResultPythagoreanTheorem()<5*this.SUBJECT_SIZE&&this.setRandomPositions()}},{key:"subscribeToMove",value:function(){var e=this.movePerson.bind(this);document.body.addEventListener("keydown",e);var t=this.moveCharacterOnMobile.bind(this);document.querySelector(".mobileControls").addEventListener("click",t)}},{key:"moveCharacterOnMobile",value:function(e){var t=e.target;this.direction=+t.value}},{key:"movePerson",value:function(e){switch(e.keyCode){case 38:this.direction="moveForward";break;case 40:this.direction="backward";break;case 39:this.direction="moveRight";break;case 37:this.direction="moveLeft"}}},{key:"moveInRandomDirection",value:function(){switch(this.getRandomInt(1,4)){case 1:this.direction="moveForward";break;case 2:this.direction="backward";break;case 3:this.direction="moveRight";break;case 4:this.direction="moveLeft"}this.startMove()}},{key:"getRandomInt",value:function(e,t){return Math.floor(Math.random()*(t-e+1))+e}},{key:"setEventBusDirection",value:function(){this.eventBus.on("moveRightAndDown",this.moveRightAndDown),this.eventBus.on("moveLeftAndDown",this.moveLeftAndDown),this.eventBus.on("moveRightAndAUp",this.moveRightAndAUp),this.eventBus.on("moveLeftAndAUp",this.moveLeftAndAUp),this.eventBus.on("moveForward",this.moveForward),this.eventBus.on("moveRight",this.moveRight),this.eventBus.on("moveLeft",this.moveLeft),this.eventBus.on("backward",this.backward)}},{key:"pursueCharacter",value:function(){this.prey.x>this.x&&this.prey.y>this.y?this.direction="moveRightAndDown":this.prey.x<this.x&&this.prey.y>this.y?this.direction="moveLeftAndDown":this.prey.x>this.x&&this.prey.y<this.y?this.direction="moveRightAndAUp":this.prey.x<this.x&&this.prey.y<this.y?this.direction="moveLeftAndAUp":this.prey.x<this.x?this.direction="moveLeft":this.prey.x>this.x?this.direction="moveRight":this.prey.y>this.y?this.direction="backward":this.prey.y<this.y&&(this.direction="moveForward")}},{key:"moveForward",value:function(e){e.y=e.y-2}},{key:"backward",value:function(e){e.y=e.y+2}},{key:"moveRight",value:function(e){e.x=e.x+2}},{key:"moveLeft",value:function(e){e.x=e.x-2}},{key:"moveLeftAndAUp",value:function(e){--e.x,--e.y}},{key:"moveRightAndAUp",value:function(e){++e.x,--e.y}},{key:"moveLeftAndDown",value:function(e){--e.x,++e.y}},{key:"moveRightAndDown",value:function(e){++e.x,++e.y}},{key:"getResultPythagoreanTheorem",value:function(){var e=this.prey.x-this.SUBJECT_SIZE/2-(this.x-this.SUBJECT_SIZE/2),t=this.prey.y-this.SUBJECT_SIZE/2-(this.y-this.SUBJECT_SIZE/2);return Math.sqrt(e*e+t*t)}},{key:"checkOutTheEdgeOfTheCharacter",value:function(){this.x<0-this.SUBJECT_SIZE?this.x=this.containerWidth:this.x>this.containerWidth?this.x=0:this.y<0-this.SUBJECT_SIZE?this.y=this.containerHeight:this.y>this.containerHeight&&(this.y=0)}},{key:"catchUpWithThePlayer",value:function(){var e=this.getResultPythagoreanTheorem();e<this.SUBJECT_SIZE/1.5&&"mushroom"===this.type&&!this.die?(this.prey.ateMushroom||this.playerCatchMushroom(),this.die=!0,this.prey.ateMushroom=!0,this.prey.mushroomTimer+=15):e<this.SUBJECT_SIZE/1.5&&this.prey.ateMushroom?this.die=!0:e<this.SUBJECT_SIZE/1.5&&!this.die&&(this.prey.humanLife=!1)}},{key:"checkForCharacterOccurrencesInRadius",value:function(){this.getResultPythagoreanTheorem()<2.7*this.SUBJECT_SIZE&&this.pursueCharacter()}},{key:"playerCatchMushroom",value:function(){var e=this,t=setInterval(function(){--e.prey.mushroomTimer,e.prey.mushroomTimer<=0&&(e.prey.ateMushroom=!1,clearInterval(t))},1e3)}},{key:"startMove",value:function(){var e=this,t=setInterval(function(){e.checkOutTheEdgeOfTheCharacter(),"hunt2"===e.type?(e.eventBus.trigger(e.direction,e),e.catchUpWithThePlayer(),e.checkForCharacterOccurrencesInRadius()):(e.eventBus.trigger(e.direction,e),"human"!==e.type&&e.catchUpWithThePlayer()),e.abortInterval(t)},4*this.speed)}},{key:"startUpdateSprites",value:function(){var e=this;this.updateSpritesTimer=setInterval(function(){e.updateSprite()},18*this.speed)}},{key:"abortInterval",value:function(e){"hunt2"!==this.type&&"hunt1"!==this.type||this.prey.humanLife?"human"!==this.type||this.humanLife||(clearInterval(e),clearInterval(this.updateSpritesTimer)):(clearInterval(e),clearInterval(this.updateSpritesTimer))}}]),e}();n.default=r},{}],3:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=e("../characters"),o=(a=i,a&&a.__esModule?a:{default:a});var s=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default);function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return n.SUBJECT_SIZE=n.containerHeight/15,n.x=Math.round(n.containerWidth/2-n.SUBJECT_SIZE/2),n.y=Math.round(n.containerHeight/2-n.SUBJECT_SIZE/2),n.speed=5,n.type="human",n.currentDirection={},n.humanLife=!0,n.die=!1,n.ateMushroom=!1,n.mushroomTimer=0,n.eventBus=e,n.init(),n}return r(t,[{key:"init",value:function(){this.setEventBusDirection(),this.moveInRandomDirection(),this.subscribeToMove(),this.startUpdateSprites()}},{key:"updateSprite",value:function(){switch(this.direction){case"moveForward":case"moveLeftAndAUp":case"moveRightAndAUp":this.sy=207;break;case"backward":case"moveLeftAndDown":case"moveRightAndDown":this.sy=0;break;case"moveRight":this.sy=138;break;case"moveLeft":this.sy=69}this.sx+=64,this.sx>=250&&(this.sx=0)}}]),t}();n.default=s},{"../characters":2}],4:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=e("../characters"),o=(a=i,a&&a.__esModule?a:{default:a});var s=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default);function t(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return a.prey=e,a.SUBJECT_SIZE=a.containerHeight/15,a.speed=a.getRandomInt(3,10),a.type="hunt1",a.die=!1,a.eventBus=n,a.init(),a}return r(t,[{key:"init",value:function(){this.setRandomPositions(),this.moveInRandomDirection(),this.startUpdateSprites()}},{key:"updateSprite",value:function(){switch(this.direction){case"moveForward":case"moveLeftAndAUp":case"moveRightAndAUp":this.sy=145;break;case"backward":case"moveLeftAndDown":case"moveRightAndDown":this.sy=0;break;case"moveRight":this.sy=96;break;case"moveLeft":this.sy=48}this.sx+=46,this.sx>=130&&(this.sx=0)}}]),t}();n.default=s},{"../characters":2}],5:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=e("../characters"),o=(a=i,a&&a.__esModule?a:{default:a});var s=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default);function t(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return a.prey=e,a.SUBJECT_SIZE=a.containerHeight/12,a.speed=a.getRandomInt(5,12),a.type="hunt2",a.die=!1,a.eventBus=n,a.init(),a}return r(t,[{key:"init",value:function(){this.setRandomPositions(),this.moveInRandomDirection(),this.startUpdateSprites()}},{key:"updateSprite",value:function(){switch(this.direction){case"moveForward":case"moveLeftAndAUp":case"moveRightAndAUp":this.sy=288;break;case"backward":case"moveLeftAndDown":case"moveRightAndDown":this.sy=0;break;case"moveRight":this.sy=192;break;case"moveLeft":this.sy=96}this.sx+=143,this.sx>=425&&(this.sx=0)}}]),t}();n.default=s},{"../characters":2}],6:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=e("../characters"),o=(a=i,a&&a.__esModule?a:{default:a});var s=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default);function t(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var a=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return a.prey=e,a.SUBJECT_SIZE=a.containerHeight/15,a.speed=a.getRandomInt(7,14),a.type="mushroom",a.die=!1,a.eventBus=n,a.init(),a}return r(t,[{key:"init",value:function(){this.setRandomPositions(),this.moveInRandomDirection(),this.startUpdateSprites()}},{key:"updateSprite",value:function(){switch(this.direction){case"moveForward":case"moveLeftAndAUp":case"moveRightAndAUp":this.sy=150;break;case"backward":case"moveLeftAndDown":case"moveRightAndDown":this.sy=0;break;case"moveRight":this.sy=100;break;case"moveLeft":this.sy=50}this.sx+=50,this.sx>=140&&(this.sx=0)}}]),t}();n.default=s},{"../characters":2}],7:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),r=c(e("./characters/Human")),i=c(e("./characters/Hunt1")),o=c(e("./characters/Hunt2")),s=c(e("./characters/Mushroom")),u=c(e("../utilities/eventBus"));function c(e){return e&&e.__esModule?e:{default:e}}var h=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.contain=t,this.playingGame=!0,this.gameStage=1,this.eventBus=new u.default,n?this.getCurrentPersonageArray(n):(this.human=new r.default(this.eventBus),this.timeToStart=new Date,this.personage=[this.human],this.historyStage=[],this.exportCharacterData(),this.startTimer(),this.updateArea()),this.createCanvasArea()}return a(e,[{key:"getCurrentPersonageArray",value:function(e){this.personage=e[this.gameStage-1]}},{key:"createCanvasArea",value:function(){this.arcadeGameContainer=document.createElement("canvas"),this.arcadeGameContainer.setAttribute("id","game"),this.arcadeGameContainer.height=document.documentElement.clientHeight,this.arcadeGameContainer.width=document.documentElement.clientWidth,this.drawCanvasArea()}},{key:"drawCanvasArea",value:function(){var e=this.arcadeGameContainer.getContext("2d");e.clearRect(0,0,this.arcadeGameContainer.width,this.arcadeGameContainer.height),this.drawGameBoard(e);for(var t=this.personage.length,n=0;n<t;++n)this.drawPersonage(e,this.personage[n]);this.contain.appendChild(this.arcadeGameContainer)}},{key:"drawGameBoard",value:function(e){var t=e;t.beginPath();var n=document.querySelector("#background");t.drawImage(n,0,0,this.arcadeGameContainer.width,this.arcadeGameContainer.height)}},{key:"drawPersonage",value:function(e,t){var n=t.x,a=t.y,r=0,i=0;t.sx>=0&&(r=t.sx),t.sy>=0&&(i=t.sy);var o=void 0,s=void 0,u=void 0,c=t.SUBJECT_SIZE||this.arcadeGameContainer.height/15;switch(t.type||t.t){case"human":e.beginPath(),o=63.5,s=68.5,u=document.querySelector("#person-img"),e.drawImage(u,r,i,o,s,n,a,c,c);break;case"hunt1":e.beginPath(),o=45.7,s=47.75,u=document.querySelector("#hunter1-img"),e.drawImage(u,r,i,o,s,n,a,c,c);break;case"hunt2":e.beginPath(),o=142.33,s=95.75,u=document.querySelector("#hunter2-img"),c=t.SUBJECT_SIZE||this.arcadeGameContainer.height/12,e.drawImage(u,r,i,o,s,n,a,c,c),e.arc(n+c/2,a+c/2,2.5*c,0,2*Math.PI),e.stroke();break;case"mushroom":e.beginPath(),o=50,s=50,u=document.querySelector("#tinyshroommen-img"),e.drawImage(u,r,i,o,s,n,a,c,c)}}},{key:"startTimer",value:function(){var e=this,t=setInterval(function(){e.playingGame?(e.addNewHunter(),++e.gameStage):e.human.humanLife||clearInterval(t)},5e3)}},{key:"createCharacterDataForExport",value:function(){return this.personage.map(function(e){return{x:e.x,y:e.y,sx:e.sx,sy:e.sy,t:e.type}})}},{key:"addNewHunter",value:function(){this.gameStage%5==0?this.personage.push(new o.default(this.human,this.eventBus)):this.personage.push(new i.default(this.human,this.eventBus)),this.gameStage%10==0&&this.personage.push(new s.default(this.human,this.eventBus))}},{key:"updateArea",value:function(){var e=this,t=setInterval(function(){e.human.humanLife?(e.removeDeadCharacters(),e.drawCanvasArea(),e.checkMushroomTimer()):e.human.humanLife||(clearInterval(t),e.gameOver())},50)}},{key:"exportCharacterData",value:function(){var e=this,t=setInterval(function(){e.historyStage.push(e.createCharacterDataForExport()),e.human.humanLife||clearInterval(t)},200)}},{key:"removeDeadCharacters",value:function(){this.personage=this.personage.filter(function(e){return!1===e.die})}},{key:"checkMushroomTimer",value:function(){if(this.human.mushroomTimer>0){var e=document.querySelector("#mushroomTimer");e||((e=document.createElement("p")).setAttribute("id","mushroomTimer"),document.body.appendChild(e)),e.innerHTML="Время действия волшебного гриба: "+this.human.mushroomTimer+" секунд"}else{var t=document.querySelector("#mushroomTimer");t&&t.remove()}}},{key:"gameOver",value:function(){var e=new Date-this.timeToStart,t=new Date(e),n=t.getMinutes(),a=t.getSeconds();this.playingGame=!1,setTimeout(this.writeFiniteTime(n,a),100)}},{key:"writeFiniteTime",value:function(e,t){var n=prompt("Конец игры. Введите Ваш ник","User")||"User",a=[n,e,t,this.historyStage];if(localStorage.players){var r=JSON.parse(localStorage.players);r.push(a),localStorage.players=JSON.stringify(r)}else{localStorage.players="";var i=[a];localStorage.players=JSON.stringify(i)}window.location.hash="theEnd"+n+";"+e+":"+t}}]),e}();n.default=h},{"../utilities/eventBus":11,"./characters/Human":3,"./characters/Hunt1":4,"./characters/Hunt2":5,"./characters/Mushroom":6}],8:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=u(e("../utilities/router")),r=u(e("./aboutPage")),i=u(e("./gameArea")),o=u(e("./records")),s=u(e("./recordPlayback"));function u(e){return e&&e.__esModule?e:{default:e}}var c=new(u(e("../utilities/eventBus")).default);window.onload=function(){new a.default({routes:[{name:"index",match:"",onEnter:function(){document.querySelector(".mobileControls").style.display="none"}},{name:"Game",match:/Game/,onBeforeEnter:function(){if(document.documentElement.clientWidth<1024){document.querySelector(".mobileControls").style.display="block"}},onEnter:function(){var e=document.querySelector("#main_text"),t=document.querySelector("nav");e.style.display="none",t.style.display="none";document.querySelector("#contain").style.display="block";var n=document.querySelector("#contain");new i.default(n)},onLeave:function(){document.querySelector("#contain").style.display="none"}},{name:"GameOver",match:/theEnd(.+)/,onBeforeEnter:function(){document.querySelector(".mobileControls").style.display="none";document.querySelector("#main_text").style.display="none"},onEnter:function(e){var t=e.split(";"),n=document.createElement("h2");n.setAttribute("id","finalTime"),n.innerHTML=t[0]+", Ваше время игры: "+t[1],document.body.appendChild(n);document.querySelector("nav").style.display="block"},onLeave:function(){document.querySelector("#finalTime").style.display="none"}},{name:"Records",match:/Records/,onBeforeEnter:function(){document.querySelector(".mobileControls").style.display="none";document.querySelector("#main_text").style.display="none"},onEnter:function(){var e=document.querySelector("#tableContain");new o.default(e)},onLeave:function(){document.querySelector("#tableContain").innerHTML=""}},{name:"playbackUser",match:/playbackUser=(.+)/,onBeforeEnter:function(){document.querySelector(".mobileControls").style.display="none";document.querySelector("#main_text").style.display="none"},onEnter:function(e){new s.default(e)},onLeave:function(){var e=document.querySelector("#controlsDiv");document.querySelector("#paybackGame").style.display="none",e.remove()}},{name:"Author",match:/Author/,onBeforeEnter:function(){document.querySelector(".mobileControls").style.display="none";document.querySelector("#main_text").style.display="none"},onEnter:function(){var e=document.querySelector("#aboutDiv");e?e.style.display="block":(0,r.default)()},onLeave:function(){document.querySelector("#aboutDiv").style.display="none"}}]})},n.default=c},{"../utilities/eventBus":11,"../utilities/router":12,"./aboutPage":1,"./gameArea":7,"./recordPlayback":9,"./records":10}],9:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a,r=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),i=e("./gameArea"),o=(a=i,a&&a.__esModule?a:{default:a});var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.playbackArray=JSON.parse(localStorage.players)[t][3],this.playbackGameContainer=document.createElement("div"),this.playbackGameContainer.setAttribute("id","paybackGame"),document.body.appendChild(this.playbackGameContainer),this.playingGame=!0,this.initPlayback()}return r(e,[{key:"initPlayback",value:function(){this.createControls(),this.createPlaybackGameArea(),this.updatePlaybackGameArea()}},{key:"createControls",value:function(){var e=document.querySelector("#controlsDiv");if(e)e.style.display="block";else{this.controlsDiv=document.createElement("div"),this.controlsDiv.setAttribute("id","controlsDiv"),document.body.appendChild(this.controlsDiv);var t=document.createElement("label");t.innerText="Регулятор скорости:",t.setAttribute("id","speedControllerLabel"),this.controlsDiv.appendChild(t),this.speedController=this.createRange(t,"speedController",50),this.speedController.setAttribute("value","25"),this.rewindController=this.createRange(this.controlsDiv,"rewindController",this.playbackArray.length-1),this.createPlayButton(this.controlsDiv),this.subsToChangeControls()}}},{key:"createRange",value:function(e,t,n){var a=document.createElement("input");return a.setAttribute("id",t),a.setAttribute("type","range"),a.setAttribute("value","1"),a.setAttribute("min","1"),a.setAttribute("max",n),e.appendChild(a),a}},{key:"createPlayButton",value:function(){this.playButton=document.createElement("input"),this.playButton.setAttribute("id","playButton"),this.playButton.setAttribute("type","button"),this.playButton.setAttribute("value","stop"),this.controlsDiv.appendChild(this.playButton)}},{key:"subsToChangeControls",value:function(){var e=this.clickOnPlayButton.bind(this);this.playButton=document.querySelector("#playButton"),this.playButton.addEventListener("click",e);var t=this.changeRange.bind(this);this.controlsDiv.addEventListener("change",t)}},{key:"changeRange",value:function(e){var t=e.target;t.closest("#rewindController")?(this.playback.gameStage=+t.value,this.playback.getCurrentPersonageArray(this.playbackArray),this.playback.drawCanvasArea()):t.closest("#speedController")&&this.playbackArray.length-1!==this.playback.gameStage&&(this.stopPlaybackGameArea(),this.updatePlaybackGameArea())}},{key:"clickOnPlayButton",value:function(e){var t=e.target;"stop"===t.value?(t.value="play",t.style.backgroundPositionX="0",this.timer&&this.stopPlaybackGameArea()):"play"===t.value&&(t.value="stop",t.style.backgroundPositionX="17%",this.timer||this.updatePlaybackGameArea(),this.playbackArray.length-1===this.playback.gameStage&&(this.rewindController.value=1,this.playback.gameStage=1))}},{key:"createPlaybackGameArea",value:function(){this.playback=new o.default(this.playbackGameContainer,this.playbackArray)}},{key:"updatePlaybackGameArea",value:function(){var e=this;this.timer=setInterval(function(){++e.playback.gameStage,+e.rewindController.value==e.playback.gameStage-1&&(e.rewindController.value=e.playback.gameStage),e.playback.getCurrentPersonageArray(e.playbackArray),e.playback.drawCanvasArea(),e.playbackArray.length-1===e.playback.gameStage&&(e.playButton.value="play",e.playButton.style.backgroundPositionX="0",e.stopPlaybackGameArea())},this.speedController.value)}},{key:"stopPlaybackGameArea",value:function(){clearInterval(this.timer),this.timer=0}}]),e}();n.default=s},{"./gameArea":7}],10:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var r=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.tableContain=t,this.createTableTemplate()}return a(e,[{key:"createTableTemplate",value:function(){this.table=document.createElement("table"),this.table.setAttribute("id","records"),this.table.innerHTML="<tr><th>Ник игрока</th><th>Минут</th><th>Секунд</th><th>Воспроизвести записанную игру</th></tr>",localStorage.players&&(this.playersArray=JSON.parse(localStorage.players),this.createTable())}},{key:"createTable",value:function(){for(var e=0;e<this.playersArray.length;++e){for(var t=document.createElement("tr"),n=0;n<this.playersArray[e].length;++n){var a=document.createElement("td");if(n!==this.playersArray[e].length-1)a.innerText=this.playersArray[e][n];else{var r=document.createElement("a");r.setAttribute("class","playRecordedGame"),r.setAttribute("href","#playbackUser="+e),r.innerText="Play",a.appendChild(r)}t.appendChild(a)}this.table.appendChild(t)}this.tableContain.innerHTML="",this.tableContain.appendChild(this.table)}}]),e}();n.default=r},{}],11:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var r=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.listeners={}}return a(e,[{key:"on",value:function(e,t){this.listeners[e]=this.listeners[e]||[],this.listeners[e].push(t)}},{key:"trigger",value:function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];this.listeners[e]&&this.listeners[e].forEach(function(e){return e.apply(void 0,n)})}},{key:"off",value:function(e,t){t?this.listeners[e]=this.listeners[e].filter(function(e){return!(t===e)}):delete this.listeners[e]}},{key:"once",value:function(e,t){this.on(e,function(){t.apply(void 0,arguments),delete n.listeners[e]});var n=this}}]),e}();n.default=r},{}],12:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}();var r=function(){function e(){var t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.routes=n.routes,window.addEventListener("hashchange",function(){return t.hashCheck(window.location.hash)}),this.hashCheck(window.location.hash)}return a(e,[{key:"findNewRoute",value:function(e){var t=void 0,n=this;if(this.routes)return 1===this.routes.length?this.findRoute(e,this.routes[0]):(this.routes.forEach(function(a){if(n.findRoute(e,a))return t=a}),t)}},{key:"findRoute",value:function(e,t){if("string"==typeof t.match&&e===t.match||"function"==typeof t.match&&t.match(e)||t.match instanceof RegExp&&e.match(t.match))return t}},{key:"hashCheck",value:function(e){var t=this;e=e.slice(1);var n=this.activeRoute,a=this.findNewRoute(e);a&&("string"==typeof a.match?this.routeParams=a.match:a.match instanceof RegExp?this.routeParams=e.match(a.match)[1]:"function"==typeof a.match&&(this.routeParams=a.match(e)),Promise.resolve().then(function(){n&&n.onLeave&&(t.preRouteParams?n.onLeave(t.preRouteParams):n.onLeave())}).then(function(){a&&a.onBeforeEnter&&(t.routeParams?a.onBeforeEnter(t.routeParams):a.onBeforeEnter())}).then(function(){a&&a.onEnter&&(t.routeParams?a.onEnter(t.routeParams):a.onEnter())}).then(function(){t.activeRoute=a,t.preRouteParams=t.routeParams}).catch(function(e){console.log(e)}))}}]),e}();n.default=r},{}]},{},[8]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
