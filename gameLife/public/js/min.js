!function e(t,n,r){function i(o,u){if(!n[o]){if(!t[o]){var s="function"==typeof require&&require;if(!u&&s)return s(o,!0);if(a)return a(o,!0);var c=new Error("Cannot find module '"+o+"'");throw c.code="MODULE_NOT_FOUND",c}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return i(n||e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var a="function"==typeof require&&require,o=0;o<r.length;o++)i(r[o]);return i}({1:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});n.default=function(){if(!document.querySelector("#aboutDiv")){var e=document.createElement("div");e.setAttribute("id","aboutDiv"),document.body.appendChild(e)}aboutDiv.innerHTML="<h1><a href='https://ru.wikipedia.org/wiki/%D0%98%D0%B3%D1%80%D0%B0_%C2%AB%D0%96%D0%B8%D0%B7%D0%BD%D1%8C%C2%BB'>Игра «Жизнь»</a></h1>\n<p>Место действия этой игры — «вселенная» — это размеченная на клетки поверхность или\nплоскость — безграничная, ограниченная, или замкнутая (в пределе — бесконечная плоскость).</p>\n<p>Каждая клетка на этой поверхности может находиться в двух состояниях: быть «живой» \n(заполненной) или быть «мёртвой» (пустой). Клетка имеет восемь соседей, окружающих её.</p>\n<ul> Распределение живых клеток в начале игры называется первым поколением. Каждое следующее \nпоколение рассчитывается на основе предыдущего по таким правилам:\n<li>в пустой (мёртвой) клетке, рядом с которой ровно три живые клетки, зарождается жизнь;</li>\n<li>если у живой клетки есть две или три живые соседки, то эта клетка продолжает жить; \nв противном случае, если соседей меньше двух или больше трёх, клетка умирает («от одиночества» \nили «от перенаселённости»)</li>\n</ul>\n<p>Игрок не принимает прямого участия в игре, а лишь расставляет или генерирует начальную \nконфигурацию «живых» клеток, которые затем взаимодействуют согласно правилам уже без его участия \n(он является наблюдателем).</p>\n<p>Поле отображает текущее поколение. И позволяет пользователю взаимодействовать с игрой. \nКлик по полю вызывает инверсию состояния клетки, по которой пользователь кликнул ( живая - \nумирает, мертвая - оживает ).</p>"}},{}],2:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var i=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.gameLineNumbew=t||40,this.gameColumnNumbew=n||40,this.gameLifeArray=this.createGameArray(t,n),this.contain=document.querySelector("#contain"),this.gameSpeed=document.querySelector("#rangeGameSpeed"),this.stageHistory?this.stageHistory.push(this.gameLifeArray):(this.stageHistory=[],this.stageHistory.push(this.gameLifeArray)),this.subscribeToClickOnArray(),this.playState=!0,this.currentArrayIndex=this.stageHistory.length-1}return r(e,[{key:"subscribeToClickOnArray",value:function(){this.wrapperClickOnArray=this.clickOnArray.bind(this),this.contain.addEventListener("click",this.wrapperClickOnArray)}},{key:"clickOnArray",value:function(e){var t=this.contain.clientHeight,n=this.contain.clientWidth,r=e.offsetX,i=e.offsetY,a=t/this.gameLineNumbew,o=n/this.gameColumnNumbew,u=Math.floor(r/o),s=Math.floor(i/a),c=this.stageHistory[this.currentArrayIndex][s][u];this.stageHistory[this.currentArrayIndex][s][u]=c?0:1,this.stageHistory.splice(this.currentArrayIndex+1),this.eventBus.trigger("view",this)}},{key:"createGameArray",value:function(e,t){for(var n=[],r=0;r<e;++r){for(var i=[],a=0;a<t;++a)i.push(0);n.push(i)}return this.addToArrayFixedItem(n)}},{key:"addToArrayFixedItem",value:function(e){var t=Math.round(e[0].length/2),n=Math.round(e.length/2);return e[n][t]=1,e[n-1][t]=1,e[n+1][t]=1,e[n+1][t]=1,e[n+1][t+1]=1,e}},{key:"startCalculate",value:function(){if(this.stageHistory.length){var e=this.stageHistory[this.currentArrayIndex];this.calculateGameLife(e)}this.currentArrayIndex=this.stageHistory.length-1}},{key:"calculateGameLife",value:function(e){for(var t=[],n=0;n<this.gameLineNumbew;++n){for(var r=[],i=0;i<this.gameColumnNumbew;++i){var a=this.getAdjacentElementLength(n,i,e);3!==a||e[n][i]?2===a||3===a&&e[n][i]?r.push(e[n][i]):(a<2||a>3)&&r.push(0):r.push(1)}t.push(r)}this.stageHistory.splice(this.currentArrayIndex+1),this.stageHistory.push(t)}},{key:"getAdjacentElementLength",value:function(e,t,n){for(var r=0,i=e-1;i<=e+1;++i)for(var a=t-1;a<=t+1;++a)i===e&&a===t||i<0||a<0||i>this.gameLineNumbew-1||a>this.gameColumnNumbew-1||1!==n[i][a]||++r;return r}},{key:"repeatGame",value:function(){var e=this;setTimeout(function(){e.playState?(e.startCalculate(e.stageHistory),e.eventBus.trigger("view",e),e.repeatGame()):e.playState||clearTimeout()},100*+this.gameSpeed.value)}}]),e}();n.default=i},{}],3:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r,i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=e("./calculatingGameLife"),o=(r=a,r&&r.__esModule?r:{default:r});var u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default);function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=document.querySelector("#selectLine"),r=document.querySelector("#selectColumn"),i=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,+n.value,+r.value,e));return i.eventBus=e,i.selectLine=n,i.selectColumn=r,i.buttons=document.querySelector("#buttons"),i.subscribeToClickButton(),i}return i(t,[{key:"subscribeToClickButton",value:function(){this.wrapperClickOnControlsButton=this.clickOnControlsButton.bind(this),this.buttons.addEventListener("click",this.wrapperClickOnControlsButton),this.repeatGame()}},{key:"clickOnControlsButton",value:function(e){var t=e.target;t.closest("#back")?this.currentArrayIndex>0&&(--this.currentArrayIndex,this.eventBus.trigger("view",this)):t.closest("#forward")?this.currentArrayIndex<this.stageHistory.length-1&&(++this.currentArrayIndex,this.eventBus.trigger("view",this)):t.closest("#play")&&("Stop"===t.value?(t.value="Play",this.playState=!1):"Play"===t.value&&(t.value="Stop",this.playState=!0,this.repeatGame()))}}]),t}();n.default=u},{"./calculatingGameLife":2}],4:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=l(e("./aboutPage")),i=l(e("./writeCanvasGameLife")),a=l(e("./writeSVGGameLife")),o=l(e("./controls")),u=l(e("./writeTextGameLife")),s=l(e("../utils/eventBus")),c=l(e("../utils/router"));function l(e){return e&&e.__esModule?e:{default:e}}var f=new s.default,h=void 0;document.querySelector("#form-controls").addEventListener("change",function(e){h.selectLine.value>150?h.selectLine.value=150:h.selectLine.value<3&&(h.selectLine.value=3),h.selectColumn.value>150?h.selectColumn.value=150:h.selectColumn.value<3&&(h.selectColumn.value=3);var t=e.target;(t.closest("#selectLine")||t.closest("#selectColumn"))&&(h.contain.removeEventListener("click",h.wrapperClickOnArray),h.buttons.removeEventListener("click",h.wrapperClickOnControlsButton),h=new o.default(f),document.querySelector("#play").value="Stop",f.trigger("view",h))});new c.default({routes:[{name:"index",match:"",onBeforeEnter:function(){var e=document.querySelector("#contain"),t=document.querySelector("#controls");e.style.display="none",t.style.display="none"},onEnter:function(){var e=document.createElement("h1");e.setAttribute("id","headerText"),e.innerHTML="Выберите режим отображения игры",document.body.appendChild(e)},onLeave:function(){document.querySelector("#headerText").style.display="none"}},{name:"Text",match:/Text/,onBeforeEnter:function(){var e=document.querySelector("#contain"),t=document.querySelector("#controls");e.style.display="block",t.style.display="block"},onEnter:function(){f.on("view",u.default),h||(h=new o.default(f)),f.trigger("view",h)},onLeave:function(){f.off("view",u.default)}},{name:"Canvas",match:/Canvas/,onBeforeEnter:function(){var e=document.querySelector("#contain"),t=document.querySelector("#controls");e.style.display="block",t.style.display="block"},onEnter:function(){f.on("view",i.default),h||(h=new o.default(f)),f.trigger("view",h)},onLeave:function(){f.off("view",i.default)}},{name:"SVG",match:/SVG/,onBeforeEnter:function(){var e=document.querySelector("#contain"),t=document.querySelector("#controls");e.style.display="block",t.style.display="block"},onEnter:function(){f.on("view",a.default),h||(h=new o.default(f)),f.trigger("view",h)},onLeave:function(){f.off("view",a.default)}},{name:"About",match:/About/,onBeforeEnter:function(){var e=document.querySelector("#contain"),t=document.querySelector("#controls");e.style.display="none",t.style.display="none",h&&(h.playState=!1)},onEnter:function(){var e=document.querySelector("#aboutDiv");e?e.style.display="block":(0,r.default)()},onLeave:function(){if(document.querySelector("#aboutDiv").style.display="none",h){h.playState=!0;"Stop"===document.querySelector("#play").value&&h.repeatGame()}}}]});n.default=h},{"../utils/eventBus":8,"../utils/router":9,"./aboutPage":1,"./controls":3,"./writeCanvasGameLife":5,"./writeSVGGameLife":6,"./writeTextGameLife":7}],5:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.canvas=document.createElement("canvas"),this.gameLife=t,this.SQUARE_SIZE=8,this.startWriteGame()}return r(e,[{key:"startWriteGame",value:function(){this.writeGame(this.gameLife.stageHistory[this.gameLife.currentArrayIndex],this.pre),window.location.hash="Canvas&gameState="+(this.gameLife.currentArrayIndex+1)}},{key:"writeGame",value:function(e){var t=e.length,n=e[0].length;this.canvas.height=11*t,this.canvas.width=11*n;var r=this.canvas.getContext("2d");r.beginPath();for(var i=0,a=0;a<t;++a){for(var o=0,u=0;u<n;++u)e[a][u]&&r.rect(o,i,this.SQUARE_SIZE,this.SQUARE_SIZE),o+=11;i+=11}r.fillStyle="#8bc34a",r.fill(),this.gameLife.contain.innerHTML="",this.gameLife.contain.appendChild(this.canvas)}}]),e}();n.default=i},{}],6:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.SQUARE_SIZE=8,this.SVG_NS="http://www.w3.org/2000/svg",this.svg=document.createElementNS(this.SVG_NS,"svg"),this.wrapper=document.createElementNS(this.SVG_NS,"rect"),this.wrapper.setAttribute("class","wrapper"),this.svg.appendChild(this.wrapper),this.gameLife=t,this.startWriteGame()}return r(e,[{key:"startWriteGame",value:function(){this.writeGame(this.gameLife.stageHistory[this.gameLife.currentArrayIndex],this.pre),window.location.hash="SVG&gameState="+(this.gameLife.currentArrayIndex+1)}},{key:"writeGame",value:function(e){var t=e.length,n=e[0].length;this.svg.setAttribute("height",11*t),this.svg.setAttribute("width",11*n);for(var r=0,i=0;i<t;++i){for(var a=0,o=0;o<n;++o){if(e[i][o]){var u='<rect \n                                  x="'+a+'"\n                                  y="'+r+'"\n                                  width="'+this.SQUARE_SIZE+'"\n                                  class="inner-square" />';this.svg.innerHTML+=u}a+=11}r+=11}this.gameLife.contain.innerHTML="",this.gameLife.contain.appendChild(this.svg)}}]),e}();n.default=i},{}],7:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.pre=document.createElement("pre"),this.gameLife=t,this.startWriteGame()}return r(e,[{key:"startWriteGame",value:function(){this.writeGame(this.gameLife.stageHistory[this.gameLife.currentArrayIndex],this.pre),window.location.hash="Text&gameState="+(this.gameLife.currentArrayIndex+1)}},{key:"writeGame",value:function(e){for(var t=e.length,n=e[0].length,r="",i=0;i<t;++i){i>0&&(r+="\n");for(var a=0;a<n;++a)e[i][a]?r+="x":r+=" ";this.pre.innerHTML=r}this.gameLife.contain.innerHTML="",this.gameLife.contain.appendChild(this.pre)}}]),e}();n.default=i},{}],8:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var i=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.listeners={}}return r(e,[{key:"on",value:function(e,t){this.listeners[e]=this.listeners[e]||[],this.listeners[e].push(t)}},{key:"trigger",value:function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];this.listeners[e]&&this.listeners[e].forEach(function(e){e.constructor?new(Function.prototype.bind.apply(e,[null].concat(n))):e.apply(void 0,n)})}},{key:"off",value:function(e,t){t?this.listeners[e]=this.listeners[e].filter(function(e){return!(t===e)}):delete this.listeners[e]}},{key:"once",value:function(e,t){this.on(e,function(){t.apply(void 0,arguments),delete n.listeners[e]});var n=this}}]),e}();n.default=i},{}],9:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var i=function(){function e(){var t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.routes=n.routes,window.addEventListener("hashchange",function(){return t.hashCheck(window.location.hash)}),this.hashCheck(window.location.hash)}return r(e,[{key:"findNewRoute",value:function(e){var t=void 0,n=this;if(this.routes)return 1===this.routes.length?this.findRoute(e,this.routes[0]):(this.routes.forEach(function(r){if(n.findRoute(e,r))return t=r}),t)}},{key:"findRoute",value:function(e,t){if("string"==typeof t.match&&e===t.match||"function"==typeof t.match&&t.match(e)||t.match instanceof RegExp&&e.match(t.match))return t}},{key:"hashCheck",value:function(e){var t=this;e=e.slice(1);var n=this.activeRoute,r=this.findNewRoute(e);r&&("string"==typeof r.match?this.routeParams=r.match:r.match instanceof RegExp?this.routeParams=e.match(r.match)[1]:"function"==typeof r.match&&(this.routeParams=r.match(e)),Promise.resolve().then(function(){n&&n.onLeave&&(t.preRouteParams?n.onLeave(t.preRouteParams):n.onLeave())}).then(function(){r&&r.onBeforeEnter&&(t.routeParams?r.onBeforeEnter(t.routeParams):r.onBeforeEnter())}).then(function(){r&&r.onEnter&&(t.routeParams?r.onEnter(t.routeParams):r.onEnter())}).then(function(){t.activeRoute=r,t.preRouteParams=t.routeParams}).catch(function(e){console.log(e)}))}}]),e}();n.default=i},{}]},{},[4]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1pbi5qcyJdLCJuYW1lcyI6WyJlIiwidCIsIm4iLCJyIiwicyIsIm8iLCJ1IiwiYSIsInJlcXVpcmUiLCJpIiwiZiIsIkVycm9yIiwiY29kZSIsImwiLCJleHBvcnRzIiwiY2FsbCIsImxlbmd0aCIsIjEiLCJtb2R1bGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwiZGVmYXVsdCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIl9hYm91dERpdiIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJhYm91dERpdiIsImlubmVySFRNTCIsIjIiLCJfY3JlYXRlQ2xhc3MiLCJkZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicHJvcHMiLCJkZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwia2V5IiwiQ29uc3RydWN0b3IiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJwcm90b3R5cGUiLCJDYWxjdWxhdGluZ0dhbWVMaWZlIiwibGluZSIsImNvbHVtbiIsImluc3RhbmNlIiwiVHlwZUVycm9yIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsImdhbWVMaW5lTnVtYmV3IiwiZ2FtZUNvbHVtbk51bWJldyIsImdhbWVMaWZlQXJyYXkiLCJjcmVhdGVHYW1lQXJyYXkiLCJjb250YWluIiwiZ2FtZVNwZWVkIiwic3RhZ2VIaXN0b3J5IiwicHVzaCIsInN1YnNjcmliZVRvQ2xpY2tPbkFycmF5IiwicGxheVN0YXRlIiwiY3VycmVudEFycmF5SW5kZXgiLCJ3cmFwcGVyQ2xpY2tPbkFycmF5IiwiY2xpY2tPbkFycmF5IiwiYmluZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJldiIsImhlaWdodCIsImNsaWVudEhlaWdodCIsIndpZHRoIiwiY2xpZW50V2lkdGgiLCJ4Iiwib2Zmc2V0WCIsInkiLCJvZmZzZXRZIiwicm93SGVpZ2h0IiwiY2VsbFdpZHRoIiwiTWF0aCIsImZsb29yIiwiY2VsbCIsInNwbGljZSIsImV2ZW50QnVzIiwidHJpZ2dlciIsImFycmF5IiwibmV3Um93IiwiaiIsImFkZFRvQXJyYXlGaXhlZEl0ZW0iLCJjZW50ZXJDb2x1bW4iLCJyb3VuZCIsImNlbnRlckxpbmUiLCJjdXJyZW50TGlmZVN0YWdlIiwiY2FsY3VsYXRlR2FtZUxpZmUiLCJzdGFnZUxpZmUiLCJuZXdTdGFnZU9mTGlmZSIsIm5ld1Jvd09uU3RhZ2VPZkxpZmUiLCJhZGphY2VudEVsZW1lbnRMZW5ndGgiLCJnZXRBZGphY2VudEVsZW1lbnRMZW5ndGgiLCJob3Jpem9udGFsTnVtYmVyIiwidmVydGljYWxOdW1iZXIiLCJjb3VudCIsIl90aGlzIiwic2V0VGltZW91dCIsInN0YXJ0Q2FsY3VsYXRlIiwicmVwZWF0R2FtZSIsImNsZWFyVGltZW91dCIsIjMiLCJvYmoiLCJfY2FsY3VsYXRpbmdHYW1lTGlmZSIsIl9jYWxjdWxhdGluZ0dhbWVMaWZlMiIsIl9fZXNNb2R1bGUiLCJDb250cm9scyIsIl9DYWxjdWxhdGluZ0dhbWVMaWZlIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIl9pbmhlcml0cyIsInNlbGVjdExpbmUiLCJzZWxlY3RDb2x1bW4iLCJzZWxmIiwiUmVmZXJlbmNlRXJyb3IiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsImdldFByb3RvdHlwZU9mIiwiYnV0dG9ucyIsInN1YnNjcmliZVRvQ2xpY2tCdXR0b24iLCJ3cmFwcGVyQ2xpY2tPbkNvbnRyb2xzQnV0dG9uIiwiY2xpY2tPbkNvbnRyb2xzQnV0dG9uIiwiY2xvc2VzdCIsIi4vY2FsY3VsYXRpbmdHYW1lTGlmZSIsIjQiLCJfYWJvdXRQYWdlMiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfd3JpdGVDYW52YXNHYW1lTGlmZTIiLCJfd3JpdGVTVkdHYW1lTGlmZTIiLCJfY29udHJvbHMyIiwiX3dyaXRlVGV4dEdhbWVMaWZlMiIsIl9ldmVudEJ1czIiLCJfcm91dGVyMiIsImxpZmVHYW1lIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInJvdXRlcyIsIm5hbWUiLCJtYXRjaCIsIm9uQmVmb3JlRW50ZXIiLCJjb250cm9scyIsInN0eWxlIiwiZGlzcGxheSIsIm9uRW50ZXIiLCJoZWFkZXJUZXh0Iiwib25MZWF2ZSIsIm9uIiwib2ZmIiwiLi4vdXRpbHMvZXZlbnRCdXMiLCIuLi91dGlscy9yb3V0ZXIiLCIuL2Fib3V0UGFnZSIsIi4vY29udHJvbHMiLCIuL3dyaXRlQ2FudmFzR2FtZUxpZmUiLCIuL3dyaXRlU1ZHR2FtZUxpZmUiLCIuL3dyaXRlVGV4dEdhbWVMaWZlIiwiNSIsIldyaXRlQ2FudmFzR2FtZUxpZmUiLCJnYW1lTGlmZSIsImNhbnZhcyIsIlNRVUFSRV9TSVpFIiwic3RhcnRXcml0ZUdhbWUiLCJ3cml0ZUdhbWUiLCJwcmUiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhhc2giLCJsYXN0TGlmZVN0YWdlIiwidmVydGljYWxMZW5ndGgiLCJob3Jpem9udGFsTGVuZ3RoIiwiY3R4IiwiZ2V0Q29udGV4dCIsImJlZ2luUGF0aCIsInJlY3QiLCJmaWxsU3R5bGUiLCJmaWxsIiwiNiIsIldyaXRlU1ZHR2FtZUxpZmUiLCJTVkdfTlMiLCJzdmciLCJjcmVhdGVFbGVtZW50TlMiLCJ3cmFwcGVyIiwiU1ZHU3F1YXJlIiwiNyIsIldyaXRlVGV4dEdhbWVMaWZlIiwidGV4dEdhbWVMaWZlIiwiOCIsIkV2ZW50QnVzIiwibGlzdGVuZXJzIiwiY2IiLCJfbGVuIiwiYXJndW1lbnRzIiwiZGF0YSIsIkFycmF5IiwiX2tleSIsImZvckVhY2giLCJGdW5jdGlvbiIsImFwcGx5IiwiY29uY2F0IiwidW5kZWZpbmVkIiwiZmlsdGVyIiwiYXJyYXlDYWxsYmFjayIsIjkiLCJSb3V0ZXIiLCJvcHRpb25zIiwiaGFzaENoZWNrIiwicm91dGUiLCJmaW5kUm91dGUiLCJyb3V0ZUl0ZW0iLCJpdGVtIiwiUmVnRXhwIiwiX3RoaXMyIiwic2xpY2UiLCJwcmVSb3V0ZSIsImFjdGl2ZVJvdXRlIiwibmV3Um91dGUiLCJmaW5kTmV3Um91dGUiLCJyb3V0ZVBhcmFtcyIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsInByZVJvdXRlUGFyYW1zIiwiY2F0Y2giLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJDQUFBLFNBQVVBLEVBQUVDLEVBQUVDLEVBQUVDLEdBQUcsU0FBU0MsRUFBRUMsRUFBRUMsR0FBRyxJQUFJSixFQUFFRyxHQUFHLENBQUMsSUFBSUosRUFBRUksR0FBRyxDQUFDLElBQUlFLEVBQWtCLG1CQUFUQyxTQUFxQkEsUUFBUSxJQUFJRixHQUFHQyxFQUFFLE9BQU9BLEVBQUVGLEdBQUUsR0FBSSxHQUFHSSxFQUFFLE9BQU9BLEVBQUVKLEdBQUUsR0FBSSxJQUFJSyxFQUFFLElBQUlDLE1BQU0sdUJBQXVCTixFQUFFLEtBQUssTUFBTUssRUFBRUUsS0FBSyxtQkFBbUJGLEVBQUUsSUFBSUcsRUFBRVgsRUFBRUcsSUFBSVMsWUFBWWIsRUFBRUksR0FBRyxHQUFHVSxLQUFLRixFQUFFQyxRQUFRLFNBQVNkLEdBQUcsSUFBSUUsRUFBRUQsRUFBRUksR0FBRyxHQUFHTCxHQUFHLE9BQU9JLEVBQUVGLEdBQUlGLElBQUlhLEVBQUVBLEVBQUVDLFFBQVFkLEVBQUVDLEVBQUVDLEVBQUVDLEdBQUcsT0FBT0QsRUFBRUcsR0FBR1MsUUFBa0QsSUFBSSxJQUExQ0wsRUFBa0IsbUJBQVRELFNBQXFCQSxRQUFnQkgsRUFBRSxFQUFFQSxFQUFFRixFQUFFYSxPQUFPWCxJQUFJRCxFQUFFRCxFQUFFRSxJQUFJLE9BQU9ELEVBQXZiLEVBQTRiYSxHQUFHLFNBQVNULEVBQVFVLEVBQU9KLEdBQ3ZkLGFBRUFLLE9BQU9DLGVBQWVOLEVBQVMsY0FDM0JPLE9BQU8sSUFhWFAsRUFBUVEsUUFYUixXQUVJLElBRFlDLFNBQVNDLGNBQWMsYUFDdkIsQ0FDUixJQUFJQyxFQUFZRixTQUFTRyxjQUFjLE9BQ3ZDRCxFQUFV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QUFTNUUsTUFBTTJCLElBR3RDb0QsUUFBUUMsVUFBVUMsS0FBSyxXQUNmUCxHQUFZQSxFQUFTbkUsVUFDckJpRSxFQUFPVSxlQUFpQlIsRUFBU25FLFFBQVFpRSxFQUFPVSxnQkFBa0JSLEVBQVNuRSxhQUVoRjBFLEtBQUssV0FDQUwsR0FBWUEsRUFBUzNFLGdCQUNyQnVFLEVBQU9NLFlBQWNGLEVBQVMzRSxjQUFjdUUsRUFBT00sYUFBZUYsRUFBUzNFLG1CQUVoRmdGLEtBQUssV0FDQUwsR0FBWUEsRUFBU3ZFLFVBQ3JCbUUsRUFBT00sWUFBY0YsRUFBU3ZFLFFBQVFtRSxFQUFPTSxhQUFlRixFQUFTdkUsYUFFMUU0RSxLQUFLLFdBQ0pULEVBQU9HLFlBQWNDLEVBQ3JCSixFQUFPVSxlQUFpQlYsRUFBT00sY0FDaENLLE1BQU0sU0FBVUMsR0FDZkMsUUFBUUMsSUFBSUYsVUFLakJwQixFQWhGRSxHQW1GYnBNLEVBQVFRLFFBQVU0TCxZQUVQIiwiZmlsZSI6Im1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pKHsxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcblwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5mdW5jdGlvbiBhZGRBYm91dCgpIHtcbiAgICB2YXIgYWJvdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Fib3V0RGl2XCIpO1xuICAgIGlmICghYWJvdXQpIHtcbiAgICAgICAgdmFyIF9hYm91dERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIF9hYm91dERpdi5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImFib3V0RGl2XCIpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKF9hYm91dERpdik7XG4gICAgfVxuXG4gICAgYWJvdXREaXYuaW5uZXJIVE1MID0gXCI8aDE+PGEgaHJlZj0naHR0cHM6Ly9ydS53aWtpcGVkaWEub3JnL3dpa2kvJUQwJTk4JUQwJUIzJUQxJTgwJUQwJUIwXyVDMiVBQiVEMCU5NiVEMCVCOCVEMCVCNyVEMCVCRCVEMSU4QyVDMiVCQic+XFx1MDQxOFxcdTA0MzNcXHUwNDQwXFx1MDQzMCBcXHhBQlxcdTA0MTZcXHUwNDM4XFx1MDQzN1xcdTA0M0RcXHUwNDRDXFx4QkI8L2E+PC9oMT5cXG48cD5cXHUwNDFDXFx1MDQzNVxcdTA0NDFcXHUwNDQyXFx1MDQzRSBcXHUwNDM0XFx1MDQzNVxcdTA0MzlcXHUwNDQxXFx1MDQ0MlxcdTA0MzJcXHUwNDM4XFx1MDQ0RiBcXHUwNDREXFx1MDQ0MlxcdTA0M0VcXHUwNDM5IFxcdTA0MzhcXHUwNDMzXFx1MDQ0MFxcdTA0NEIgXFx1MjAxNCBcXHhBQlxcdTA0MzJcXHUwNDQxXFx1MDQzNVxcdTA0M0JcXHUwNDM1XFx1MDQzRFxcdTA0M0RcXHUwNDMwXFx1MDQ0RlxceEJCIFxcdTIwMTQgXFx1MDQ0RFxcdTA0NDJcXHUwNDNFIFxcdTA0NDBcXHUwNDMwXFx1MDQzN1xcdTA0M0NcXHUwNDM1XFx1MDQ0N1xcdTA0MzVcXHUwNDNEXFx1MDQzRFxcdTA0MzBcXHUwNDRGIFxcdTA0M0RcXHUwNDMwIFxcdTA0M0FcXHUwNDNCXFx1MDQzNVxcdTA0NDJcXHUwNDNBXFx1MDQzOCBcXHUwNDNGXFx1MDQzRVxcdTA0MzJcXHUwNDM1XFx1MDQ0MFxcdTA0NDVcXHUwNDNEXFx1MDQzRVxcdTA0NDFcXHUwNDQyXFx1MDQ0QyBcXHUwNDM4XFx1MDQzQlxcdTA0MzhcXG5cXHUwNDNGXFx1MDQzQlxcdTA0M0VcXHUwNDQxXFx1MDQzQVxcdTA0M0VcXHUwNDQxXFx1MDQ0MlxcdTA0NEMgXFx1MjAxNCBcXHUwNDMxXFx1MDQzNVxcdTA0MzdcXHUwNDMzXFx1MDQ0MFxcdTA0MzBcXHUwNDNEXFx1MDQzOFxcdTA0NDdcXHUwNDNEXFx1MDQzMFxcdTA0NEYsIFxcdTA0M0VcXHUwNDMzXFx1MDQ0MFxcdTA0MzBcXHUwNDNEXFx1MDQzOFxcdTA0NDdcXHUwNDM1XFx1MDQzRFxcdTA0M0RcXHUwNDMwXFx1MDQ0RiwgXFx1MDQzOFxcdTA0M0JcXHUwNDM4IFxcdTA0MzdcXHUwNDMwXFx1MDQzQ1xcdTA0M0FcXHUwNDNEXFx1MDQ0M1xcdTA0NDJcXHUwNDMwXFx1MDQ0RiAoXFx1MDQzMiBcXHUwNDNGXFx1MDQ0MFxcdTA0MzVcXHUwNDM0XFx1MDQzNVxcdTA0M0JcXHUwNDM1IFxcdTIwMTQgXFx1MDQzMVxcdTA0MzVcXHUwNDQxXFx1MDQzQVxcdTA0M0VcXHUwNDNEXFx1MDQzNVxcdTA0NDdcXHUwNDNEXFx1MDQzMFxcdTA0NEYgXFx1MDQzRlxcdTA0M0JcXHUwNDNFXFx1MDQ0MVxcdTA0M0FcXHUwNDNFXFx1MDQ0MVxcdTA0NDJcXHUwNDRDKS48L3A+XFxuPHA+XFx1MDQxQVxcdTA0MzBcXHUwNDM2XFx1MDQzNFxcdTA0MzBcXHUwNDRGIFxcdTA0M0FcXHUwNDNCXFx1MDQzNVxcdTA0NDJcXHUwNDNBXFx1MDQzMCBcXHUwNDNEXFx1MDQzMCBcXHUwNDREXFx1MDQ0MlxcdTA0M0VcXHUwNDM5IFxcdTA0M0ZcXHUwNDNFXFx1MDQzMlxcdTA0MzVcXHUwNDQwXFx1MDQ0NVxcdTA0M0RcXHUwNDNFXFx1MDQ0MVxcdTA0NDJcXHUwNDM4IFxcdTA0M0NcXHUwNDNFXFx1MDQzNlxcdTA0MzVcXHUwNDQyIFxcdTA0M0RcXHUwNDMwXFx1MDQ0NVxcdTA0M0VcXHUwNDM0XFx1MDQzOFxcdTA0NDJcXHUwNDRDXFx1MDQ0MVxcdTA0NEYgXFx1MDQzMiBcXHUwNDM0XFx1MDQzMlxcdTA0NDNcXHUwNDQ1IFxcdTA0NDFcXHUwNDNFXFx1MDQ0MVxcdTA0NDJcXHUwNDNFXFx1MDQ0RlxcdTA0M0RcXHUwNDM4XFx1MDQ0RlxcdTA0NDU6IFxcdTA0MzFcXHUwNDRCXFx1MDQ0MlxcdTA0NEMgXFx4QUJcXHUwNDM2XFx1MDQzOFxcdTA0MzJcXHUwNDNFXFx1MDQzOVxceEJCIFxcbihcXHUwNDM3XFx1MDQzMFxcdTA0M0ZcXHUwNDNFXFx1MDQzQlxcdTA0M0RcXHUwNDM1XFx1MDQzRFxcdTA0M0RcXHUwNDNFXFx1MDQzOSkgXFx1MDQzOFxcdTA0M0JcXHUwNDM4IFxcdTA0MzFcXHUwNDRCXFx1MDQ0MlxcdTA0NEMgXFx4QUJcXHUwNDNDXFx1MDQ1MVxcdTA0NDBcXHUwNDQyXFx1MDQzMlxcdTA0M0VcXHUwNDM5XFx4QkIgKFxcdTA0M0ZcXHUwNDQzXFx1MDQ0MVxcdTA0NDJcXHUwNDNFXFx1MDQzOSkuIFxcdTA0MUFcXHUwNDNCXFx1MDQzNVxcdTA0NDJcXHUwNDNBXFx1MDQzMCBcXHUwNDM4XFx1MDQzQ1xcdTA0MzVcXHUwNDM1XFx1MDQ0MiBcXHUwNDMyXFx1MDQzRVxcdTA0NDFcXHUwNDM1XFx1MDQzQ1xcdTA0NEMgXFx1MDQ0MVxcdTA0M0VcXHUwNDQxXFx1MDQzNVxcdTA0MzRcXHUwNDM1XFx1MDQzOSwgXFx1MDQzRVxcdTA0M0FcXHUwNDQwXFx1MDQ0M1xcdTA0MzZcXHUwNDMwXFx1MDQ0RVxcdTA0NDlcXHUwNDM4XFx1MDQ0NSBcXHUwNDM1XFx1MDQ1MS48L3A+XFxuPHVsPiBcXHUwNDIwXFx1MDQzMFxcdTA0NDFcXHUwNDNGXFx1MDQ0MFxcdTA0MzVcXHUwNDM0XFx1MDQzNVxcdTA0M0JcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDM1IFxcdTA0MzZcXHUwNDM4XFx1MDQzMlxcdTA0NEJcXHUwNDQ1IFxcdTA0M0FcXHUwNDNCXFx1MDQzNVxcdTA0NDJcXHUwNDNFXFx1MDQzQSBcXHUwNDMyIFxcdTA0M0RcXHUwNDMwXFx1MDQ0N1xcdTA0MzBcXHUwNDNCXFx1MDQzNSBcXHUwNDM4XFx1MDQzM1xcdTA0NDBcXHUwNDRCIFxcdTA0M0RcXHUwNDMwXFx1MDQzN1xcdTA0NEJcXHUwNDMyXFx1MDQzMFxcdTA0MzVcXHUwNDQyXFx1MDQ0MVxcdTA0NEYgXFx1MDQzRlxcdTA0MzVcXHUwNDQwXFx1MDQzMlxcdTA0NEJcXHUwNDNDIFxcdTA0M0ZcXHUwNDNFXFx1MDQzQVxcdTA0M0VcXHUwNDNCXFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzNVxcdTA0M0MuIFxcdTA0MUFcXHUwNDMwXFx1MDQzNlxcdTA0MzRcXHUwNDNFXFx1MDQzNSBcXHUwNDQxXFx1MDQzQlxcdTA0MzVcXHUwNDM0XFx1MDQ0M1xcdTA0NEVcXHUwNDQ5XFx1MDQzNVxcdTA0MzUgXFxuXFx1MDQzRlxcdTA0M0VcXHUwNDNBXFx1MDQzRVxcdTA0M0JcXHUwNDM1XFx1MDQzRFxcdTA0MzhcXHUwNDM1IFxcdTA0NDBcXHUwNDMwXFx1MDQ0MVxcdTA0NDFcXHUwNDQ3XFx1MDQzOFxcdTA0NDJcXHUwNDRCXFx1MDQzMlxcdTA0MzBcXHUwNDM1XFx1MDQ0MlxcdTA0NDFcXHUwNDRGIFxcdTA0M0RcXHUwNDMwIFxcdTA0M0VcXHUwNDQxXFx1MDQzRFxcdTA0M0VcXHUwNDMyXFx1MDQzNSBcXHUwNDNGXFx1MDQ0MFxcdTA0MzVcXHUwNDM0XFx1MDQ0QlxcdTA0MzRcXHUwNDQzXFx1MDQ0OVxcdTA0MzVcXHUwNDMzXFx1MDQzRSBcXHUwNDNGXFx1MDQzRSBcXHUwNDQyXFx1MDQzMFxcdTA0M0FcXHUwNDM4XFx1MDQzQyBcXHUwNDNGXFx1MDQ0MFxcdTA0MzBcXHUwNDMyXFx1MDQzOFxcdTA0M0JcXHUwNDMwXFx1MDQzQzpcXG48bGk+XFx1MDQzMiBcXHUwNDNGXFx1MDQ0M1xcdTA0NDFcXHUwNDQyXFx1MDQzRVxcdTA0MzkgKFxcdTA0M0NcXHUwNDUxXFx1MDQ0MFxcdTA0NDJcXHUwNDMyXFx1MDQzRVxcdTA0MzkpIFxcdTA0M0FcXHUwNDNCXFx1MDQzNVxcdTA0NDJcXHUwNDNBXFx1MDQzNSwgXFx1MDQ0MFxcdTA0NEZcXHUwNDM0XFx1MDQzRVxcdTA0M0MgXFx1MDQ0MSBcXHUwNDNBXFx1MDQzRVxcdTA0NDJcXHUwNDNFXFx1MDQ0MFxcdTA0M0VcXHUwNDM5IFxcdTA0NDBcXHUwNDNFXFx1MDQzMlxcdTA0M0RcXHUwNDNFIFxcdTA0NDJcXHUwNDQwXFx1MDQzOCBcXHUwNDM2XFx1MDQzOFxcdTA0MzJcXHUwNDRCXFx1MDQzNSBcXHUwNDNBXFx1MDQzQlxcdTA0MzVcXHUwNDQyXFx1MDQzQVxcdTA0MzgsIFxcdTA0MzdcXHUwNDMwXFx1MDQ0MFxcdTA0M0VcXHUwNDM2XFx1MDQzNFxcdTA0MzBcXHUwNDM1XFx1MDQ0MlxcdTA0NDFcXHUwNDRGIFxcdTA0MzZcXHUwNDM4XFx1MDQzN1xcdTA0M0RcXHUwNDRDOzwvbGk+XFxuPGxpPlxcdTA0MzVcXHUwNDQxXFx1MDQzQlxcdTA0MzggXFx1MDQ0MyBcXHUwNDM2XFx1MDQzOFxcdTA0MzJcXHUwNDNFXFx1MDQzOSBcXHUwNDNBXFx1MDQzQlxcdTA0MzVcXHUwNDQyXFx1MDQzQVxcdTA0MzggXFx1MDQzNVxcdTA0NDFcXHUwNDQyXFx1MDQ0QyBcXHUwNDM0XFx1MDQzMlxcdTA0MzUgXFx1MDQzOFxcdTA0M0JcXHUwNDM4IFxcdTA0NDJcXHUwNDQwXFx1MDQzOCBcXHUwNDM2XFx1MDQzOFxcdTA0MzJcXHUwNDRCXFx1MDQzNSBcXHUwNDQxXFx1MDQzRVxcdTA0NDFcXHUwNDM1XFx1MDQzNFxcdTA0M0FcXHUwNDM4LCBcXHUwNDQyXFx1MDQzRSBcXHUwNDREXFx1MDQ0MlxcdTA0MzAgXFx1MDQzQVxcdTA0M0JcXHUwNDM1XFx1MDQ0MlxcdTA0M0FcXHUwNDMwIFxcdTA0M0ZcXHUwNDQwXFx1MDQzRVxcdTA0MzRcXHUwNDNFXFx1MDQzQlxcdTA0MzZcXHUwNDMwXFx1MDQzNVxcdTA0NDIgXFx1MDQzNlxcdTA0MzhcXHUwNDQyXFx1MDQ0QzsgXFxuXFx1MDQzMiBcXHUwNDNGXFx1MDQ0MFxcdTA0M0VcXHUwNDQyXFx1MDQzOFxcdTA0MzJcXHUwNDNEXFx1MDQzRVxcdTA0M0MgXFx1MDQ0MVxcdTA0M0JcXHUwNDQzXFx1MDQ0N1xcdTA0MzBcXHUwNDM1LCBcXHUwNDM1XFx1MDQ0MVxcdTA0M0JcXHUwNDM4IFxcdTA0NDFcXHUwNDNFXFx1MDQ0MVxcdTA0MzVcXHUwNDM0XFx1MDQzNVxcdTA0MzkgXFx1MDQzQ1xcdTA0MzVcXHUwNDNEXFx1MDQ0Q1xcdTA0NDhcXHUwNDM1IFxcdTA0MzRcXHUwNDMyXFx1MDQ0M1xcdTA0NDUgXFx1MDQzOFxcdTA0M0JcXHUwNDM4IFxcdTA0MzFcXHUwNDNFXFx1MDQzQlxcdTA0NENcXHUwNDQ4XFx1MDQzNSBcXHUwNDQyXFx1MDQ0MFxcdTA0NTFcXHUwNDQ1LCBcXHUwNDNBXFx1MDQzQlxcdTA0MzVcXHUwNDQyXFx1MDQzQVxcdTA0MzAgXFx1MDQ0M1xcdTA0M0NcXHUwNDM4XFx1MDQ0MFxcdTA0MzBcXHUwNDM1XFx1MDQ0MiAoXFx4QUJcXHUwNDNFXFx1MDQ0MiBcXHUwNDNFXFx1MDQzNFxcdTA0MzhcXHUwNDNEXFx1MDQzRVxcdTA0NDdcXHUwNDM1XFx1MDQ0MVxcdTA0NDJcXHUwNDMyXFx1MDQzMFxceEJCIFxcblxcdTA0MzhcXHUwNDNCXFx1MDQzOCBcXHhBQlxcdTA0M0VcXHUwNDQyIFxcdTA0M0ZcXHUwNDM1XFx1MDQ0MFxcdTA0MzVcXHUwNDNEXFx1MDQzMFxcdTA0NDFcXHUwNDM1XFx1MDQzQlxcdTA0NTFcXHUwNDNEXFx1MDQzRFxcdTA0M0VcXHUwNDQxXFx1MDQ0MlxcdTA0MzhcXHhCQik8L2xpPlxcbjwvdWw+XFxuPHA+XFx1MDQxOFxcdTA0MzNcXHUwNDQwXFx1MDQzRVxcdTA0M0EgXFx1MDQzRFxcdTA0MzUgXFx1MDQzRlxcdTA0NDBcXHUwNDM4XFx1MDQzRFxcdTA0MzhcXHUwNDNDXFx1MDQzMFxcdTA0MzVcXHUwNDQyIFxcdTA0M0ZcXHUwNDQwXFx1MDQ0RlxcdTA0M0NcXHUwNDNFXFx1MDQzM1xcdTA0M0UgXFx1MDQ0M1xcdTA0NDdcXHUwNDMwXFx1MDQ0MVxcdTA0NDJcXHUwNDM4XFx1MDQ0RiBcXHUwNDMyIFxcdTA0MzhcXHUwNDMzXFx1MDQ0MFxcdTA0MzUsIFxcdTA0MzAgXFx1MDQzQlxcdTA0MzhcXHUwNDQ4XFx1MDQ0QyBcXHUwNDQwXFx1MDQzMFxcdTA0NDFcXHUwNDQxXFx1MDQ0MlxcdTA0MzBcXHUwNDMyXFx1MDQzQlxcdTA0NEZcXHUwNDM1XFx1MDQ0MiBcXHUwNDM4XFx1MDQzQlxcdTA0MzggXFx1MDQzM1xcdTA0MzVcXHUwNDNEXFx1MDQzNVxcdTA0NDBcXHUwNDM4XFx1MDQ0MFxcdTA0NDNcXHUwNDM1XFx1MDQ0MiBcXHUwNDNEXFx1MDQzMFxcdTA0NDdcXHUwNDMwXFx1MDQzQlxcdTA0NENcXHUwNDNEXFx1MDQ0M1xcdTA0NEUgXFxuXFx1MDQzQVxcdTA0M0VcXHUwNDNEXFx1MDQ0NFxcdTA0MzhcXHUwNDMzXFx1MDQ0M1xcdTA0NDBcXHUwNDMwXFx1MDQ0NlxcdTA0MzhcXHUwNDRFIFxceEFCXFx1MDQzNlxcdTA0MzhcXHUwNDMyXFx1MDQ0QlxcdTA0NDVcXHhCQiBcXHUwNDNBXFx1MDQzQlxcdTA0MzVcXHUwNDQyXFx1MDQzRVxcdTA0M0EsIFxcdTA0M0FcXHUwNDNFXFx1MDQ0MlxcdTA0M0VcXHUwNDQwXFx1MDQ0QlxcdTA0MzUgXFx1MDQzN1xcdTA0MzBcXHUwNDQyXFx1MDQzNVxcdTA0M0MgXFx1MDQzMlxcdTA0MzdcXHUwNDMwXFx1MDQzOFxcdTA0M0NcXHUwNDNFXFx1MDQzNFxcdTA0MzVcXHUwNDM5XFx1MDQ0MVxcdTA0NDJcXHUwNDMyXFx1MDQ0M1xcdTA0NEVcXHUwNDQyIFxcdTA0NDFcXHUwNDNFXFx1MDQzM1xcdTA0M0JcXHUwNDMwXFx1MDQ0MVxcdTA0M0RcXHUwNDNFIFxcdTA0M0ZcXHUwNDQwXFx1MDQzMFxcdTA0MzJcXHUwNDM4XFx1MDQzQlxcdTA0MzBcXHUwNDNDIFxcdTA0NDNcXHUwNDM2XFx1MDQzNSBcXHUwNDMxXFx1MDQzNVxcdTA0MzcgXFx1MDQzNVxcdTA0MzNcXHUwNDNFIFxcdTA0NDNcXHUwNDQ3XFx1MDQzMFxcdTA0NDFcXHUwNDQyXFx1MDQzOFxcdTA0NEYgXFxuKFxcdTA0M0VcXHUwNDNEIFxcdTA0NEZcXHUwNDMyXFx1MDQzQlxcdTA0NEZcXHUwNDM1XFx1MDQ0MlxcdTA0NDFcXHUwNDRGIFxcdTA0M0RcXHUwNDMwXFx1MDQzMVxcdTA0M0JcXHUwNDRFXFx1MDQzNFxcdTA0MzBcXHUwNDQyXFx1MDQzNVxcdTA0M0JcXHUwNDM1XFx1MDQzQykuPC9wPlxcbjxwPlxcdTA0MUZcXHUwNDNFXFx1MDQzQlxcdTA0MzUgXFx1MDQzRVxcdTA0NDJcXHUwNDNFXFx1MDQzMVxcdTA0NDBcXHUwNDMwXFx1MDQzNlxcdTA0MzBcXHUwNDM1XFx1MDQ0MiBcXHUwNDQyXFx1MDQzNVxcdTA0M0FcXHUwNDQzXFx1MDQ0OVxcdTA0MzVcXHUwNDM1IFxcdTA0M0ZcXHUwNDNFXFx1MDQzQVxcdTA0M0VcXHUwNDNCXFx1MDQzNVxcdTA0M0RcXHUwNDM4XFx1MDQzNS4gXFx1MDQxOCBcXHUwNDNGXFx1MDQzRVxcdTA0MzdcXHUwNDMyXFx1MDQzRVxcdTA0M0JcXHUwNDRGXFx1MDQzNVxcdTA0NDIgXFx1MDQzRlxcdTA0M0VcXHUwNDNCXFx1MDQ0Q1xcdTA0MzdcXHUwNDNFXFx1MDQzMlxcdTA0MzBcXHUwNDQyXFx1MDQzNVxcdTA0M0JcXHUwNDRFIFxcdTA0MzJcXHUwNDM3XFx1MDQzMFxcdTA0MzhcXHUwNDNDXFx1MDQzRVxcdTA0MzRcXHUwNDM1XFx1MDQzOVxcdTA0NDFcXHUwNDQyXFx1MDQzMlxcdTA0M0VcXHUwNDMyXFx1MDQzMFxcdTA0NDJcXHUwNDRDIFxcdTA0NDEgXFx1MDQzOFxcdTA0MzNcXHUwNDQwXFx1MDQzRVxcdTA0MzkuIFxcblxcdTA0MUFcXHUwNDNCXFx1MDQzOFxcdTA0M0EgXFx1MDQzRlxcdTA0M0UgXFx1MDQzRlxcdTA0M0VcXHUwNDNCXFx1MDQ0RSBcXHUwNDMyXFx1MDQ0QlxcdTA0MzdcXHUwNDRCXFx1MDQzMlxcdTA0MzBcXHUwNDM1XFx1MDQ0MiBcXHUwNDM4XFx1MDQzRFxcdTA0MzJcXHUwNDM1XFx1MDQ0MFxcdTA0NDFcXHUwNDM4XFx1MDQ0RSBcXHUwNDQxXFx1MDQzRVxcdTA0NDFcXHUwNDQyXFx1MDQzRVxcdTA0NEZcXHUwNDNEXFx1MDQzOFxcdTA0NEYgXFx1MDQzQVxcdTA0M0JcXHUwNDM1XFx1MDQ0MlxcdTA0M0FcXHUwNDM4LCBcXHUwNDNGXFx1MDQzRSBcXHUwNDNBXFx1MDQzRVxcdTA0NDJcXHUwNDNFXFx1MDQ0MFxcdTA0M0VcXHUwNDM5IFxcdTA0M0ZcXHUwNDNFXFx1MDQzQlxcdTA0NENcXHUwNDM3XFx1MDQzRVxcdTA0MzJcXHUwNDMwXFx1MDQ0MlxcdTA0MzVcXHUwNDNCXFx1MDQ0QyBcXHUwNDNBXFx1MDQzQlxcdTA0MzhcXHUwNDNBXFx1MDQzRFxcdTA0NDNcXHUwNDNCICggXFx1MDQzNlxcdTA0MzhcXHUwNDMyXFx1MDQzMFxcdTA0NEYgLSBcXG5cXHUwNDQzXFx1MDQzQ1xcdTA0MzhcXHUwNDQwXFx1MDQzMFxcdTA0MzVcXHUwNDQyLCBcXHUwNDNDXFx1MDQzNVxcdTA0NDBcXHUwNDQyXFx1MDQzMlxcdTA0MzBcXHUwNDRGIC0gXFx1MDQzRVxcdTA0MzZcXHUwNDM4XFx1MDQzMlxcdTA0MzBcXHUwNDM1XFx1MDQ0MiApLjwvcD5cIjtcbn1cblxuZXhwb3J0cy5kZWZhdWx0ID0gYWRkQWJvdXQ7XG5cbn0se31dLDI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBDYWxjdWxhdGluZ0dhbWVMaWZlID0gZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENhbGN1bGF0aW5nR2FtZUxpZmUobGluZSwgY29sdW1uKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDYWxjdWxhdGluZ0dhbWVMaWZlKTtcblxuICAgICAgICB0aGlzLmdhbWVMaW5lTnVtYmV3ID0gbGluZSB8fCA0MDtcbiAgICAgICAgdGhpcy5nYW1lQ29sdW1uTnVtYmV3ID0gY29sdW1uIHx8IDQwO1xuICAgICAgICB0aGlzLmdhbWVMaWZlQXJyYXkgPSB0aGlzLmNyZWF0ZUdhbWVBcnJheShsaW5lLCBjb2x1bW4pO1xuICAgICAgICB0aGlzLmNvbnRhaW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY29udGFpbicpO1xuICAgICAgICB0aGlzLmdhbWVTcGVlZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcmFuZ2VHYW1lU3BlZWRcIik7XG4gICAgICAgIGlmICh0aGlzLnN0YWdlSGlzdG9yeSkge1xuICAgICAgICAgICAgdGhpcy5zdGFnZUhpc3RvcnkucHVzaCh0aGlzLmdhbWVMaWZlQXJyYXkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zdGFnZUhpc3RvcnkgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuc3RhZ2VIaXN0b3J5LnB1c2godGhpcy5nYW1lTGlmZUFycmF5KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnN1YnNjcmliZVRvQ2xpY2tPbkFycmF5KCk7XG4gICAgICAgIHRoaXMucGxheVN0YXRlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5jdXJyZW50QXJyYXlJbmRleCA9IHRoaXMuc3RhZ2VIaXN0b3J5Lmxlbmd0aCAtIDE7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKENhbGN1bGF0aW5nR2FtZUxpZmUsIFt7XG4gICAgICAgIGtleTogJ3N1YnNjcmliZVRvQ2xpY2tPbkFycmF5JyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHN1YnNjcmliZVRvQ2xpY2tPbkFycmF5KCkge1xuICAgICAgICAgICAgdGhpcy53cmFwcGVyQ2xpY2tPbkFycmF5ID0gdGhpcy5jbGlja09uQXJyYXkuYmluZCh0aGlzKTtcbiAgICAgICAgICAgIHRoaXMuY29udGFpbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMud3JhcHBlckNsaWNrT25BcnJheSk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2NsaWNrT25BcnJheScsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBjbGlja09uQXJyYXkoZXYpIHtcbiAgICAgICAgICAgIHZhciBoZWlnaHQgPSB0aGlzLmNvbnRhaW4uY2xpZW50SGVpZ2h0O1xuICAgICAgICAgICAgdmFyIHdpZHRoID0gdGhpcy5jb250YWluLmNsaWVudFdpZHRoO1xuICAgICAgICAgICAgdmFyIHggPSBldi5vZmZzZXRYO1xuICAgICAgICAgICAgdmFyIHkgPSBldi5vZmZzZXRZO1xuICAgICAgICAgICAgdmFyIHJvd0hlaWdodCA9IGhlaWdodCAvIHRoaXMuZ2FtZUxpbmVOdW1iZXc7XG4gICAgICAgICAgICB2YXIgY2VsbFdpZHRoID0gd2lkdGggLyB0aGlzLmdhbWVDb2x1bW5OdW1iZXc7XG4gICAgICAgICAgICB2YXIgb2Zmc2V0WCA9IE1hdGguZmxvb3IoeCAvIGNlbGxXaWR0aCk7XG4gICAgICAgICAgICB2YXIgb2Zmc2V0WSA9IE1hdGguZmxvb3IoeSAvIHJvd0hlaWdodCk7XG4gICAgICAgICAgICB2YXIgY2VsbCA9IHRoaXMuc3RhZ2VIaXN0b3J5W3RoaXMuY3VycmVudEFycmF5SW5kZXhdW29mZnNldFldW29mZnNldFhdO1xuICAgICAgICAgICAgaWYgKGNlbGwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnN0YWdlSGlzdG9yeVt0aGlzLmN1cnJlbnRBcnJheUluZGV4XVtvZmZzZXRZXVtvZmZzZXRYXSA9IDA7XG4gICAgICAgICAgICB9IGVsc2UgdGhpcy5zdGFnZUhpc3RvcnlbdGhpcy5jdXJyZW50QXJyYXlJbmRleF1bb2Zmc2V0WV1bb2Zmc2V0WF0gPSAxO1xuICAgICAgICAgICAgdGhpcy5zdGFnZUhpc3Rvcnkuc3BsaWNlKHRoaXMuY3VycmVudEFycmF5SW5kZXggKyAxKTtcbiAgICAgICAgICAgIHRoaXMuZXZlbnRCdXMudHJpZ2dlcigndmlldycsIHRoaXMpO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdjcmVhdGVHYW1lQXJyYXknLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlR2FtZUFycmF5KGxpbmUsIGNvbHVtbikge1xuICAgICAgICAgICAgdmFyIGFycmF5ID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpbmU7ICsraSkge1xuICAgICAgICAgICAgICAgIHZhciBuZXdSb3cgPSBbXTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGNvbHVtbjsgKytqKSB7XG4gICAgICAgICAgICAgICAgICAgIG5ld1Jvdy5wdXNoKDApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBhcnJheS5wdXNoKG5ld1Jvdyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFkZFRvQXJyYXlGaXhlZEl0ZW0oYXJyYXkpO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdhZGRUb0FycmF5Rml4ZWRJdGVtJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGFkZFRvQXJyYXlGaXhlZEl0ZW0oYXJyYXkpIHtcbiAgICAgICAgICAgIHZhciBjZW50ZXJDb2x1bW4gPSBNYXRoLnJvdW5kKGFycmF5WzBdLmxlbmd0aCAvIDIpO1xuICAgICAgICAgICAgdmFyIGNlbnRlckxpbmUgPSBNYXRoLnJvdW5kKGFycmF5Lmxlbmd0aCAvIDIpO1xuXG4gICAgICAgICAgICBhcnJheVtjZW50ZXJMaW5lXVtjZW50ZXJDb2x1bW5dID0gMTtcbiAgICAgICAgICAgIGFycmF5W2NlbnRlckxpbmUgLSAxXVtjZW50ZXJDb2x1bW5dID0gMTtcbiAgICAgICAgICAgIGFycmF5W2NlbnRlckxpbmUgKyAxXVtjZW50ZXJDb2x1bW5dID0gMTtcbiAgICAgICAgICAgIGFycmF5W2NlbnRlckxpbmUgKyAxXVtjZW50ZXJDb2x1bW5dID0gMTtcbiAgICAgICAgICAgIGFycmF5W2NlbnRlckxpbmUgKyAxXVtjZW50ZXJDb2x1bW4gKyAxXSA9IDE7XG5cbiAgICAgICAgICAgIHJldHVybiBhcnJheTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnc3RhcnRDYWxjdWxhdGUnLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gc3RhcnRDYWxjdWxhdGUoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5zdGFnZUhpc3RvcnkubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGN1cnJlbnRMaWZlU3RhZ2UgPSB0aGlzLnN0YWdlSGlzdG9yeVt0aGlzLmN1cnJlbnRBcnJheUluZGV4XTtcbiAgICAgICAgICAgICAgICB0aGlzLmNhbGN1bGF0ZUdhbWVMaWZlKGN1cnJlbnRMaWZlU3RhZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5jdXJyZW50QXJyYXlJbmRleCA9IHRoaXMuc3RhZ2VIaXN0b3J5Lmxlbmd0aCAtIDE7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2NhbGN1bGF0ZUdhbWVMaWZlJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGNhbGN1bGF0ZUdhbWVMaWZlKHN0YWdlTGlmZSkge1xuICAgICAgICAgICAgdmFyIG5ld1N0YWdlT2ZMaWZlID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuZ2FtZUxpbmVOdW1iZXc7ICsraSkge1xuICAgICAgICAgICAgICAgIHZhciBuZXdSb3dPblN0YWdlT2ZMaWZlID0gW107XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB0aGlzLmdhbWVDb2x1bW5OdW1iZXc7ICsraikge1xuICAgICAgICAgICAgICAgICAgICB2YXIgYWRqYWNlbnRFbGVtZW50TGVuZ3RoID0gdGhpcy5nZXRBZGphY2VudEVsZW1lbnRMZW5ndGgoaSwgaiwgc3RhZ2VMaWZlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFkamFjZW50RWxlbWVudExlbmd0aCA9PT0gMyAmJiAhc3RhZ2VMaWZlW2ldW2pdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdSb3dPblN0YWdlT2ZMaWZlLnB1c2goMSk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoYWRqYWNlbnRFbGVtZW50TGVuZ3RoID09PSAyIHx8IGFkamFjZW50RWxlbWVudExlbmd0aCA9PT0gMyAmJiBzdGFnZUxpZmVbaV1bal0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld1Jvd09uU3RhZ2VPZkxpZmUucHVzaChzdGFnZUxpZmVbaV1bal0pO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGFkamFjZW50RWxlbWVudExlbmd0aCA8IDIgfHwgYWRqYWNlbnRFbGVtZW50TGVuZ3RoID4gMykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Um93T25TdGFnZU9mTGlmZS5wdXNoKDApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG5ld1N0YWdlT2ZMaWZlLnB1c2gobmV3Um93T25TdGFnZU9mTGlmZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnN0YWdlSGlzdG9yeS5zcGxpY2UodGhpcy5jdXJyZW50QXJyYXlJbmRleCArIDEpO1xuICAgICAgICAgICAgdGhpcy5zdGFnZUhpc3RvcnkucHVzaChuZXdTdGFnZU9mTGlmZSk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ2dldEFkamFjZW50RWxlbWVudExlbmd0aCcsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRBZGphY2VudEVsZW1lbnRMZW5ndGgoaG9yaXpvbnRhbE51bWJlciwgdmVydGljYWxOdW1iZXIsIHN0YWdlTGlmZSkge1xuICAgICAgICAgICAgdmFyIGNvdW50ID0gMDtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSBob3Jpem9udGFsTnVtYmVyIC0gMTsgaSA8PSBob3Jpem9udGFsTnVtYmVyICsgMTsgKytpKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IHZlcnRpY2FsTnVtYmVyIC0gMTsgaiA8PSB2ZXJ0aWNhbE51bWJlciArIDE7ICsraikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaSA9PT0gaG9yaXpvbnRhbE51bWJlciAmJiBqID09PSB2ZXJ0aWNhbE51bWJlcikgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIGlmICghKGkgPCAwIHx8IGogPCAwIHx8IGkgPiB0aGlzLmdhbWVMaW5lTnVtYmV3IC0gMSB8fCBqID4gdGhpcy5nYW1lQ29sdW1uTnVtYmV3IC0gMSkgJiYgc3RhZ2VMaWZlW2ldW2pdID09PSAxKSArK2NvdW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjb3VudDtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAncmVwZWF0R2FtZScsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiByZXBlYXRHYW1lKCkge1xuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKF90aGlzLnBsYXlTdGF0ZSkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5zdGFydENhbGN1bGF0ZShfdGhpcy5zdGFnZUhpc3RvcnkpO1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5ldmVudEJ1cy50cmlnZ2VyKCd2aWV3JywgX3RoaXMpO1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5yZXBlYXRHYW1lKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICghX3RoaXMucGxheVN0YXRlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sICt0aGlzLmdhbWVTcGVlZC52YWx1ZSAqIDEwMCk7XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gQ2FsY3VsYXRpbmdHYW1lTGlmZTtcbn0oKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gQ2FsY3VsYXRpbmdHYW1lTGlmZTtcblxufSx7fV0sMzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9jYWxjdWxhdGluZ0dhbWVMaWZlID0gcmVxdWlyZShcIi4vY2FsY3VsYXRpbmdHYW1lTGlmZVwiKTtcblxudmFyIF9jYWxjdWxhdGluZ0dhbWVMaWZlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NhbGN1bGF0aW5nR2FtZUxpZmUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBDb250cm9scyA9IGZ1bmN0aW9uIChfQ2FsY3VsYXRpbmdHYW1lTGlmZSkge1xuICAgIF9pbmhlcml0cyhDb250cm9scywgX0NhbGN1bGF0aW5nR2FtZUxpZmUpO1xuXG4gICAgZnVuY3Rpb24gQ29udHJvbHMoZXZlbnRCdXMpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENvbnRyb2xzKTtcblxuICAgICAgICB2YXIgc2VsZWN0TGluZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc2VsZWN0TGluZVwiKTtcbiAgICAgICAgdmFyIHNlbGVjdENvbHVtbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc2VsZWN0Q29sdW1uXCIpO1xuXG4gICAgICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChDb250cm9scy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKENvbnRyb2xzKSkuY2FsbCh0aGlzLCArc2VsZWN0TGluZS52YWx1ZSwgK3NlbGVjdENvbHVtbi52YWx1ZSwgZXZlbnRCdXMpKTtcblxuICAgICAgICBfdGhpcy5ldmVudEJ1cyA9IGV2ZW50QnVzO1xuICAgICAgICBfdGhpcy5zZWxlY3RMaW5lID0gc2VsZWN0TGluZTtcbiAgICAgICAgX3RoaXMuc2VsZWN0Q29sdW1uID0gc2VsZWN0Q29sdW1uO1xuICAgICAgICBfdGhpcy5idXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNidXR0b25zXCIpO1xuICAgICAgICBfdGhpcy5zdWJzY3JpYmVUb0NsaWNrQnV0dG9uKCk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoQ29udHJvbHMsIFt7XG4gICAgICAgIGtleTogXCJzdWJzY3JpYmVUb0NsaWNrQnV0dG9uXCIsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBzdWJzY3JpYmVUb0NsaWNrQnV0dG9uKCkge1xuICAgICAgICAgICAgdGhpcy53cmFwcGVyQ2xpY2tPbkNvbnRyb2xzQnV0dG9uID0gdGhpcy5jbGlja09uQ29udHJvbHNCdXR0b24uYmluZCh0aGlzKTtcbiAgICAgICAgICAgIHRoaXMuYnV0dG9ucy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy53cmFwcGVyQ2xpY2tPbkNvbnRyb2xzQnV0dG9uKTtcbiAgICAgICAgICAgIHRoaXMucmVwZWF0R2FtZSgpO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6IFwiY2xpY2tPbkNvbnRyb2xzQnV0dG9uXCIsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiBjbGlja09uQ29udHJvbHNCdXR0b24oZXYpIHtcbiAgICAgICAgICAgIHZhciB0YXJnZXQgPSBldi50YXJnZXQ7XG4gICAgICAgICAgICBpZiAodGFyZ2V0LmNsb3Nlc3QoXCIjYmFja1wiKSkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRBcnJheUluZGV4ID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAtLXRoaXMuY3VycmVudEFycmF5SW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRCdXMudHJpZ2dlcigndmlldycsIHRoaXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGFyZ2V0LmNsb3Nlc3QoXCIjZm9yd2FyZFwiKSkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmN1cnJlbnRBcnJheUluZGV4IDwgdGhpcy5zdGFnZUhpc3RvcnkubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgICAgICAgICArK3RoaXMuY3VycmVudEFycmF5SW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRCdXMudHJpZ2dlcigndmlldycsIHRoaXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGFyZ2V0LmNsb3Nlc3QoXCIjcGxheVwiKSkge1xuICAgICAgICAgICAgICAgIGlmICh0YXJnZXQudmFsdWUgPT09IFwiU3RvcFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHRhcmdldC52YWx1ZSA9IFwiUGxheVwiO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBsYXlTdGF0ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGFyZ2V0LnZhbHVlID09PSBcIlBsYXlcIikge1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXQudmFsdWUgPSBcIlN0b3BcIjtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wbGF5U3RhdGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlcGVhdEdhbWUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gQ29udHJvbHM7XG59KF9jYWxjdWxhdGluZ0dhbWVMaWZlMi5kZWZhdWx0KTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gQ29udHJvbHM7XG5cbn0se1wiLi9jYWxjdWxhdGluZ0dhbWVMaWZlXCI6Mn1dLDQ6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfYWJvdXRQYWdlID0gcmVxdWlyZShcIi4vYWJvdXRQYWdlXCIpO1xuXG52YXIgX2Fib3V0UGFnZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9hYm91dFBhZ2UpO1xuXG52YXIgX3dyaXRlQ2FudmFzR2FtZUxpZmUgPSByZXF1aXJlKFwiLi93cml0ZUNhbnZhc0dhbWVMaWZlXCIpO1xuXG52YXIgX3dyaXRlQ2FudmFzR2FtZUxpZmUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfd3JpdGVDYW52YXNHYW1lTGlmZSk7XG5cbnZhciBfd3JpdGVTVkdHYW1lTGlmZSA9IHJlcXVpcmUoXCIuL3dyaXRlU1ZHR2FtZUxpZmVcIik7XG5cbnZhciBfd3JpdGVTVkdHYW1lTGlmZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF93cml0ZVNWR0dhbWVMaWZlKTtcblxudmFyIF9jb250cm9scyA9IHJlcXVpcmUoXCIuL2NvbnRyb2xzXCIpO1xuXG52YXIgX2NvbnRyb2xzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NvbnRyb2xzKTtcblxudmFyIF93cml0ZVRleHRHYW1lTGlmZSA9IHJlcXVpcmUoXCIuL3dyaXRlVGV4dEdhbWVMaWZlXCIpO1xuXG52YXIgX3dyaXRlVGV4dEdhbWVMaWZlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3dyaXRlVGV4dEdhbWVMaWZlKTtcblxudmFyIF9ldmVudEJ1cyA9IHJlcXVpcmUoXCIuLi91dGlscy9ldmVudEJ1c1wiKTtcblxudmFyIF9ldmVudEJ1czIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ldmVudEJ1cyk7XG5cbnZhciBfcm91dGVyID0gcmVxdWlyZShcIi4uL3V0aWxzL3JvdXRlclwiKTtcblxudmFyIF9yb3V0ZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcm91dGVyKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIGV2ZW50QnVzID0gbmV3IF9ldmVudEJ1czIuZGVmYXVsdCgpO1xudmFyIGxpZmVHYW1lID0gdm9pZCAwO1xuXG52YXIgZm9ybUNvbnRyb2xzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb3JtLWNvbnRyb2xzXCIpO1xuZm9ybUNvbnRyb2xzLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgZnVuY3Rpb24gKGV2KSB7XG4gICAgaWYgKGxpZmVHYW1lLnNlbGVjdExpbmUudmFsdWUgPiAxNTApIGxpZmVHYW1lLnNlbGVjdExpbmUudmFsdWUgPSAxNTA7ZWxzZSBpZiAobGlmZUdhbWUuc2VsZWN0TGluZS52YWx1ZSA8IDMpIGxpZmVHYW1lLnNlbGVjdExpbmUudmFsdWUgPSAzO1xuXG4gICAgaWYgKGxpZmVHYW1lLnNlbGVjdENvbHVtbi52YWx1ZSA+IDE1MCkgbGlmZUdhbWUuc2VsZWN0Q29sdW1uLnZhbHVlID0gMTUwO2Vsc2UgaWYgKGxpZmVHYW1lLnNlbGVjdENvbHVtbi52YWx1ZSA8IDMpIGxpZmVHYW1lLnNlbGVjdENvbHVtbi52YWx1ZSA9IDM7XG5cbiAgICB2YXIgdGFyZ2V0ID0gZXYudGFyZ2V0O1xuICAgIGlmICh0YXJnZXQuY2xvc2VzdChcIiNzZWxlY3RMaW5lXCIpIHx8IHRhcmdldC5jbG9zZXN0KFwiI3NlbGVjdENvbHVtblwiKSkge1xuICAgICAgICBsaWZlR2FtZS5jb250YWluLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgbGlmZUdhbWUud3JhcHBlckNsaWNrT25BcnJheSk7XG4gICAgICAgIGxpZmVHYW1lLmJ1dHRvbnMucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBsaWZlR2FtZS53cmFwcGVyQ2xpY2tPbkNvbnRyb2xzQnV0dG9uKTtcbiAgICAgICAgbGlmZUdhbWUgPSBuZXcgX2NvbnRyb2xzMi5kZWZhdWx0KGV2ZW50QnVzKTtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3BsYXknKS52YWx1ZSA9IFwiU3RvcFwiO1xuICAgICAgICBldmVudEJ1cy50cmlnZ2VyKCd2aWV3JywgbGlmZUdhbWUpO1xuICAgIH1cbn0pO1xuXG52YXIgcm91dGVyID0gbmV3IF9yb3V0ZXIyLmRlZmF1bHQoe1xuICAgIHJvdXRlczogW3tcbiAgICAgICAgbmFtZTogJ2luZGV4JyxcbiAgICAgICAgbWF0Y2g6ICcnLFxuICAgICAgICBvbkJlZm9yZUVudGVyOiBmdW5jdGlvbiBvbkJlZm9yZUVudGVyKCkge1xuICAgICAgICAgICAgdmFyIGNvbnRhaW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRhaW5cIik7XG4gICAgICAgICAgICB2YXIgY29udHJvbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRyb2xzXCIpO1xuICAgICAgICAgICAgY29udGFpbi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICBjb250cm9scy5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgIH0sXG4gICAgICAgIG9uRW50ZXI6IGZ1bmN0aW9uIG9uRW50ZXIoKSB7XG4gICAgICAgICAgICB2YXIgaGVhZGVyVGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMVwiKTtcbiAgICAgICAgICAgIGhlYWRlclRleHQuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJoZWFkZXJUZXh0XCIpO1xuICAgICAgICAgICAgaGVhZGVyVGV4dC5pbm5lckhUTUwgPSBcItCS0YvQsdC10YDQuNGC0LUg0YDQtdC20LjQvCDQvtGC0L7QsdGA0LDQttC10L3QuNGPINC40LPRgNGLXCI7XG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGhlYWRlclRleHQpO1xuICAgICAgICB9LFxuICAgICAgICBvbkxlYXZlOiBmdW5jdGlvbiBvbkxlYXZlKCkge1xuICAgICAgICAgICAgdmFyIGhlYWRlclRleHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2hlYWRlclRleHRcIik7XG4gICAgICAgICAgICBoZWFkZXJUZXh0LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1RleHQnLFxuICAgICAgICBtYXRjaDogL1RleHQvLFxuICAgICAgICBvbkJlZm9yZUVudGVyOiBmdW5jdGlvbiBvbkJlZm9yZUVudGVyKCkge1xuICAgICAgICAgICAgdmFyIGNvbnRhaW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRhaW5cIik7XG4gICAgICAgICAgICB2YXIgY29udHJvbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRyb2xzXCIpO1xuICAgICAgICAgICAgY29udGFpbi5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICAgICAgY29udHJvbHMuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgfSxcbiAgICAgICAgb25FbnRlcjogZnVuY3Rpb24gb25FbnRlcigpIHtcbiAgICAgICAgICAgIGV2ZW50QnVzLm9uKCd2aWV3JywgX3dyaXRlVGV4dEdhbWVMaWZlMi5kZWZhdWx0KTtcbiAgICAgICAgICAgIGlmICghbGlmZUdhbWUpIGxpZmVHYW1lID0gbmV3IF9jb250cm9sczIuZGVmYXVsdChldmVudEJ1cyk7XG4gICAgICAgICAgICBldmVudEJ1cy50cmlnZ2VyKCd2aWV3JywgbGlmZUdhbWUpO1xuICAgICAgICB9LFxuICAgICAgICBvbkxlYXZlOiBmdW5jdGlvbiBvbkxlYXZlKCkge1xuICAgICAgICAgICAgZXZlbnRCdXMub2ZmKCd2aWV3JywgX3dyaXRlVGV4dEdhbWVMaWZlMi5kZWZhdWx0KTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0NhbnZhcycsXG4gICAgICAgIG1hdGNoOiAvQ2FudmFzLyxcbiAgICAgICAgb25CZWZvcmVFbnRlcjogZnVuY3Rpb24gb25CZWZvcmVFbnRlcigpIHtcbiAgICAgICAgICAgIHZhciBjb250YWluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb250YWluXCIpO1xuICAgICAgICAgICAgdmFyIGNvbnRyb2xzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb250cm9sc1wiKTtcbiAgICAgICAgICAgIGNvbnRhaW4uc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgICAgIGNvbnRyb2xzLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgIH0sXG4gICAgICAgIG9uRW50ZXI6IGZ1bmN0aW9uIG9uRW50ZXIoKSB7XG4gICAgICAgICAgICBldmVudEJ1cy5vbigndmlldycsIF93cml0ZUNhbnZhc0dhbWVMaWZlMi5kZWZhdWx0KTtcbiAgICAgICAgICAgIGlmICghbGlmZUdhbWUpIGxpZmVHYW1lID0gbmV3IF9jb250cm9sczIuZGVmYXVsdChldmVudEJ1cyk7XG4gICAgICAgICAgICBldmVudEJ1cy50cmlnZ2VyKCd2aWV3JywgbGlmZUdhbWUpO1xuICAgICAgICB9LFxuICAgICAgICBvbkxlYXZlOiBmdW5jdGlvbiBvbkxlYXZlKCkge1xuICAgICAgICAgICAgZXZlbnRCdXMub2ZmKCd2aWV3JywgX3dyaXRlQ2FudmFzR2FtZUxpZmUyLmRlZmF1bHQpO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnU1ZHJyxcbiAgICAgICAgbWF0Y2g6IC9TVkcvLFxuICAgICAgICBvbkJlZm9yZUVudGVyOiBmdW5jdGlvbiBvbkJlZm9yZUVudGVyKCkge1xuICAgICAgICAgICAgdmFyIGNvbnRhaW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRhaW5cIik7XG4gICAgICAgICAgICB2YXIgY29udHJvbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRyb2xzXCIpO1xuICAgICAgICAgICAgY29udGFpbi5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICAgICAgY29udHJvbHMuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgfSxcbiAgICAgICAgb25FbnRlcjogZnVuY3Rpb24gb25FbnRlcigpIHtcbiAgICAgICAgICAgIGV2ZW50QnVzLm9uKCd2aWV3JywgX3dyaXRlU1ZHR2FtZUxpZmUyLmRlZmF1bHQpO1xuICAgICAgICAgICAgaWYgKCFsaWZlR2FtZSkgbGlmZUdhbWUgPSBuZXcgX2NvbnRyb2xzMi5kZWZhdWx0KGV2ZW50QnVzKTtcbiAgICAgICAgICAgIGV2ZW50QnVzLnRyaWdnZXIoJ3ZpZXcnLCBsaWZlR2FtZSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uTGVhdmU6IGZ1bmN0aW9uIG9uTGVhdmUoKSB7XG4gICAgICAgICAgICBldmVudEJ1cy5vZmYoJ3ZpZXcnLCBfd3JpdGVTVkdHYW1lTGlmZTIuZGVmYXVsdCk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdBYm91dCcsXG4gICAgICAgIG1hdGNoOiAvQWJvdXQvLFxuICAgICAgICBvbkJlZm9yZUVudGVyOiBmdW5jdGlvbiBvbkJlZm9yZUVudGVyKCkge1xuICAgICAgICAgICAgdmFyIGNvbnRhaW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRhaW5cIik7XG4gICAgICAgICAgICB2YXIgY29udHJvbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRyb2xzXCIpO1xuICAgICAgICAgICAgY29udGFpbi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICBjb250cm9scy5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICBpZiAobGlmZUdhbWUpIGxpZmVHYW1lLnBsYXlTdGF0ZSA9IGZhbHNlO1xuICAgICAgICB9LFxuICAgICAgICBvbkVudGVyOiBmdW5jdGlvbiBvbkVudGVyKCkge1xuICAgICAgICAgICAgdmFyIGFib3V0RGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhYm91dERpdlwiKTtcbiAgICAgICAgICAgIGlmICghYWJvdXREaXYpIHtcbiAgICAgICAgICAgICAgICAoMCwgX2Fib3V0UGFnZTIuZGVmYXVsdCkoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYWJvdXREaXYuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgb25MZWF2ZTogZnVuY3Rpb24gb25MZWF2ZSgpIHtcbiAgICAgICAgICAgIHZhciBhYm91dERpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWJvdXREaXZcIik7XG4gICAgICAgICAgICBhYm91dERpdi5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICBpZiAobGlmZUdhbWUpIHtcbiAgICAgICAgICAgICAgICBsaWZlR2FtZS5wbGF5U3RhdGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHZhciBwbGF5QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwbGF5XCIpO1xuICAgICAgICAgICAgICAgIGlmIChwbGF5QnV0dG9uLnZhbHVlID09PSBcIlN0b3BcIikgbGlmZUdhbWUucmVwZWF0R2FtZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfV1cbn0pO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBsaWZlR2FtZTtcblxufSx7XCIuLi91dGlscy9ldmVudEJ1c1wiOjgsXCIuLi91dGlscy9yb3V0ZXJcIjo5LFwiLi9hYm91dFBhZ2VcIjoxLFwiLi9jb250cm9sc1wiOjMsXCIuL3dyaXRlQ2FudmFzR2FtZUxpZmVcIjo1LFwiLi93cml0ZVNWR0dhbWVMaWZlXCI6NixcIi4vd3JpdGVUZXh0R2FtZUxpZmVcIjo3fV0sNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIFdyaXRlQ2FudmFzR2FtZUxpZmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gV3JpdGVDYW52YXNHYW1lTGlmZShnYW1lTGlmZSkge1xuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgV3JpdGVDYW52YXNHYW1lTGlmZSk7XG5cbiAgICAgICAgdGhpcy5jYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xuICAgICAgICB0aGlzLmdhbWVMaWZlID0gZ2FtZUxpZmU7XG4gICAgICAgIHRoaXMuU1FVQVJFX1NJWkUgPSA4O1xuICAgICAgICB0aGlzLnN0YXJ0V3JpdGVHYW1lKCk7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKFdyaXRlQ2FudmFzR2FtZUxpZmUsIFt7XG4gICAgICAgIGtleTogJ3N0YXJ0V3JpdGVHYW1lJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHN0YXJ0V3JpdGVHYW1lKCkge1xuICAgICAgICAgICAgdGhpcy53cml0ZUdhbWUodGhpcy5nYW1lTGlmZS5zdGFnZUhpc3RvcnlbdGhpcy5nYW1lTGlmZS5jdXJyZW50QXJyYXlJbmRleF0sIHRoaXMucHJlKTtcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gJ0NhbnZhcyZnYW1lU3RhdGU9JyArICh0aGlzLmdhbWVMaWZlLmN1cnJlbnRBcnJheUluZGV4ICsgMSk7XG4gICAgICAgIH1cbiAgICB9LCB7XG4gICAgICAgIGtleTogJ3dyaXRlR2FtZScsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiB3cml0ZUdhbWUobGFzdExpZmVTdGFnZSkge1xuICAgICAgICAgICAgdmFyIHZlcnRpY2FsTGVuZ3RoID0gbGFzdExpZmVTdGFnZS5sZW5ndGgsXG4gICAgICAgICAgICAgICAgaG9yaXpvbnRhbExlbmd0aCA9IGxhc3RMaWZlU3RhZ2VbMF0ubGVuZ3RoO1xuXG4gICAgICAgICAgICB0aGlzLmNhbnZhcy5oZWlnaHQgPSB2ZXJ0aWNhbExlbmd0aCAqIDExO1xuICAgICAgICAgICAgdGhpcy5jYW52YXMud2lkdGggPSBob3Jpem9udGFsTGVuZ3RoICogMTE7XG5cbiAgICAgICAgICAgIHZhciBjdHggPSB0aGlzLmNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xuICAgICAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgdmFyIHkgPSAwO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2ZXJ0aWNhbExlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgdmFyIHggPSAwO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgaG9yaXpvbnRhbExlbmd0aDsgKytqKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChsYXN0TGlmZVN0YWdlW2ldW2pdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdHgucmVjdCh4LCB5LCB0aGlzLlNRVUFSRV9TSVpFLCB0aGlzLlNRVUFSRV9TSVpFKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB4ICs9IDExO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB5ICs9IDExO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9IFwiIzhiYzM0YVwiO1xuICAgICAgICAgICAgY3R4LmZpbGwoKTtcbiAgICAgICAgICAgIHRoaXMuZ2FtZUxpZmUuY29udGFpbi5pbm5lckhUTUwgPSBcIlwiO1xuICAgICAgICAgICAgdGhpcy5nYW1lTGlmZS5jb250YWluLmFwcGVuZENoaWxkKHRoaXMuY2FudmFzKTtcbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBXcml0ZUNhbnZhc0dhbWVMaWZlO1xufSgpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBXcml0ZUNhbnZhc0dhbWVMaWZlO1xuXG59LHt9XSw2OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgV3JpdGVTVkdHYW1lTGlmZSA9IGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBXcml0ZVNWR0dhbWVMaWZlKGdhbWVMaWZlKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBXcml0ZVNWR0dhbWVMaWZlKTtcblxuICAgICAgICB0aGlzLlNRVUFSRV9TSVpFID0gODtcbiAgICAgICAgdGhpcy5TVkdfTlMgPSBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7XG4gICAgICAgIHRoaXMuc3ZnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHRoaXMuU1ZHX05TLCAnc3ZnJyk7XG4gICAgICAgIHRoaXMud3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyh0aGlzLlNWR19OUywgJ3JlY3QnKTtcbiAgICAgICAgdGhpcy53cmFwcGVyLnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnd3JhcHBlcicpO1xuICAgICAgICB0aGlzLnN2Zy5hcHBlbmRDaGlsZCh0aGlzLndyYXBwZXIpO1xuICAgICAgICB0aGlzLmdhbWVMaWZlID0gZ2FtZUxpZmU7XG4gICAgICAgIHRoaXMuc3RhcnRXcml0ZUdhbWUoKTtcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoV3JpdGVTVkdHYW1lTGlmZSwgW3tcbiAgICAgICAga2V5OiAnc3RhcnRXcml0ZUdhbWUnLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gc3RhcnRXcml0ZUdhbWUoKSB7XG4gICAgICAgICAgICB0aGlzLndyaXRlR2FtZSh0aGlzLmdhbWVMaWZlLnN0YWdlSGlzdG9yeVt0aGlzLmdhbWVMaWZlLmN1cnJlbnRBcnJheUluZGV4XSwgdGhpcy5wcmUpO1xuICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSAnU1ZHJmdhbWVTdGF0ZT0nICsgKHRoaXMuZ2FtZUxpZmUuY3VycmVudEFycmF5SW5kZXggKyAxKTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnd3JpdGVHYW1lJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIHdyaXRlR2FtZShsYXN0TGlmZVN0YWdlKSB7XG4gICAgICAgICAgICB2YXIgdmVydGljYWxMZW5ndGggPSBsYXN0TGlmZVN0YWdlLmxlbmd0aCxcbiAgICAgICAgICAgICAgICBob3Jpem9udGFsTGVuZ3RoID0gbGFzdExpZmVTdGFnZVswXS5sZW5ndGg7XG5cbiAgICAgICAgICAgIHRoaXMuc3ZnLnNldEF0dHJpYnV0ZSgnaGVpZ2h0JywgdmVydGljYWxMZW5ndGggKiAxMSk7XG4gICAgICAgICAgICB0aGlzLnN2Zy5zZXRBdHRyaWJ1dGUoJ3dpZHRoJywgaG9yaXpvbnRhbExlbmd0aCAqIDExKTtcblxuICAgICAgICAgICAgdmFyIHkgPSAwO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2ZXJ0aWNhbExlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgdmFyIHggPSAwO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgaG9yaXpvbnRhbExlbmd0aDsgKytqKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChsYXN0TGlmZVN0YWdlW2ldW2pdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgU1ZHU3F1YXJlID0gJzxyZWN0IFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4PVwiJyArIHggKyAnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeT1cIicgKyB5ICsgJ1wiXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPVwiJyArIHRoaXMuU1FVQVJFX1NJWkUgKyAnXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJpbm5lci1zcXVhcmVcIiAvPic7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN2Zy5pbm5lckhUTUwgKz0gU1ZHU3F1YXJlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHggKz0gMTE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHkgKz0gMTE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmdhbWVMaWZlLmNvbnRhaW4uaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgICAgIHRoaXMuZ2FtZUxpZmUuY29udGFpbi5hcHBlbmRDaGlsZCh0aGlzLnN2Zyk7XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gV3JpdGVTVkdHYW1lTGlmZTtcbn0oKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gV3JpdGVTVkdHYW1lTGlmZTtcblxufSx7fV0sNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIFdyaXRlVGV4dEdhbWVMaWZlID0gZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFdyaXRlVGV4dEdhbWVMaWZlKGdhbWVMaWZlKSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBXcml0ZVRleHRHYW1lTGlmZSk7XG5cbiAgICAgICAgdGhpcy5wcmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicHJlXCIpO1xuICAgICAgICB0aGlzLmdhbWVMaWZlID0gZ2FtZUxpZmU7XG4gICAgICAgIHRoaXMuc3RhcnRXcml0ZUdhbWUoKTtcbiAgICB9XG5cbiAgICBfY3JlYXRlQ2xhc3MoV3JpdGVUZXh0R2FtZUxpZmUsIFt7XG4gICAgICAgIGtleTogXCJzdGFydFdyaXRlR2FtZVwiLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gc3RhcnRXcml0ZUdhbWUoKSB7XG4gICAgICAgICAgICB0aGlzLndyaXRlR2FtZSh0aGlzLmdhbWVMaWZlLnN0YWdlSGlzdG9yeVt0aGlzLmdhbWVMaWZlLmN1cnJlbnRBcnJheUluZGV4XSwgdGhpcy5wcmUpO1xuICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhhc2ggPSBcIlRleHQmZ2FtZVN0YXRlPVwiICsgKHRoaXMuZ2FtZUxpZmUuY3VycmVudEFycmF5SW5kZXggKyAxKTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiBcIndyaXRlR2FtZVwiLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gd3JpdGVHYW1lKGxhc3RMaWZlU3RhZ2UpIHtcbiAgICAgICAgICAgIHZhciB2ZXJ0aWNhbExlbmd0aCA9IGxhc3RMaWZlU3RhZ2UubGVuZ3RoLFxuICAgICAgICAgICAgICAgIGhvcml6b250YWxMZW5ndGggPSBsYXN0TGlmZVN0YWdlWzBdLmxlbmd0aDtcbiAgICAgICAgICAgIHZhciB0ZXh0R2FtZUxpZmUgPSBcIlwiO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHZlcnRpY2FsTGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgICAgICBpZiAoaSA+IDApIHRleHRHYW1lTGlmZSArPSBcIlxcblwiO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgaG9yaXpvbnRhbExlbmd0aDsgKytqKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChsYXN0TGlmZVN0YWdlW2ldW2pdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0R2FtZUxpZmUgKz0gXCJ4XCI7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB0ZXh0R2FtZUxpZmUgKz0gXCIgXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMucHJlLmlubmVySFRNTCA9IHRleHRHYW1lTGlmZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuZ2FtZUxpZmUuY29udGFpbi5pbm5lckhUTUwgPSBcIlwiO1xuICAgICAgICAgICAgdGhpcy5nYW1lTGlmZS5jb250YWluLmFwcGVuZENoaWxkKHRoaXMucHJlKTtcbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBXcml0ZVRleHRHYW1lTGlmZTtcbn0oKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gV3JpdGVUZXh0R2FtZUxpZmU7XG5cbn0se31dLDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBFdmVudEJ1cyA9IGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBFdmVudEJ1cygpIHtcbiAgICAgICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEV2ZW50QnVzKTtcblxuICAgICAgICB0aGlzLmxpc3RlbmVycyA9IHt9O1xuICAgIH1cblxuICAgIF9jcmVhdGVDbGFzcyhFdmVudEJ1cywgW3tcbiAgICAgICAga2V5OiAnb24nLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gb24obmFtZSwgY2IpIHtcbiAgICAgICAgICAgIHRoaXMubGlzdGVuZXJzW25hbWVdID0gdGhpcy5saXN0ZW5lcnNbbmFtZV0gfHwgW107XG4gICAgICAgICAgICB0aGlzLmxpc3RlbmVyc1tuYW1lXS5wdXNoKGNiKTtcbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAndHJpZ2dlcicsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiB0cmlnZ2VyKG5hbWUpIHtcbiAgICAgICAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBkYXRhID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICAgICAgICAgIGRhdGFbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpcy5saXN0ZW5lcnNbbmFtZV0pIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxpc3RlbmVyc1tuYW1lXS5mb3JFYWNoKGZ1bmN0aW9uIChjYikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2IuY29uc3RydWN0b3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ldyAoRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQuYXBwbHkoY2IsIFtudWxsXS5jb25jYXQoZGF0YSkpKSgpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgY2IuYXBwbHkodW5kZWZpbmVkLCBkYXRhKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIHtcbiAgICAgICAga2V5OiAnb2ZmJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIG9mZihuYW1lLCBjYikge1xuICAgICAgICAgICAgaWYgKCFjYikge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLmxpc3RlbmVyc1tuYW1lXTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5saXN0ZW5lcnNbbmFtZV0gPSB0aGlzLmxpc3RlbmVyc1tuYW1lXS5maWx0ZXIoZnVuY3Rpb24gKGFycmF5Q2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICEoY2IgPT09IGFycmF5Q2FsbGJhY2spO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdvbmNlJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIG9uY2UobmFtZSwgY2IpIHtcbiAgICAgICAgICAgIHRoaXMub24obmFtZSwgb25jZU9mZik7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIG9uY2VPZmYoKSB7XG4gICAgICAgICAgICAgICAgY2IuYXBwbHkodW5kZWZpbmVkLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBzZWxmLmxpc3RlbmVyc1tuYW1lXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1dKTtcblxuICAgIHJldHVybiBFdmVudEJ1cztcbn0oKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gRXZlbnRCdXM7XG5cbn0se31dLDk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBSb3V0ZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUm91dGVyKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBbXTtcblxuICAgICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUm91dGVyKTtcblxuICAgICAgICB0aGlzLnJvdXRlcyA9IG9wdGlvbnMucm91dGVzO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImhhc2hjaGFuZ2VcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLmhhc2hDaGVjayh3aW5kb3cubG9jYXRpb24uaGFzaCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmhhc2hDaGVjayh3aW5kb3cubG9jYXRpb24uaGFzaCk7XG4gICAgfVxuXG4gICAgX2NyZWF0ZUNsYXNzKFJvdXRlciwgW3tcbiAgICAgICAga2V5OiAnZmluZE5ld1JvdXRlJyxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uIGZpbmROZXdSb3V0ZShoYXNoKSB7XG4gICAgICAgICAgICB2YXIgcm91dGUgPSB2b2lkIDA7XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICBpZiAoIXRoaXMucm91dGVzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnJvdXRlcy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5maW5kUm91dGUoaGFzaCwgdGhpcy5yb3V0ZXNbMF0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJvdXRlcy5mb3JFYWNoKGZ1bmN0aW9uIChyb3V0ZUl0ZW0pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGYuZmluZFJvdXRlKGhhc2gsIHJvdXRlSXRlbSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByb3V0ZSA9IHJvdXRlSXRlbTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJvdXRlO1xuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdmaW5kUm91dGUnLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gZmluZFJvdXRlKGhhc2gsIGl0ZW0pIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaXRlbS5tYXRjaCA9PT0gJ3N0cmluZycgJiYgaGFzaCA9PT0gaXRlbS5tYXRjaCB8fCB0eXBlb2YgaXRlbS5tYXRjaCA9PT0gJ2Z1bmN0aW9uJyAmJiBpdGVtLm1hdGNoKGhhc2gpIHx8IGl0ZW0ubWF0Y2ggaW5zdGFuY2VvZiBSZWdFeHAgJiYgaGFzaC5tYXRjaChpdGVtLm1hdGNoKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpdGVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSwge1xuICAgICAgICBrZXk6ICdoYXNoQ2hlY2snLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gaGFzaENoZWNrKGhhc2gpIHtcbiAgICAgICAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICAgICAgICBoYXNoID0gaGFzaC5zbGljZSgxKTtcbiAgICAgICAgICAgIHZhciBwcmVSb3V0ZSA9IHRoaXMuYWN0aXZlUm91dGU7XG4gICAgICAgICAgICB2YXIgbmV3Um91dGUgPSB0aGlzLmZpbmROZXdSb3V0ZShoYXNoKTtcblxuICAgICAgICAgICAgaWYgKCFuZXdSb3V0ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIG5ld1JvdXRlLm1hdGNoID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIHRoaXMucm91dGVQYXJhbXMgPSBuZXdSb3V0ZS5tYXRjaDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobmV3Um91dGUubWF0Y2ggaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJvdXRlUGFyYW1zID0gaGFzaC5tYXRjaChuZXdSb3V0ZS5tYXRjaClbMV07XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBuZXdSb3V0ZS5tYXRjaCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHRoaXMucm91dGVQYXJhbXMgPSBuZXdSb3V0ZS5tYXRjaChoYXNoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHByZVJvdXRlICYmIHByZVJvdXRlLm9uTGVhdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMyLnByZVJvdXRlUGFyYW1zID8gcHJlUm91dGUub25MZWF2ZShfdGhpczIucHJlUm91dGVQYXJhbXMpIDogcHJlUm91dGUub25MZWF2ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmIChuZXdSb3V0ZSAmJiBuZXdSb3V0ZS5vbkJlZm9yZUVudGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzMi5yb3V0ZVBhcmFtcyA/IG5ld1JvdXRlLm9uQmVmb3JlRW50ZXIoX3RoaXMyLnJvdXRlUGFyYW1zKSA6IG5ld1JvdXRlLm9uQmVmb3JlRW50ZXIoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBpZiAobmV3Um91dGUgJiYgbmV3Um91dGUub25FbnRlcikge1xuICAgICAgICAgICAgICAgICAgICBfdGhpczIucm91dGVQYXJhbXMgPyBuZXdSb3V0ZS5vbkVudGVyKF90aGlzMi5yb3V0ZVBhcmFtcykgOiBuZXdSb3V0ZS5vbkVudGVyKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMyLmFjdGl2ZVJvdXRlID0gbmV3Um91dGU7XG4gICAgICAgICAgICAgICAgX3RoaXMyLnByZVJvdXRlUGFyYW1zID0gX3RoaXMyLnJvdXRlUGFyYW1zO1xuICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XSk7XG5cbiAgICByZXR1cm4gUm91dGVyO1xufSgpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBSb3V0ZXI7XG5cbn0se31dfSx7fSxbNF0pXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTV2WkdWZmJXOWtkV3hsY3k5aWNtOTNjMlZ5TFhCaFkyc3ZYM0J5Wld4MVpHVXVhbk1pTENKaGMzTmxkSE5jWEdwaGRtRnpZM0pwY0hSelhGeGpiMjF3YjI1bGJuUnpYRnhoWW05MWRGQmhaMlV1YW5NaUxDSmhjM05sZEhOY1hHcGhkbUZ6WTNKcGNIUnpYRnhqYjIxd2IyNWxiblJ6WEZ4allXeGpkV3hoZEdsdVowZGhiV1ZNYVdabExtcHpJaXdpWVhOelpYUnpYRnhxWVhaaGMyTnlhWEIwYzF4Y1kyOXRjRzl1Wlc1MGMxeGNZMjl1ZEhKdmJITXVhbk1pTENKaGMzTmxkSE5jWEdwaGRtRnpZM0pwY0hSelhGeGpiMjF3YjI1bGJuUnpYRnh5YjNWMGN5NXFjeUlzSW1GemMyVjBjMXhjYW1GMllYTmpjbWx3ZEhOY1hHTnZiWEJ2Ym1WdWRITmNYSGR5YVhSbFEyRnVkbUZ6UjJGdFpVeHBabVV1YW5NaUxDSmhjM05sZEhOY1hHcGhkbUZ6WTNKcGNIUnpYRnhqYjIxd2IyNWxiblJ6WEZ4M2NtbDBaVk5XUjBkaGJXVk1hV1psTG1weklpd2lZWE56WlhSelhGeHFZWFpoYzJOeWFYQjBjMXhjWTI5dGNHOXVaVzUwYzF4Y2QzSnBkR1ZVWlhoMFIyRnRaVXhwWm1VdWFuTWlMQ0poYzNObGRITmNYR3BoZG1GelkzSnBjSFJ6WEZ4MWRHbHNjMXhjWlhabGJuUkNkWE11YW5NaUxDSmhjM05sZEhOY1hHcGhkbUZ6WTNKcGNIUnpYRngxZEdsc2MxeGNjbTkxZEdWeUxtcHpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTzBGRFFVRTdPenM3TzBGQlEwRXNVMEZCVXl4UlFVRlVMRWRCUVc5Q08wRkJRMmhDTEZGQlFVa3NVVUZCVVN4VFFVRlRMR0ZCUVZRc1EwRkJkVUlzVjBGQmRrSXNRMEZCV2p0QlFVTkJMRkZCUVVrc1EwRkJReXhMUVVGTUxFVkJRVms3UVVGRFVpeFpRVUZKTEZsQlFWY3NVMEZCVXl4aFFVRlVMRU5CUVhWQ0xFdEJRWFpDTEVOQlFXWTdRVUZEUVN4clFrRkJVeXhaUVVGVUxFTkJRWE5DTEVsQlFYUkNMRVZCUVRSQ0xGVkJRVFZDTzBGQlEwRXNhVUpCUVZNc1NVRkJWQ3hEUVVGakxGZEJRV1FzUTBGQk1FSXNVMEZCTVVJN1FVRkRTRHM3UVVGRlJDeGhRVUZUTEZOQlFWUTdRVUZ0UWtnN08ydENRVVZqTEZFN096dEJRemxDWmpzN096czdPenM3T3p0SlFVVk5MRzFDTzBGQlEwWXNhVU5CUVZrc1NVRkJXaXhGUVVGclFpeE5RVUZzUWl4RlFVRXdRanRCUVVGQk96dEJRVU4wUWl4aFFVRkxMR05CUVV3c1IwRkJjMElzVVVGQlVTeEZRVUU1UWp0QlFVTkJMR0ZCUVVzc1owSkJRVXdzUjBGQmQwSXNWVUZCVlN4RlFVRnNRenRCUVVOQkxHRkJRVXNzWVVGQlRDeEhRVUZ4UWl4TFFVRkxMR1ZCUVV3c1EwRkJjVUlzU1VGQmNrSXNSVUZCTWtJc1RVRkJNMElzUTBGQmNrSTdRVUZEUVN4aFFVRkxMRTlCUVV3c1IwRkJaU3hUUVVGVExHRkJRVlFzUTBGQmRVSXNWVUZCZGtJc1EwRkJaanRCUVVOQkxHRkJRVXNzVTBGQlRDeEhRVUZwUWl4VFFVRlRMR0ZCUVZRc1EwRkJkVUlzYVVKQlFYWkNMRU5CUVdwQ08wRkJRMEVzV1VGQlNTeExRVUZMTEZsQlFWUXNSVUZCZFVJN1FVRkRia0lzYVVKQlFVc3NXVUZCVEN4RFFVRnJRaXhKUVVGc1FpeERRVUYxUWl4TFFVRkxMR0ZCUVRWQ08wRkJRMGdzVTBGR1JDeE5RVVZQTzBGQlEwZ3NhVUpCUVVzc1dVRkJUQ3hIUVVGdlFpeEZRVUZ3UWp0QlFVTkJMR2xDUVVGTExGbEJRVXdzUTBGQmEwSXNTVUZCYkVJc1EwRkJkVUlzUzBGQlN5eGhRVUUxUWp0QlFVTklPMEZCUTBRc1lVRkJTeXgxUWtGQlREdEJRVU5CTEdGQlFVc3NVMEZCVEN4SFFVRnBRaXhKUVVGcVFqdEJRVU5CTEdGQlFVc3NhVUpCUVV3c1IwRkJlVUlzUzBGQlN5eFpRVUZNTEVOQlFXdENMRTFCUVd4Q0xFZEJRVEpDTEVOQlFYQkVPMEZCUTBnN096czdhMFJCUlhsQ08wRkJRM1JDTEdsQ1FVRkxMRzFDUVVGTUxFZEJRVEpDTEV0QlFVc3NXVUZCVEN4RFFVRnJRaXhKUVVGc1FpeERRVUYxUWl4SlFVRjJRaXhEUVVFelFqdEJRVU5CTEdsQ1FVRkxMRTlCUVV3c1EwRkJZU3huUWtGQllpeERRVUU0UWl4UFFVRTVRaXhGUVVGMVF5eExRVUZMTEcxQ1FVRTFRenRCUVVOSU96czdjVU5CUlZrc1JTeEZRVUZKTzBGQlEySXNaMEpCUVVrc1UwRkJVeXhMUVVGTExFOUJRVXdzUTBGQllTeFpRVUV4UWp0QlFVTkJMR2RDUVVGSkxGRkJRVkVzUzBGQlN5eFBRVUZNTEVOQlFXRXNWMEZCZWtJN1FVRkRRU3huUWtGQlNTeEpRVUZKTEVkQlFVY3NUMEZCV0R0QlFVTkJMR2RDUVVGSkxFbEJRVWtzUjBGQlJ5eFBRVUZZTzBGQlEwRXNaMEpCUVVrc1dVRkJXU3hUUVVGVExFdEJRVXNzWTBGQk9VSTdRVUZEUVN4blFrRkJTU3haUVVGWkxGRkJRVkVzUzBGQlN5eG5Ra0ZCTjBJN1FVRkRRU3huUWtGQlNTeFZRVUZWTEV0QlFVc3NTMEZCVEN4RFFVRlhMRWxCUVVrc1UwRkJaaXhEUVVGa08wRkJRMEVzWjBKQlFVa3NWVUZCVlN4TFFVRkxMRXRCUVV3c1EwRkJWeXhKUVVGSkxGTkJRV1lzUTBGQlpEdEJRVU5CTEdkQ1FVRkpMRTlCUVU4c1MwRkJTeXhaUVVGTUxFTkJRV3RDTEV0QlFVc3NhVUpCUVhaQ0xFVkJRVEJETEU5QlFURkRMRVZCUVcxRUxFOUJRVzVFTEVOQlFWZzdRVUZEUVN4blFrRkJTU3hKUVVGS0xFVkJRVlU3UVVGRFRpeHhRa0ZCU3l4WlFVRk1MRU5CUVd0Q0xFdEJRVXNzYVVKQlFYWkNMRVZCUVRCRExFOUJRVEZETEVWQlFXMUVMRTlCUVc1RUxFbEJRVGhFTEVOQlFUbEVPMEZCUTBnc1lVRkdSQ3hOUVVWUExFdEJRVXNzV1VGQlRDeERRVUZyUWl4TFFVRkxMR2xDUVVGMlFpeEZRVUV3UXl4UFFVRXhReXhGUVVGdFJDeFBRVUZ1UkN4SlFVRTRSQ3hEUVVFNVJEdEJRVU5RTEdsQ1FVRkxMRmxCUVV3c1EwRkJhMElzVFVGQmJFSXNRMEZCZVVJc1MwRkJTeXhwUWtGQlRDeEhRVUY1UWl4RFFVRnNSRHRCUVVOQkxHbENRVUZMTEZGQlFVd3NRMEZCWXl4UFFVRmtMRU5CUVhOQ0xFMUJRWFJDTEVWQlFUaENMRWxCUVRsQ08wRkJRMGc3T3p0M1EwRkZaU3hKTEVWQlFVMHNUU3hGUVVGUk8wRkJRekZDTEdkQ1FVRkpMRkZCUVZFc1JVRkJXanRCUVVOQkxHbENRVUZMTEVsQlFVa3NTVUZCU1N4RFFVRmlMRVZCUVdkQ0xFbEJRVWtzU1VGQmNFSXNSVUZCTUVJc1JVRkJSU3hEUVVFMVFpeEZRVUVyUWp0QlFVTXpRaXh2UWtGQlNTeFRRVUZUTEVWQlFXSTdRVUZEUVN4eFFrRkJTeXhKUVVGSkxFbEJRVWtzUTBGQllpeEZRVUZuUWl4SlFVRkpMRTFCUVhCQ0xFVkJRVFJDTEVWQlFVVXNRMEZCT1VJc1JVRkJhVU03UVVGRE4wSXNNa0pCUVU4c1NVRkJVQ3hEUVVGWkxFTkJRVm83UVVGRFNEdEJRVU5FTEhOQ1FVRk5MRWxCUVU0c1EwRkJWeXhOUVVGWU8wRkJRMGc3TzBGQlJVUXNiVUpCUVU4c1MwRkJTeXh0UWtGQlRDeERRVUY1UWl4TFFVRjZRaXhEUVVGUU8wRkJRMGc3T3pzMFEwRkZiVUlzU3l4RlFVRk5PMEZCUTNSQ0xHZENRVUZKTEdWQlFXVXNTMEZCU3l4TFFVRk1MRU5CUVZjc1RVRkJUU3hEUVVGT0xFVkJRVk1zVFVGQlZDeEhRVUZyUWl4RFFVRTNRaXhEUVVGdVFqdEJRVU5CTEdkQ1FVRkpMR0ZCUVdFc1MwRkJTeXhMUVVGTUxFTkJRVmNzVFVGQlRTeE5RVUZPTEVkQlFXVXNRMEZCTVVJc1EwRkJha0k3TzBGQlJVRXNhMEpCUVUwc1ZVRkJUaXhGUVVGclFpeFpRVUZzUWl4SlFVRnJReXhEUVVGc1F6dEJRVU5CTEd0Q1FVRk5MR0ZCUVdFc1EwRkJia0lzUlVGQmMwSXNXVUZCZEVJc1NVRkJjME1zUTBGQmRFTTdRVUZEUVN4clFrRkJUU3hoUVVGaExFTkJRVzVDTEVWQlFYTkNMRmxCUVhSQ0xFbEJRWE5ETEVOQlFYUkRPMEZCUTBFc2EwSkJRVTBzWVVGQllTeERRVUZ1UWl4RlFVRnpRaXhaUVVGMFFpeEpRVUZ6UXl4RFFVRjBRenRCUVVOQkxHdENRVUZOTEdGQlFXRXNRMEZCYmtJc1JVRkJjMElzWlVGQlpTeERRVUZ5UXl4SlFVRXdReXhEUVVFeFF6czdRVUZGUVN4dFFrRkJUeXhMUVVGUU8wRkJRMGc3T3p0NVEwRkZaMEk3UVVGRFlpeG5Ra0ZCU1N4TFFVRkxMRmxCUVV3c1EwRkJhMElzVFVGQmRFSXNSVUZCT0VJN1FVRkRNVUlzYjBKQlFVa3NiVUpCUVcxQ0xFdEJRVXNzV1VGQlRDeERRVUZyUWl4TFFVRkxMR2xDUVVGMlFpeERRVUYyUWp0QlFVTkJMSEZDUVVGTExHbENRVUZNTEVOQlFYVkNMR2RDUVVGMlFqdEJRVU5JTzBGQlEwUXNhVUpCUVVzc2FVSkJRVXdzUjBGQmVVSXNTMEZCU3l4WlFVRk1MRU5CUVd0Q0xFMUJRV3hDTEVkQlFUSkNMRU5CUVhCRU8wRkJRMGc3T3pzd1EwRkZhVUlzVXl4RlFVRlhPMEZCUTNwQ0xHZENRVUZKTEdsQ1FVRnBRaXhGUVVGeVFqdEJRVU5CTEdsQ1FVRkxMRWxCUVVrc1NVRkJTU3hEUVVGaUxFVkJRV2RDTEVsQlFVa3NTMEZCU3l4alFVRjZRaXhGUVVGNVF5eEZRVUZGTEVOQlFUTkRMRVZCUVRoRE8wRkJRekZETEc5Q1FVRkpMSE5DUVVGelFpeEZRVUV4UWp0QlFVTkJMSEZDUVVGTExFbEJRVWtzU1VGQlNTeERRVUZpTEVWQlFXZENMRWxCUVVrc1MwRkJTeXhuUWtGQmVrSXNSVUZCTWtNc1JVRkJSU3hEUVVFM1F5eEZRVUZuUkR0QlFVTTFReXgzUWtGQlNTeDNRa0ZCZDBJc1MwRkJTeXgzUWtGQlRDeERRVUU0UWl4RFFVRTVRaXhGUVVGcFF5eERRVUZxUXl4RlFVRnZReXhUUVVGd1F5eERRVUUxUWp0QlFVTkJMSGRDUVVGSkxEQkNRVUV3UWl4RFFVRXhRaXhKUVVFclFpeERRVUZETEZWQlFWVXNRMEZCVml4RlFVRmhMRU5CUVdJc1EwRkJjRU1zUlVGQmNVUTdRVUZEYWtRc05FTkJRVzlDTEVsQlFYQkNMRU5CUVhsQ0xFTkJRWHBDTzBGQlEwZ3NjVUpCUmtRc1RVRkZUeXhKUVVGSkxEQkNRVUV3UWl4RFFVRXhRaXhKUVVGblF5d3dRa0ZCTUVJc1EwRkJNVUlzU1VGQkswSXNWVUZCVlN4RFFVRldMRVZCUVdFc1EwRkJZaXhEUVVGdVJTeEZRVUZ4Ump0QlFVTjRSaXcwUTBGQmIwSXNTVUZCY0VJc1EwRkJlVUlzVlVGQlZTeERRVUZXTEVWQlFXRXNRMEZCWWl4RFFVRjZRanRCUVVOSUxIRkNRVVpOTEUxQlJVRXNTVUZCU1N4M1FrRkJkMElzUTBGQmVFSXNTVUZCTmtJc2QwSkJRWGRDTEVOQlFYcEVMRVZCUVRSRU8wRkJReTlFTERSRFFVRnZRaXhKUVVGd1FpeERRVUY1UWl4RFFVRjZRanRCUVVOSU8wRkJRMG83UVVGRFJDd3JRa0ZCWlN4SlFVRm1MRU5CUVc5Q0xHMUNRVUZ3UWp0QlFVTklPMEZCUTBRc2FVSkJRVXNzV1VGQlRDeERRVUZyUWl4TlFVRnNRaXhEUVVGNVFpeExRVUZMTEdsQ1FVRk1MRWRCUVhsQ0xFTkJRV3hFTzBGQlEwRXNhVUpCUVVzc1dVRkJUQ3hEUVVGclFpeEpRVUZzUWl4RFFVRjFRaXhqUVVGMlFqdEJRVU5JT3pzN2FVUkJSWGRDTEdkQ0xFVkJRV3RDTEdNc1JVRkJaMElzVXl4RlFVRlhPMEZCUTJ4RkxHZENRVUZKTEZGQlFWRXNRMEZCV2p0QlFVTkJMR2xDUVVGTExFbEJRVWtzU1VGQlNTeHRRa0ZCYlVJc1EwRkJhRU1zUlVGQmJVTXNTMEZCU3l4dFFrRkJiVUlzUTBGQk0wUXNSVUZCT0VRc1JVRkJSU3hEUVVGb1JTeEZRVUZ0UlR0QlFVTXZSQ3h4UWtGQlN5eEpRVUZKTEVsQlFVa3NhVUpCUVdsQ0xFTkJRVGxDTEVWQlFXbERMRXRCUVVzc2FVSkJRV2xDTEVOQlFYWkVMRVZCUVRCRUxFVkJRVVVzUTBGQk5VUXNSVUZCSzBRN1FVRkRNMFFzZDBKQlFVa3NUVUZCVFN4blFrRkJUaXhKUVVFd1FpeE5RVUZOTEdOQlFYQkRMRVZCUVc5RU8wRkJRM0JFTEhkQ1FVRkpMRVZCUVVVc1NVRkJTU3hEUVVGS0xFbEJRVk1zU1VGQlNTeERRVUZpTEVsQlFXdENMRWxCUVVrc1MwRkJTeXhqUVVGTUxFZEJRWE5DTEVOQlFUVkRMRWxCUVdsRUxFbEJRVWtzUzBGQlN5eG5Ra0ZCVEN4SFFVRjNRaXhEUVVFdlJTeExRVU5CTEZWQlFWVXNRMEZCVml4RlFVRmhMRU5CUVdJc1RVRkJiMElzUTBGRWVFSXNSVUZGU1N4RlFVRkZMRXRCUVVZN1FVRkRVRHRCUVVOS08wRkJRMFFzYlVKQlFVOHNTMEZCVUR0QlFVTklPenM3Y1VOQlJWazdRVUZCUVRzN1FVRkRWQ3gxUWtGQlZ5eFpRVUZOTzBGQlEySXNiMEpCUVVrc1RVRkJTeXhUUVVGVUxFVkJRVzlDTzBGQlEyaENMREJDUVVGTExHTkJRVXdzUTBGQmIwSXNUVUZCU3l4WlFVRjZRanRCUVVOQkxEQkNRVUZMTEZGQlFVd3NRMEZCWXl4UFFVRmtMRU5CUVhOQ0xFMUJRWFJDTzBGQlEwRXNNRUpCUVVzc1ZVRkJURHRCUVVOSUxHbENRVXBFTEUxQlNVOHNTVUZCU1N4RFFVRkRMRTFCUVVzc1UwRkJWaXhGUVVGeFFqdEJRVU40UWp0QlFVTklPMEZCUTBvc1lVRlNSQ3hGUVZGSExFTkJRVU1zUzBGQlN5eFRRVUZNTEVOQlFXVXNTMEZCYUVJc1IwRkJkMElzUjBGU00wSTdRVUZUU0RzN096czdPMnRDUVVkVkxHMUNPenM3UVVNeFNHWTdPenM3T3pzN08wRkJSVUU3T3pzN096czdPenM3T3p0SlFVVk5MRkU3T3p0QlFVTkdMSE5DUVVGWkxGRkJRVm9zUlVGQmMwSTdRVUZCUVRzN1FVRkRiRUlzV1VGQlNTeGhRVUZoTEZOQlFWTXNZVUZCVkN4RFFVRjFRaXhoUVVGMlFpeERRVUZxUWp0QlFVTkJMRmxCUVVrc1pVRkJaU3hUUVVGVExHRkJRVlFzUTBGQmRVSXNaVUZCZGtJc1EwRkJia0k3TzBGQlJtdENMSGRJUVVkYUxFTkJRVU1zVjBGQlZ5eExRVWhCTEVWQlIwOHNRMEZCUXl4aFFVRmhMRXRCU0hKQ0xFVkJSelJDTEZGQlNEVkNPenRCUVVsc1FpeGpRVUZMTEZGQlFVd3NSMEZCWjBJc1VVRkJhRUk3UVVGRFFTeGpRVUZMTEZWQlFVd3NSMEZCYTBJc1ZVRkJiRUk3UVVGRFFTeGpRVUZMTEZsQlFVd3NSMEZCYjBJc1dVRkJjRUk3UVVGRFFTeGpRVUZMTEU5QlFVd3NSMEZCWlN4VFFVRlRMR0ZCUVZRc1EwRkJkVUlzVlVGQmRrSXNRMEZCWmp0QlFVTkJMR05CUVVzc2MwSkJRVXc3UVVGU2EwSTdRVUZUY2tJN096czdhVVJCUlhkQ08wRkJRM0pDTEdsQ1FVRkxMRFJDUVVGTUxFZEJRVzlETEV0QlFVc3NjVUpCUVV3c1EwRkJNa0lzU1VGQk0wSXNRMEZCWjBNc1NVRkJhRU1zUTBGQmNFTTdRVUZEUVN4cFFrRkJTeXhQUVVGTUxFTkJRV0VzWjBKQlFXSXNRMEZCT0VJc1QwRkJPVUlzUlVGQmRVTXNTMEZCU3l3MFFrRkJOVU03UVVGRFFTeHBRa0ZCU3l4VlFVRk1PMEZCUTBnN096czRRMEZGY1VJc1JTeEZRVUZKTzBGQlEzUkNMR2RDUVVGSkxGTkJRVk1zUjBGQlJ5eE5RVUZvUWp0QlFVTkJMR2RDUVVGSkxFOUJRVThzVDBGQlVDeERRVUZsTEU5QlFXWXNRMEZCU2l4RlFVRTJRanRCUVVONlFpeHZRa0ZCU1N4TFFVRkxMR2xDUVVGTUxFZEJRWGxDTEVOQlFUZENMRVZCUVdkRE8wRkJRelZDTEhOQ1FVRkZMRXRCUVVzc2FVSkJRVkE3UVVGRFFTeDVRa0ZCU3l4UlFVRk1MRU5CUVdNc1QwRkJaQ3hEUVVGelFpeE5RVUYwUWl4RlFVRTRRaXhKUVVFNVFqdEJRVU5JTzBGQlEwb3NZVUZNUkN4TlFVdFBMRWxCUVVrc1QwRkJUeXhQUVVGUUxFTkJRV1VzVlVGQlppeERRVUZLTEVWQlFXZERPMEZCUTI1RExHOUNRVUZKTEV0QlFVc3NhVUpCUVV3c1IwRkJlVUlzUzBGQlN5eFpRVUZNTEVOQlFXdENMRTFCUVd4Q0xFZEJRVEpDTEVOQlFYaEVMRVZCUVRKRU8wRkJRM1pFTEhOQ1FVRkZMRXRCUVVzc2FVSkJRVkE3UVVGRFFTeDVRa0ZCU3l4UlFVRk1MRU5CUVdNc1QwRkJaQ3hEUVVGelFpeE5RVUYwUWl4RlFVRTRRaXhKUVVFNVFqdEJRVU5JTzBGQlEwb3NZVUZNVFN4TlFVdEJMRWxCUVVrc1QwRkJUeXhQUVVGUUxFTkJRV1VzVDBGQlppeERRVUZLTEVWQlFUWkNPMEZCUTJoRExHOUNRVUZKTEU5QlFVOHNTMEZCVUN4TFFVRnBRaXhOUVVGeVFpeEZRVUUyUWp0QlFVTjZRaXd5UWtGQlR5eExRVUZRTEVkQlFXVXNUVUZCWmp0QlFVTkJMSGxDUVVGTExGTkJRVXdzUjBGQmFVSXNTMEZCYWtJN1FVRkRTQ3hwUWtGSVJDeE5RVWRQTEVsQlFVa3NUMEZCVHl4TFFVRlFMRXRCUVdsQ0xFMUJRWEpDTEVWQlFUWkNPMEZCUTJoRExESkNRVUZQTEV0QlFWQXNSMEZCWlN4TlFVRm1PMEZCUTBFc2VVSkJRVXNzVTBGQlRDeEhRVUZwUWl4SlFVRnFRanRCUVVOQkxIbENRVUZMTEZWQlFVdzdRVUZEU0R0QlFVTktPMEZCUTBvN096czdPenRyUWtGSFZTeFJPenM3UVVNdlEyWTdPenM3T3p0QlFVVkJPenM3TzBGQlEwRTdPenM3UVVGRFFUczdPenRCUVVOQk96czdPMEZCUTBFN096czdRVUZEUVRzN096dEJRVU5CT3pzN096czdRVUZGUVN4SlFVRkpMRmRCUVZjc2QwSkJRV1k3UVVGRFFTeEpRVUZKTEdsQ1FVRktPenRCUVVWQkxFbEJRVWtzWlVGQlpTeFRRVUZUTEdGQlFWUXNRMEZCZFVJc1owSkJRWFpDTEVOQlFXNUNPMEZCUTBFc1lVRkJZU3huUWtGQllpeERRVUU0UWl4UlFVRTVRaXhGUVVGM1F5eFZRVUZETEVWQlFVUXNSVUZCVVR0QlFVTTFReXhSUVVGSkxGTkJRVk1zVlVGQlZDeERRVUZ2UWl4TFFVRndRaXhIUVVFMFFpeEhRVUZvUXl4RlFVRnhReXhUUVVGVExGVkJRVlFzUTBGQmIwSXNTMEZCY0VJc1IwRkJORUlzUjBGQk5VSXNRMEZCY2tNc1MwRkRTeXhKUVVGSkxGTkJRVk1zVlVGQlZDeERRVUZ2UWl4TFFVRndRaXhIUVVFMFFpeERRVUZvUXl4RlFVRnRReXhUUVVGVExGVkJRVlFzUTBGQmIwSXNTMEZCY0VJc1IwRkJORUlzUTBGQk5VSTdPMEZCUlhoRExGRkJRVWtzVTBGQlV5eFpRVUZVTEVOQlFYTkNMRXRCUVhSQ0xFZEJRVGhDTEVkQlFXeERMRVZCUVhWRExGTkJRVk1zV1VGQlZDeERRVUZ6UWl4TFFVRjBRaXhIUVVFNFFpeEhRVUU1UWl4RFFVRjJReXhMUVVOTExFbEJRVWtzVTBGQlV5eFpRVUZVTEVOQlFYTkNMRXRCUVhSQ0xFZEJRVGhDTEVOQlFXeERMRVZCUVhGRExGTkJRVk1zV1VGQlZDeERRVUZ6UWl4TFFVRjBRaXhIUVVFNFFpeERRVUU1UWpzN1FVRkZNVU1zVVVGQlNTeFRRVUZUTEVkQlFVY3NUVUZCYUVJN1FVRkRRU3hSUVVGSkxFOUJRVThzVDBGQlVDeERRVUZsTEdGQlFXWXNTMEZCYVVNc1QwRkJUeXhQUVVGUUxFTkJRV1VzWlVGQlppeERRVUZ5UXl4RlFVRnpSVHRCUVVOc1JTeHBRa0ZCVXl4UFFVRlVMRU5CUVdsQ0xHMUNRVUZxUWl4RFFVRnhReXhQUVVGeVF5eEZRVUU0UXl4VFFVRlRMRzFDUVVGMlJEdEJRVU5CTEdsQ1FVRlRMRTlCUVZRc1EwRkJhVUlzYlVKQlFXcENMRU5CUVhGRExFOUJRWEpETEVWQlFUaERMRk5CUVZNc05FSkJRWFpFTzBGQlEwRXNiVUpCUVZjc2RVSkJRV0VzVVVGQllpeERRVUZZTzBGQlEwRXNhVUpCUVZNc1lVRkJWQ3hEUVVGMVFpeFBRVUYyUWl4RlFVRm5ReXhMUVVGb1F5eEhRVUYzUXl4TlFVRjRRenRCUVVOQkxHbENRVUZUTEU5QlFWUXNRMEZCYVVJc1RVRkJha0lzUlVGQmVVSXNVVUZCZWtJN1FVRkRTRHRCUVVOS0xFTkJaa1E3TzBGQmFVSkJMRWxCUVVrc1UwRkJVeXh4UWtGQlZ6dEJRVU53UWl4WlFVRlJMRU5CUVVNN1FVRkRUQ3hqUVVGTkxFOUJSRVE3UVVGRlRDeGxRVUZQTEVWQlJrWTdRVUZIVEN4MVFrRkJaU3g1UWtGQlRUdEJRVU5xUWl4blFrRkJTU3hWUVVGVkxGTkJRVk1zWVVGQlZDeERRVUYxUWl4VlFVRjJRaXhEUVVGa08wRkJRMEVzWjBKQlFVa3NWMEZCVnl4VFFVRlRMR0ZCUVZRc1EwRkJkVUlzVjBGQmRrSXNRMEZCWmp0QlFVTkJMRzlDUVVGUkxFdEJRVklzUTBGQll5eFBRVUZrTEVkQlFYZENMRTFCUVhoQ08wRkJRMEVzY1VKQlFWTXNTMEZCVkN4RFFVRmxMRTlCUVdZc1IwRkJlVUlzVFVGQmVrSTdRVUZEU0N4VFFWSkpPMEZCVTB3c2FVSkJRVk1zYlVKQlFVMDdRVUZEV0N4blFrRkJTU3hoUVVGaExGTkJRVk1zWVVGQlZDeERRVUYxUWl4SlFVRjJRaXhEUVVGcVFqdEJRVU5CTEhWQ1FVRlhMRmxCUVZnc1EwRkJkMElzU1VGQmVFSXNSVUZCT0VJc1dVRkJPVUk3UVVGRFFTeDFRa0ZCVnl4VFFVRllMRWRCUVhWQ0xHbERRVUYyUWp0QlFVTkJMSEZDUVVGVExFbEJRVlFzUTBGQll5eFhRVUZrTEVOQlFUQkNMRlZCUVRGQ08wRkJRMGdzVTBGa1NUdEJRV1ZNTEdsQ1FVRlRMRzFDUVVGTk8wRkJRMWdzWjBKQlFVa3NZVUZCWVN4VFFVRlRMR0ZCUVZRc1EwRkJkVUlzWVVGQmRrSXNRMEZCYWtJN1FVRkRRU3gxUWtGQlZ5eExRVUZZTEVOQlFXbENMRTlCUVdwQ0xFZEJRVEpDTEUxQlFUTkNPMEZCUTBnN1FVRnNRa2tzUzBGQlJDeEZRVzFDVER0QlFVTkRMR05CUVUwc1RVRkVVRHRCUVVWRExHVkJRVThzVFVGR1VqdEJRVWRETEhWQ1FVRmxMSGxDUVVGTk8wRkJRMnBDTEdkQ1FVRkpMRlZCUVZVc1UwRkJVeXhoUVVGVUxFTkJRWFZDTEZWQlFYWkNMRU5CUVdRN1FVRkRRU3huUWtGQlNTeFhRVUZYTEZOQlFWTXNZVUZCVkN4RFFVRjFRaXhYUVVGMlFpeERRVUZtTzBGQlEwRXNiMEpCUVZFc1MwRkJVaXhEUVVGakxFOUJRV1FzUjBGQmQwSXNUMEZCZUVJN1FVRkRRU3h4UWtGQlV5eExRVUZVTEVOQlFXVXNUMEZCWml4SFFVRjVRaXhQUVVGNlFqdEJRVU5JTEZOQlVrWTdRVUZUUXl4cFFrRkJVeXh0UWtGQlRUdEJRVU5ZTEhGQ1FVRlRMRVZCUVZRc1EwRkJXU3hOUVVGYU8wRkJRMEVzWjBKQlFVa3NRMEZCUXl4UlFVRk1MRVZCUVdVc1YwRkJWeXgxUWtGQllTeFJRVUZpTEVOQlFWZzdRVUZEWml4eFFrRkJVeXhQUVVGVUxFTkJRV2xDTEUxQlFXcENMRVZCUVhsQ0xGRkJRWHBDTzBGQlEwZ3NVMEZpUmp0QlFXTkRMR2xDUVVGVExHMUNRVUZOTzBGQlExZ3NjVUpCUVZNc1IwRkJWQ3hEUVVGaExFMUJRV0k3UVVGRFNEdEJRV2hDUml4TFFXNUNTeXhGUVc5RFREdEJRVU5ETEdOQlFVMHNVVUZFVUR0QlFVVkRMR1ZCUVU4c1VVRkdVanRCUVVkRExIVkNRVUZsTEhsQ1FVRk5PMEZCUTJwQ0xHZENRVUZKTEZWQlFWVXNVMEZCVXl4aFFVRlVMRU5CUVhWQ0xGVkJRWFpDTEVOQlFXUTdRVUZEUVN4blFrRkJTU3hYUVVGWExGTkJRVk1zWVVGQlZDeERRVUYxUWl4WFFVRjJRaXhEUVVGbU8wRkJRMEVzYjBKQlFWRXNTMEZCVWl4RFFVRmpMRTlCUVdRc1IwRkJkMElzVDBGQmVFSTdRVUZEUVN4eFFrRkJVeXhMUVVGVUxFTkJRV1VzVDBGQlppeEhRVUY1UWl4UFFVRjZRanRCUVVOSUxGTkJVa1k3UVVGVFF5eHBRa0ZCVXl4dFFrRkJUVHRCUVVOWUxIRkNRVUZUTEVWQlFWUXNRMEZCV1N4TlFVRmFPMEZCUTBFc1owSkJRVWtzUTBGQlF5eFJRVUZNTEVWQlFXVXNWMEZCVnl4MVFrRkJZU3hSUVVGaUxFTkJRVmc3UVVGRFppeHhRa0ZCVXl4UFFVRlVMRU5CUVdsQ0xFMUJRV3BDTEVWQlFYbENMRkZCUVhwQ08wRkJRMGdzVTBGaVJqdEJRV05ETEdsQ1FVRlRMRzFDUVVGTk8wRkJRMWdzY1VKQlFWTXNSMEZCVkN4RFFVRmhMRTFCUVdJN1FVRkRTRHRCUVdoQ1JpeExRWEJEU3l4RlFYRkVURHRCUVVORExHTkJRVTBzUzBGRVVEdEJRVVZETEdWQlFVOHNTMEZHVWp0QlFVZERMSFZDUVVGbExIbENRVUZOTzBGQlEycENMR2RDUVVGSkxGVkJRVlVzVTBGQlV5eGhRVUZVTEVOQlFYVkNMRlZCUVhaQ0xFTkJRV1E3UVVGRFFTeG5Ra0ZCU1N4WFFVRlhMRk5CUVZNc1lVRkJWQ3hEUVVGMVFpeFhRVUYyUWl4RFFVRm1PMEZCUTBFc2IwSkJRVkVzUzBGQlVpeERRVUZqTEU5QlFXUXNSMEZCZDBJc1QwRkJlRUk3UVVGRFFTeHhRa0ZCVXl4TFFVRlVMRU5CUVdVc1QwRkJaaXhIUVVGNVFpeFBRVUY2UWp0QlFVTklMRk5CVWtZN1FVRlRReXhwUWtGQlV5eHRRa0ZCVFR0QlFVTllMSEZDUVVGVExFVkJRVlFzUTBGQldTeE5RVUZhTzBGQlEwRXNaMEpCUVVrc1EwRkJReXhSUVVGTUxFVkJRV1VzVjBGQlZ5eDFRa0ZCWVN4UlFVRmlMRU5CUVZnN1FVRkRaaXh4UWtGQlV5eFBRVUZVTEVOQlFXbENMRTFCUVdwQ0xFVkJRWGxDTEZGQlFYcENPMEZCUTBnc1UwRmlSanRCUVdORExHbENRVUZUTEcxQ1FVRk5PMEZCUTFnc2NVSkJRVk1zUjBGQlZDeERRVUZoTEUxQlFXSTdRVUZEU0R0QlFXaENSaXhMUVhKRVN5eEZRWE5GVER0QlFVTkRMR05CUVUwc1QwRkVVRHRCUVVWRExHVkJRVThzVDBGR1VqdEJRVWRETEhWQ1FVRmxMSGxDUVVGTk8wRkJRMnBDTEdkQ1FVRkpMRlZCUVZVc1UwRkJVeXhoUVVGVUxFTkJRWFZDTEZWQlFYWkNMRU5CUVdRN1FVRkRRU3huUWtGQlNTeFhRVUZYTEZOQlFWTXNZVUZCVkN4RFFVRjFRaXhYUVVGMlFpeERRVUZtTzBGQlEwRXNiMEpCUVZFc1MwRkJVaXhEUVVGakxFOUJRV1FzUjBGQmQwSXNUVUZCZUVJN1FVRkRRU3h4UWtGQlV5eExRVUZVTEVOQlFXVXNUMEZCWml4SFFVRjVRaXhOUVVGNlFqdEJRVU5CTEdkQ1FVRkpMRkZCUVVvc1JVRkJZeXhUUVVGVExGTkJRVlFzUjBGQmNVSXNTMEZCY2tJN1FVRkRha0lzVTBGVVJqdEJRVlZETEdsQ1FVRlRMRzFDUVVGTk8wRkJRMWdzWjBKQlFVa3NWMEZCVnl4VFFVRlRMR0ZCUVZRc1EwRkJkVUlzVjBGQmRrSXNRMEZCWmp0QlFVTkJMR2RDUVVGSkxFTkJRVU1zVVVGQlRDeEZRVUZsTzBGQlExZzdRVUZEU0N4aFFVWkVMRTFCUlU4N1FVRkRTQ3g1UWtGQlV5eExRVUZVTEVOQlFXVXNUMEZCWml4SFFVRjVRaXhQUVVGNlFqdEJRVU5JTzBGQlEwb3NVMEZxUWtZN1FVRnJRa01zYVVKQlFWTXNiVUpCUVUwN1FVRkRXQ3huUWtGQlNTeFhRVUZYTEZOQlFWTXNZVUZCVkN4RFFVRjFRaXhYUVVGMlFpeERRVUZtTzBGQlEwRXNjVUpCUVZNc1MwRkJWQ3hEUVVGbExFOUJRV1lzUjBGQmVVSXNUVUZCZWtJN1FVRkRRU3huUWtGQlNTeFJRVUZLTEVWQlFXTTdRVUZEVml4NVFrRkJVeXhUUVVGVUxFZEJRWEZDTEVsQlFYSkNPMEZCUTBFc2IwSkJRVWtzWVVGQllTeFRRVUZUTEdGQlFWUXNRMEZCZFVJc1QwRkJka0lzUTBGQmFrSTdRVUZEUVN4dlFrRkJTU3hYUVVGWExFdEJRVmdzUzBGQmNVSXNUVUZCZWtJc1JVRkJhVU1zVTBGQlV5eFZRVUZVTzBGQlEzQkRPMEZCUTBvN1FVRXhRa1lzUzBGMFJVczdRVUZFV1N4RFFVRllMRU5CUVdJN08ydENRWE5IWlN4Uk96czdRVU55U1dZN096czdPenM3T3pzN1NVRkZUU3h0UWp0QlFVTkdMR2xEUVVGWkxGRkJRVm9zUlVGQmNVSTdRVUZCUVRzN1FVRkRha0lzWVVGQlN5eE5RVUZNTEVkQlFXTXNVMEZCVXl4aFFVRlVMRU5CUVhWQ0xGRkJRWFpDTEVOQlFXUTdRVUZEUVN4aFFVRkxMRkZCUVV3c1IwRkJaMElzVVVGQmFFSTdRVUZEUVN4aFFVRkxMRmRCUVV3c1IwRkJiVUlzUTBGQmJrSTdRVUZEUVN4aFFVRkxMR05CUVV3N1FVRkRTRHM3T3p0NVEwRkZaMEk3UVVGRFlpeHBRa0ZCU3l4VFFVRk1MRU5CUVdVc1MwRkJTeXhSUVVGTUxFTkJRV01zV1VGQlpDeERRVUV5UWl4TFFVRkxMRkZCUVV3c1EwRkJZeXhwUWtGQmVrTXNRMEZCWml4RlFVRXlSU3hMUVVGTExFZEJRV2hHTzBGQlEwRXNiVUpCUVU4c1VVRkJVQ3hEUVVGblFpeEpRVUZvUWl3d1FrRkJNa01zUzBGQlN5eFJRVUZNTEVOQlFXTXNhVUpCUVdRc1IwRkJhME1zUTBGQk4wVTdRVUZEU0RzN08ydERRVVZUTEdFc1JVRkJaVHRCUVVOeVFpeG5Ra0ZCU1N4cFFrRkJhVUlzWTBGQll5eE5RVUZ1UXp0QlFVRkJMR2RDUVVOSkxHMUNRVUZ0UWl4alFVRmpMRU5CUVdRc1JVRkJhVUlzVFVGRWVFTTdPMEZCUjBFc2FVSkJRVXNzVFVGQlRDeERRVUZaTEUxQlFWb3NSMEZCY1VJc2FVSkJRV2xDTEVWQlFYUkRPMEZCUTBFc2FVSkJRVXNzVFVGQlRDeERRVUZaTEV0QlFWb3NSMEZCYjBJc2JVSkJRVzFDTEVWQlFYWkRPenRCUVVWQkxHZENRVUZKTEUxQlFVMHNTMEZCU3l4TlFVRk1MRU5CUVZrc1ZVRkJXaXhEUVVGMVFpeEpRVUYyUWl4RFFVRldPMEZCUTBFc1owSkJRVWtzVTBGQlNqdEJRVU5CTEdkQ1FVRkpMRWxCUVVrc1EwRkJVanRCUVVOQkxHbENRVUZMTEVsQlFVa3NTVUZCU1N4RFFVRmlMRVZCUVdkQ0xFbEJRVWtzWTBGQmNFSXNSVUZCYjBNc1JVRkJSU3hEUVVGMFF5eEZRVUY1UXp0QlFVTnlReXh2UWtGQlNTeEpRVUZKTEVOQlFWSTdRVUZEUVN4eFFrRkJTeXhKUVVGSkxFbEJRVWtzUTBGQllpeEZRVUZuUWl4SlFVRkpMR2RDUVVGd1FpeEZRVUZ6UXl4RlFVRkZMRU5CUVhoRExFVkJRVEpETzBGQlEzWkRMSGRDUVVGSkxHTkJRV01zUTBGQlpDeEZRVUZwUWl4RFFVRnFRaXhEUVVGS0xFVkJRWGRDTzBGQlEzQkNMRFJDUVVGSkxFbEJRVW9zUTBGQlV5eERRVUZVTEVWQlFWa3NRMEZCV2l4RlFVRmxMRXRCUVVzc1YwRkJjRUlzUlVGQmFVTXNTMEZCU3l4WFFVRjBRenRCUVVOSU8wRkJRMFFzZVVKQlFVc3NSVUZCVER0QlFVTklPMEZCUTBRc2NVSkJRVXNzUlVGQlREdEJRVU5JTzBGQlEwUXNaMEpCUVVrc1UwRkJTaXhIUVVGblFpeFRRVUZvUWp0QlFVTkJMR2RDUVVGSkxFbEJRVW83UVVGRFFTeHBRa0ZCU3l4UlFVRk1MRU5CUVdNc1QwRkJaQ3hEUVVGelFpeFRRVUYwUWl4SFFVRnJReXhGUVVGc1F6dEJRVU5CTEdsQ1FVRkxMRkZCUVV3c1EwRkJZeXhQUVVGa0xFTkJRWE5DTEZkQlFYUkNMRU5CUVd0RExFdEJRVXNzVFVGQmRrTTdRVUZEU0RzN096czdPMnRDUVVkVkxHMUNPenM3UVVNeFEyWTdPenM3T3pzN096czdTVUZGVFN4blFqdEJRVU5HTERoQ1FVRlpMRkZCUVZvc1JVRkJjMEk3UVVGQlFUczdRVUZEYkVJc1lVRkJTeXhYUVVGTUxFZEJRVzFDTEVOQlFXNUNPMEZCUTBFc1lVRkJTeXhOUVVGTUxFZEJRV01zTkVKQlFXUTdRVUZEUVN4aFFVRkxMRWRCUVV3c1IwRkJWeXhUUVVGVExHVkJRVlFzUTBGQmVVSXNTMEZCU3l4TlFVRTVRaXhGUVVGelF5eExRVUYwUXl4RFFVRllPMEZCUTBFc1lVRkJTeXhQUVVGTUxFZEJRV1VzVTBGQlV5eGxRVUZVTEVOQlFYbENMRXRCUVVzc1RVRkJPVUlzUlVGQmMwTXNUVUZCZEVNc1EwRkJaanRCUVVOQkxHRkJRVXNzVDBGQlRDeERRVUZoTEZsQlFXSXNRMEZCTUVJc1QwRkJNVUlzUlVGQmJVTXNVMEZCYmtNN1FVRkRRU3hoUVVGTExFZEJRVXdzUTBGQlV5eFhRVUZVTEVOQlFYRkNMRXRCUVVzc1QwRkJNVUk3UVVGRFFTeGhRVUZMTEZGQlFVd3NSMEZCWjBJc1VVRkJhRUk3UVVGRFFTeGhRVUZMTEdOQlFVdzdRVUZEU0RzN096dDVRMEZGWjBJN1FVRkRZaXhwUWtGQlN5eFRRVUZNTEVOQlFXVXNTMEZCU3l4UlFVRk1MRU5CUVdNc1dVRkJaQ3hEUVVFeVFpeExRVUZMTEZGQlFVd3NRMEZCWXl4cFFrRkJla01zUTBGQlppeEZRVUUwUlN4TFFVRkxMRWRCUVdwR08wRkJRMEVzYlVKQlFVOHNVVUZCVUN4RFFVRm5RaXhKUVVGb1FpeDFRa0ZCZDBNc1MwRkJTeXhSUVVGTUxFTkJRV01zYVVKQlFXUXNSMEZCYTBNc1EwRkJNVVU3UVVGRFNEczdPMnREUVVWVExHRXNSVUZCWlR0QlFVTnlRaXhuUWtGQlNTeHBRa0ZCYVVJc1kwRkJZeXhOUVVGdVF6dEJRVUZCTEdkQ1FVTkpMRzFDUVVGdFFpeGpRVUZqTEVOQlFXUXNSVUZCYVVJc1RVRkVlRU03TzBGQlIwRXNhVUpCUVVzc1IwRkJUQ3hEUVVGVExGbEJRVlFzUTBGQmMwSXNVVUZCZEVJc1JVRkJaME1zYVVKQlFXbENMRVZCUVdwRU8wRkJRMEVzYVVKQlFVc3NSMEZCVEN4RFFVRlRMRmxCUVZRc1EwRkJjMElzVDBGQmRFSXNSVUZCSzBJc2JVSkJRVzFDTEVWQlFXeEVPenRCUVVWQkxHZENRVUZKTEVsQlFVa3NRMEZCVWp0QlFVTkJMR2xDUVVGTExFbEJRVWtzU1VGQlNTeERRVUZpTEVWQlFXZENMRWxCUVVrc1kwRkJjRUlzUlVGQmIwTXNSVUZCUlN4RFFVRjBReXhGUVVGNVF6dEJRVU55UXl4dlFrRkJTU3hKUVVGSkxFTkJRVkk3UVVGRFFTeHhRa0ZCU3l4SlFVRkpMRWxCUVVrc1EwRkJZaXhGUVVGblFpeEpRVUZKTEdkQ1FVRndRaXhGUVVGelF5eEZRVUZGTEVOQlFYaERMRVZCUVRKRE8wRkJRM1pETEhkQ1FVRkpMR05CUVdNc1EwRkJaQ3hGUVVGcFFpeERRVUZxUWl4RFFVRktMRVZCUVhsQ08wRkJRM0pDTERSQ1FVRkpMRGhFUVVObExFTkJSR1lzWjBSQlJXVXNRMEZHWml4dlJFRkhiVUlzUzBGQlN5eFhRVWg0UWl4cFJVRkJTanRCUVV0QkxEWkNRVUZMTEVkQlFVd3NRMEZCVXl4VFFVRlVMRWxCUVhOQ0xGTkJRWFJDTzBGQlEwZzdRVUZEUkN4NVFrRkJTeXhGUVVGTU8wRkJRMGc3UVVGRFJDeHhRa0ZCU3l4RlFVRk1PMEZCUTBnN1FVRkRSQ3hwUWtGQlN5eFJRVUZNTEVOQlFXTXNUMEZCWkN4RFFVRnpRaXhUUVVGMFFpeEhRVUZyUXl4RlFVRnNRenRCUVVOQkxHbENRVUZMTEZGQlFVd3NRMEZCWXl4UFFVRmtMRU5CUVhOQ0xGZEJRWFJDTEVOQlFXdERMRXRCUVVzc1IwRkJka003UVVGRFNEczdPenM3TzJ0Q1FVZFZMR2RDT3pzN1FVTXZRMlk3T3pzN096czdPenM3U1VGRlRTeHBRanRCUVVOR0xDdENRVUZaTEZGQlFWb3NSVUZCY1VJN1FVRkJRVHM3UVVGRGFrSXNZVUZCU3l4SFFVRk1MRWRCUVZjc1UwRkJVeXhoUVVGVUxFTkJRWFZDTEV0QlFYWkNMRU5CUVZnN1FVRkRRU3hoUVVGTExGRkJRVXdzUjBGQlowSXNVVUZCYUVJN1FVRkRRU3hoUVVGTExHTkJRVXc3UVVGRFNEczdPenQ1UTBGRlowSTdRVUZEWWl4cFFrRkJTeXhUUVVGTUxFTkJRV1VzUzBGQlN5eFJRVUZNTEVOQlFXTXNXVUZCWkN4RFFVRXlRaXhMUVVGTExGRkJRVXdzUTBGQll5eHBRa0ZCZWtNc1EwRkJaaXhGUVVFeVJTeExRVUZMTEVkQlFXaEdPMEZCUTBFc2JVSkJRVThzVVVGQlVDeERRVUZuUWl4SlFVRm9RaXgzUWtGQmVVTXNTMEZCU3l4UlFVRk1MRU5CUVdNc2FVSkJRV1FzUjBGQmEwTXNRMEZCTTBVN1FVRkRTRHM3TzJ0RFFVVlRMR0VzUlVGQlpUdEJRVU55UWl4blFrRkJTU3hwUWtGQmFVSXNZMEZCWXl4TlFVRnVRenRCUVVGQkxHZENRVU5KTEcxQ1FVRnRRaXhqUVVGakxFTkJRV1FzUlVGQmFVSXNUVUZFZUVNN1FVRkZRU3huUWtGQlNTeGxRVUZsTEVWQlFXNUNPenRCUVVWQkxHbENRVUZMTEVsQlFVa3NTVUZCU1N4RFFVRmlMRVZCUVdkQ0xFbEJRVWtzWTBGQmNFSXNSVUZCYjBNc1JVRkJSU3hEUVVGMFF5eEZRVUY1UXp0QlFVTnlReXh2UWtGQlNTeEpRVUZKTEVOQlFWSXNSVUZCVnl4blFrRkJaMElzU1VGQmFFSTdRVUZEV0N4eFFrRkJTeXhKUVVGSkxFbEJRVWtzUTBGQllpeEZRVUZuUWl4SlFVRkpMR2RDUVVGd1FpeEZRVUZ6UXl4RlFVRkZMRU5CUVhoRExFVkJRVEpETzBGQlEzWkRMSGRDUVVGSkxHTkJRV01zUTBGQlpDeEZRVUZwUWl4RFFVRnFRaXhEUVVGS0xFVkJRWGxDTzBGQlEzSkNMSGREUVVGblFpeEhRVUZvUWp0QlFVTklMSEZDUVVaRUxFMUJSVThzWjBKQlFXZENMRWRCUVdoQ08wRkJRMVk3UVVGRFJDeHhRa0ZCU3l4SFFVRk1MRU5CUVZNc1UwRkJWQ3hIUVVGeFFpeFpRVUZ5UWp0QlFVTklPMEZCUTBRc2FVSkJRVXNzVVVGQlRDeERRVUZqTEU5QlFXUXNRMEZCYzBJc1UwRkJkRUlzUjBGQmEwTXNSVUZCYkVNN1FVRkRRU3hwUWtGQlN5eFJRVUZNTEVOQlFXTXNUMEZCWkN4RFFVRnpRaXhYUVVGMFFpeERRVUZyUXl4TFFVRkxMRWRCUVhaRE8wRkJRMGc3T3pzN096dHJRa0ZIVlN4cFFqczdPMEZEYWtObU96czdPenM3T3pzN08wbEJRMDBzVVR0QlFVTkdMSGRDUVVGaE8wRkJRVUU3TzBGQlExUXNZVUZCU3l4VFFVRk1MRWRCUVdsQ0xFVkJRV3BDTzBGQlEwZzdPenM3TWtKQlJVVXNTU3hGUVVGTkxFVXNSVUZCU1R0QlFVTlVMR2xDUVVGTExGTkJRVXdzUTBGQlpTeEpRVUZtTEVsQlFYVkNMRXRCUVVzc1UwRkJUQ3hEUVVGbExFbEJRV1lzUzBGQmQwSXNSVUZCTDBNN1FVRkRRU3hwUWtGQlN5eFRRVUZNTEVOQlFXVXNTVUZCWml4RlFVRnhRaXhKUVVGeVFpeERRVUV3UWl4RlFVRXhRanRCUVVOSU96czdaME5CUlU4c1NTeEZRVUZsTzBGQlFVRXNPRU5CUVU0c1NVRkJUVHRCUVVGT0xHOUNRVUZOTzBGQlFVRTdPMEZCUTI1Q0xHZENRVUZKTEV0QlFVc3NVMEZCVEN4RFFVRmxMRWxCUVdZc1EwRkJTaXhGUVVFd1FqdEJRVU4wUWl4eFFrRkJTeXhUUVVGTUxFTkJRV1VzU1VGQlppeEZRVUZ4UWl4UFFVRnlRaXhEUVVFMlFpeGpRVUZOTzBGQlF5OUNMSGRDUVVGSkxFZEJRVWNzVjBGQlVDeEZRVUZ0UWp0QlFVTm1MREpFUVVGSkxFVkJRVW9zWjBKQlFWVXNTVUZCVmp0QlFVTklMSEZDUVVaRUxFMUJSVThzYjBKQlFVMHNTVUZCVGp0QlFVTldMR2xDUVVwRU8wRkJTMGc3UVVGRFNqczdPelJDUVVWSExFa3NSVUZCVFN4RkxFVkJRVWs3UVVGRFZpeG5Ra0ZCU1N4RFFVRkRMRVZCUVV3c1JVRkJVenRCUVVOTUxIVkNRVUZQTEV0QlFVc3NVMEZCVEN4RFFVRmxMRWxCUVdZc1EwRkJVRHRCUVVOSUxHRkJSa1FzVFVGRlR6dEJRVU5JTEhGQ1FVRkxMRk5CUVV3c1EwRkJaU3hKUVVGbUxFbEJRWFZDTEV0QlFVc3NVMEZCVEN4RFFVRmxMRWxCUVdZc1JVRkJjVUlzVFVGQmNrSXNRMEZCTkVJc1ZVRkJReXhoUVVGRU8wRkJRVUVzTWtKQlFXMUNMRVZCUVVVc1QwRkJUeXhoUVVGVUxFTkJRVzVDTzBGQlFVRXNhVUpCUVRWQ0xFTkJRWFpDTzBGQlEwZzdRVUZEU2pzN096WkNRVVZKTEVrc1JVRkJUU3hGTEVWQlFVazdRVUZEV0N4cFFrRkJTeXhGUVVGTUxFTkJRVkVzU1VGQlVpeEZRVUZqTEU5QlFXUTdRVUZEUVN4blFrRkJTU3hQUVVGUExFbEJRVmc3TzBGQlJVRXNjVUpCUVZNc1QwRkJWQ3hIUVVFd1FqdEJRVU4wUWp0QlFVTkJMSFZDUVVGUExFdEJRVXNzVTBGQlRDeERRVUZsTEVsQlFXWXNRMEZCVUR0QlFVTklPMEZCUTBvN096czdPenRyUWtGSFZTeFJPenM3UVVONFEyWTdPenM3T3pzN096czdTVUZEVFN4Tk8wRkJRMFlzYzBKQlFUQkNPMEZCUVVFN08wRkJRVUVzV1VGQlpDeFBRVUZqTEhWRlFVRktMRVZCUVVrN08wRkJRVUU3TzBGQlEzUkNMR0ZCUVVzc1RVRkJUQ3hIUVVGakxGRkJRVkVzVFVGQmRFSTdRVUZEUVN4bFFVRlBMR2RDUVVGUUxFTkJRWGRDTEZsQlFYaENMRVZCUVhORE8wRkJRVUVzYlVKQlFVMHNUVUZCU3l4VFFVRk1MRU5CUVdVc1QwRkJUeXhSUVVGUUxFTkJRV2RDTEVsQlFTOUNMRU5CUVU0N1FVRkJRU3hUUVVGMFF6dEJRVU5CTEdGQlFVc3NVMEZCVEN4RFFVRmxMRTlCUVU4c1VVRkJVQ3hEUVVGblFpeEpRVUV2UWp0QlFVTklPenM3TzNGRFFVTlpMRWtzUlVGQlRUdEJRVU5tTEdkQ1FVRkpMR05CUVVvN1FVRkRRU3huUWtGQlNTeFBRVUZQTEVsQlFWZzdRVUZEUVN4blFrRkJTU3hEUVVGRExFdEJRVXNzVFVGQlZpeEZRVUZyUWp0QlFVTmtPMEZCUTBnc1lVRkdSQ3hOUVVWUExFbEJRVWtzUzBGQlN5eE5RVUZNTEVOQlFWa3NUVUZCV2l4TFFVRjFRaXhEUVVFelFpeEZRVUU0UWp0QlFVTnFReXgxUWtGQlR5eExRVUZMTEZOQlFVd3NRMEZCWlN4SlFVRm1MRVZCUVhGQ0xFdEJRVXNzVFVGQlRDeERRVUZaTEVOQlFWb3NRMEZCY2tJc1EwRkJVRHRCUVVOSUxHRkJSazBzVFVGRlFUdEJRVU5JTEhGQ1FVRkxMRTFCUVV3c1EwRkJXU3hQUVVGYUxFTkJRVzlDTEZWQlFVTXNVMEZCUkN4RlFVRmxPMEZCUXk5Q0xIZENRVUZKTEV0QlFVc3NVMEZCVEN4RFFVRmxMRWxCUVdZc1JVRkJjVUlzVTBGQmNrSXNRMEZCU2l4RlFVRnhRenRCUVVOcVF5d3JRa0ZCVHl4UlFVRlJMRk5CUVdZN1FVRkRTRHRCUVVOS0xHbENRVXBFTzBGQlMwZzdRVUZEUkN4dFFrRkJUeXhMUVVGUU8wRkJRMGc3T3p0clEwRkZVeXhKTEVWQlFVMHNTU3hGUVVGTE8wRkJRMnBDTEdkQ1FVRkpMRTlCUVU4c1MwRkJTeXhMUVVGYUxFdEJRWE5DTEZGQlFYUkNMRWxCUVd0RExGTkJRVk1zUzBGQlN5eExRVUZvUkN4SlFVTkJMRTlCUVU4c1MwRkJTeXhMUVVGYUxFdEJRWE5DTEZWQlFYUkNMRWxCUVc5RExFdEJRVXNzUzBGQlRDeERRVUZYTEVsQlFWZ3NRMEZFY0VNc1NVRkZRU3hMUVVGTExFdEJRVXdzV1VGQmMwSXNUVUZCZEVJc1NVRkJaME1zUzBGQlN5eExRVUZNTEVOQlFWY3NTMEZCU3l4TFFVRm9RaXhEUVVad1F5eEZRVVUwUkR0QlFVTjRSQ3gxUWtGQlR5eEpRVUZRTzBGQlEwZzdRVUZEU2pzN08ydERRVVZUTEVrc1JVRkJTenRCUVVGQk96dEJRVU5ZTEcxQ1FVRlBMRXRCUVVzc1MwRkJUQ3hEUVVGWExFTkJRVmdzUTBGQlVEdEJRVU5CTEdkQ1FVRkpMRmRCUVZjc1MwRkJTeXhYUVVGd1FqdEJRVU5CTEdkQ1FVRkpMRmRCUVZjc1MwRkJTeXhaUVVGTUxFTkJRV3RDTEVsQlFXeENMRU5CUVdZN08wRkJSVUVzWjBKQlFVa3NRMEZCUXl4UlFVRk1MRVZCUVdVN1FVRkRXRHRCUVVOSUxHRkJSa1FzVFVGRlR5eEpRVUZKTEU5QlFVOHNVMEZCVXl4TFFVRm9RaXhMUVVFd1FpeFJRVUU1UWl4RlFVRjNRenRCUVVNelF5eHhRa0ZCU3l4WFFVRk1MRWRCUVcxQ0xGTkJRVk1zUzBGQk5VSTdRVUZEU0N4aFFVWk5MRTFCUlVFc1NVRkJTU3hUUVVGVExFdEJRVlFzV1VGQk1FSXNUVUZCT1VJc1JVRkJjME03UVVGRGVrTXNjVUpCUVVzc1YwRkJUQ3hIUVVGdFFpeExRVUZMTEV0QlFVd3NRMEZCVnl4VFFVRlRMRXRCUVhCQ0xFVkJRVEpDTEVOQlFUTkNMRU5CUVc1Q08wRkJRMGdzWVVGR1RTeE5RVVZCTEVsQlFVa3NUMEZCVHl4VFFVRlRMRXRCUVdoQ0xFdEJRVEJDTEZWQlFUbENMRVZCUVRCRE8wRkJRemRETEhGQ1FVRkxMRmRCUVV3c1IwRkJiVUlzVTBGQlV5eExRVUZVTEVOQlFXVXNTVUZCWml4RFFVRnVRanRCUVVOSU96dEJRVVZFTEc5Q1FVRlJMRTlCUVZJc1IwRkRTeXhKUVVSTUxFTkJRMVVzV1VGQlRUdEJRVU5TTEc5Q1FVRkpMRmxCUVZrc1UwRkJVeXhQUVVGNlFpeEZRVUZyUXp0QlFVTTVRaXd5UWtGQlN5eGpRVUZNTEVkQlFYTkNMRk5CUVZNc1QwRkJWQ3hEUVVGcFFpeFBRVUZMTEdOQlFYUkNMRU5CUVhSQ0xFZEJRVGhFTEZOQlFWTXNUMEZCVkN4RlFVRTVSRHRCUVVOSU8wRkJRMG9zWVVGTVRDeEZRVTFMTEVsQlRrd3NRMEZOVlN4WlFVRk5PMEZCUTFJc2IwSkJRVWtzV1VGQldTeFRRVUZUTEdGQlFYcENMRVZCUVhkRE8wRkJRM0JETERKQ1FVRkxMRmRCUVV3c1IwRkJiVUlzVTBGQlV5eGhRVUZVTEVOQlFYVkNMRTlCUVVzc1YwRkJOVUlzUTBGQmJrSXNSMEZCT0VRc1UwRkJVeXhoUVVGVUxFVkJRVGxFTzBGQlEwZzdRVUZEU2l4aFFWWk1MRVZCVjBzc1NVRllUQ3hEUVZkVkxGbEJRVTA3UVVGRFVpeHZRa0ZCU1N4WlFVRlpMRk5CUVZNc1QwRkJla0lzUlVGQmEwTTdRVUZET1VJc01rSkJRVXNzVjBGQlRDeEhRVUZ0UWl4VFFVRlRMRTlCUVZRc1EwRkJhVUlzVDBGQlN5eFhRVUYwUWl4RFFVRnVRaXhIUVVGM1JDeFRRVUZUTEU5QlFWUXNSVUZCZUVRN1FVRkRTRHRCUVVOS0xHRkJaa3dzUlVGblFrc3NTVUZvUWt3c1EwRm5RbFVzV1VGQlRUdEJRVU5TTEhWQ1FVRkxMRmRCUVV3c1IwRkJiVUlzVVVGQmJrSTdRVUZEUVN4MVFrRkJTeXhqUVVGTUxFZEJRWE5DTEU5QlFVc3NWMEZCTTBJN1FVRkRTQ3hoUVc1Q1RDeEZRVzlDU3l4TFFYQkNUQ3hEUVc5Q1Z5eFZRVUZETEV0QlFVUXNSVUZCVnp0QlFVTmtMSGRDUVVGUkxFZEJRVklzUTBGQldTeExRVUZhTzBGQlEwZ3NZVUYwUWt3N1FVRjFRa2c3T3pzN096dHJRa0ZIVlN4Tklpd2labWxzWlNJNkltZGxibVZ5WVhSbFpDNXFjeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUlvWm5WdVkzUnBiMjRnWlNoMExHNHNjaWw3Wm5WdVkzUnBiMjRnY3lodkxIVXBlMmxtS0NGdVcyOWRLWHRwWmlnaGRGdHZYU2w3ZG1GeUlHRTlkSGx3Wlc5bUlISmxjWFZwY21VOVBWd2lablZ1WTNScGIyNWNJaVltY21WeGRXbHlaVHRwWmlnaGRTWW1ZU2x5WlhSMWNtNGdZU2h2TENFd0tUdHBaaWhwS1hKbGRIVnliaUJwS0c4c0lUQXBPM1poY2lCbVBXNWxkeUJGY25KdmNpaGNJa05oYm01dmRDQm1hVzVrSUcxdlpIVnNaU0FuWENJcmJ5dGNJaWRjSWlrN2RHaHliM2NnWmk1amIyUmxQVndpVFU5RVZVeEZYMDVQVkY5R1QxVk9SRndpTEdaOWRtRnlJR3c5Ymx0dlhUMTdaWGh3YjNKMGN6cDdmWDA3ZEZ0dlhWc3dYUzVqWVd4c0tHd3VaWGh3YjNKMGN5eG1kVzVqZEdsdmJpaGxLWHQyWVhJZ2JqMTBXMjlkV3pGZFcyVmRPM0psZEhWeWJpQnpLRzQvYmpwbEtYMHNiQ3hzTG1WNGNHOXlkSE1zWlN4MExHNHNjaWw5Y21WMGRYSnVJRzViYjEwdVpYaHdiM0owYzMxMllYSWdhVDEwZVhCbGIyWWdjbVZ4ZFdseVpUMDlYQ0ptZFc1amRHbHZibHdpSmlaeVpYRjFhWEpsTzJadmNpaDJZWElnYnowd08yODhjaTVzWlc1bmRHZzdieXNyS1hNb2NsdHZYU2s3Y21WMGRYSnVJSE45S1NJc0lsd2lkWE5sSUhOMGNtbGpkRndpTzF4eVhHNW1kVzVqZEdsdmJpQmhaR1JCWW05MWRDZ3BJSHRjY2x4dUlDQWdJR3hsZENCaFltOTFkQ0E5SUdSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSW9YQ0lqWVdKdmRYUkVhWFpjSWlrN1hISmNiaUFnSUNCcFppQW9JV0ZpYjNWMEtTQjdYSEpjYmlBZ0lDQWdJQ0FnYkdWMElHRmliM1YwUkdsMklEMGdaRzlqZFcxbGJuUXVZM0psWVhSbFJXeGxiV1Z1ZENoY0ltUnBkbHdpS1R0Y2NseHVJQ0FnSUNBZ0lDQmhZbTkxZEVScGRpNXpaWFJCZEhSeWFXSjFkR1VvWENKcFpGd2lMQ0JjSW1GaWIzVjBSR2wyWENJcE8xeHlYRzRnSUNBZ0lDQWdJR1J2WTNWdFpXNTBMbUp2WkhrdVlYQndaVzVrUTJocGJHUW9ZV0p2ZFhSRWFYWXBPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUdGaWIzVjBSR2wyTG1sdWJtVnlTRlJOVENBOVhISmNiaUFnSUNBZ0lDQWdZRHhvTVQ0OFlTQm9jbVZtUFNkb2RIUndjem92TDNKMUxuZHBhMmx3WldScFlTNXZjbWN2ZDJscmFTOGxSREFsT1RnbFJEQWxRak1sUkRFbE9EQWxSREFsUWpCZkpVTXlKVUZDSlVRd0pUazJKVVF3SlVJNEpVUXdKVUkzSlVRd0pVSkVKVVF4SlRoREpVTXlKVUpDSno3UW1OQ3owWURRc0NEQ3E5Q1cwTGpRdDlDOTBZekN1end2WVQ0OEwyZ3hQbHh5WEc0OGNEN1FuTkMxMFlIUmd0QytJTkMwMExYUXVkR0IwWUxRc3RDNDBZOGcwWTNSZ3RDKzBMa2cwTGpRczlHQTBZc2c0b0NVSU1LcjBMTFJnZEMxMEx2UXRkQzkwTDNRc05HUHdyc2c0b0NVSU5HTjBZTFF2aURSZ05DdzBMZlF2TkMxMFlmUXRkQzkwTDNRc05HUElOQzkwTEFnMExyUXU5QzEwWUxRdXRDNElOQy8wTDdRc3RDMTBZRFJoZEM5MEw3UmdkR0MwWXdnMExqUXU5QzRYSEpjYnRDLzBMdlF2dEdCMExyUXZ0R0IwWUxSakNEaWdKUWcwTEhRdGRDMzBMUFJnTkN3MEwzUXVOR0gwTDNRc05HUExDRFF2dEN6MFlEUXNOQzkwTGpSaDlDMTBMM1F2ZEN3MFk4c0lOQzQwTHZRdUNEUXQ5Q3cwTHpRdXRDOTBZUFJndEN3MFk4Z0tOQ3lJTkMvMFlEUXRkQzAwTFhRdTlDMUlPS0FsQ0RRc2RDMTBZSFF1dEMrMEwzUXRkR0gwTDNRc05HUElOQy8wTHZRdnRHQjBMclF2dEdCMFlMUmpDa3VQQzl3UGx4eVhHNDhjRDdRbXRDdzBMYlF0TkN3MFk4ZzBMclF1OUMxMFlMUXV0Q3dJTkM5MExBZzBZM1JndEMrMExrZzBML1F2dEN5MExYUmdOR0YwTDNRdnRHQjBZTFF1Q0RRdk5DKzBMYlF0ZEdDSU5DOTBMRFJoZEMrMExUUXVOR0MwWXpSZ2RHUElOQ3lJTkMwMExMUmc5R0ZJTkdCMEw3UmdkR0MwTDdSajlDOTBMalJqOUdGT2lEUXNkR0wwWUxSakNEQ3E5QzIwTGpRc3RDKzBMbkN1eUJjY2x4dUtOQzMwTERRdjlDKzBMdlF2ZEMxMEwzUXZkQyswTGtwSU5DNDBMdlF1Q0RRc2RHTDBZTFJqQ0RDcTlDODBaSFJnTkdDMExMUXZ0QzV3cnNnS05DLzBZUFJnZEdDMEw3UXVTa3VJTkNhMEx2UXRkR0MwTHJRc0NEUXVOQzgwTFhRdGRHQ0lOQ3kwTDdSZ2RDMTBMelJqQ0RSZ2RDKzBZSFF0ZEMwMExYUXVTd2cwTDdRdXRHQTBZUFF0dEN3MFk3UmlkQzQwWVVnMExYUmtTNDhMM0ErWEhKY2JqeDFiRDRnMEtEUXNOR0IwTC9SZ05DMTBMVFF0ZEM3MExYUXZkQzQwTFVnMExiUXVOQ3kwWXZSaFNEUXV0QzcwTFhSZ3RDKzBMb2cwTElnMEwzUXNOR0gwTERRdTlDMUlOQzQwTFBSZ05HTElOQzkwTERRdDlHTDBMTFFzTkMxMFlMUmdkR1BJTkMvMExYUmdOQ3kwWXZRdkNEUXY5QyswTHJRdnRDNzBMWFF2ZEM0MExYUXZDNGcwSnJRc05DMjBMVFF2dEMxSU5HQjBMdlF0ZEMwMFlQUmp0R0owTFhRdFNCY2NseHUwTC9RdnRDNjBMN1F1OUMxMEwzUXVOQzFJTkdBMExEUmdkR0IwWWZRdU5HQzBZdlFzdEN3MExYUmd0R0IwWThnMEwzUXNDRFF2dEdCMEwzUXZ0Q3kwTFVnMEwvUmdOQzEwTFRSaTlDMDBZUFJpZEMxMExQUXZpRFF2OUMrSU5HQzBMRFF1dEM0MEx3ZzBML1JnTkN3MExMUXVOQzcwTERRdkRwY2NseHVQR3hwUHRDeUlOQy8wWVBSZ2RHQzBMN1F1U0FvMEx6UmtkR0EwWUxRc3RDKzBMa3BJTkM2MEx2UXRkR0MwTHJRdFN3ZzBZRFJqOUMwMEw3UXZDRFJnU0RRdXRDKzBZTFF2dEdBMEw3UXVTRFJnTkMrMExMUXZkQytJTkdDMFlEUXVDRFF0dEM0MExMUmk5QzFJTkM2MEx2UXRkR0MwTHJRdUN3ZzBMZlFzTkdBMEw3UXR0QzAwTERRdGRHQzBZSFJqeURRdHRDNDBMZlF2ZEdNT3p3dmJHaytYSEpjYmp4c2FUN1F0ZEdCMEx2UXVDRFJneURRdHRDNDBMTFF2dEM1SU5DNjBMdlF0ZEdDMExyUXVDRFF0ZEdCMFlMUmpDRFF0TkN5MExVZzBMalF1OUM0SU5HQzBZRFF1Q0RRdHRDNDBMTFJpOUMxSU5HQjBMN1JnZEMxMExUUXV0QzRMQ0RSZ3RDK0lOR04wWUxRc0NEUXV0QzcwTFhSZ3RDNjBMQWcwTC9SZ05DKzBMVFF2dEM3MExiUXNOQzEwWUlnMExiUXVOR0MwWXc3SUZ4eVhHN1FzaURRdjlHQTBMN1JndEM0MExMUXZkQyswTHdnMFlIUXU5R0QwWWZRc05DMUxDRFF0ZEdCMEx2UXVDRFJnZEMrMFlIUXRkQzAwTFhRdVNEUXZOQzEwTDNSak5HSTBMVWcwTFRRc3RHRDBZVWcwTGpRdTlDNElOQ3gwTDdRdTlHTTBZalF0U0RSZ3RHQTBaSFJoU3dnMExyUXU5QzEwWUxRdXRDd0lOR0QwTHpRdU5HQTBMRFF0ZEdDSUNqQ3E5QyswWUlnMEw3UXROQzQwTDNRdnRHSDBMWFJnZEdDMExMUXNNSzdJRnh5WEc3UXVOQzcwTGdnd3F2UXZ0R0NJTkMvMExYUmdOQzEwTDNRc05HQjBMWFF1OUdSMEwzUXZkQyswWUhSZ3RDNHdyc3BQQzlzYVQ1Y2NseHVQQzkxYkQ1Y2NseHVQSEErMEpqUXM5R0EwTDdRdWlEUXZkQzFJTkMvMFlEUXVOQzkwTGpRdk5DdzBMWFJnaURRdjlHQTBZL1F2TkMrMExQUXZpRFJnOUdIMExEUmdkR0MwTGpSanlEUXNpRFF1TkN6MFlEUXRTd2cwTEFnMEx2UXVOR0kwWXdnMFlEUXNOR0IwWUhSZ3RDdzBMTFF1OUdQMExYUmdpRFF1TkM3MExnZzBMUFF0ZEM5MExYUmdOQzQwWURSZzlDMTBZSWcwTDNRc05HSDBMRFF1OUdNMEwzUmc5R09JRnh5WEc3UXV0QyswTDNSaE5DNDBMUFJnOUdBMExEUmh0QzQwWTRnd3F2UXR0QzQwTExSaTlHRndyc2cwTHJRdTlDMTBZTFF2dEM2TENEUXV0QyswWUxRdnRHQTBZdlF0U0RRdDlDdzBZTFF0ZEM4SU5DeTBMZlFzTkM0MEx6UXZ0QzAwTFhRdWRHQjBZTFFzdEdEMFk3UmdpRFJnZEMrMExQUXU5Q3cwWUhRdmRDK0lOQy8wWURRc05DeTBMalF1OUN3MEx3ZzBZUFF0dEMxSU5DeDBMWFF0eURRdGRDejBMNGcwWVBSaDlDdzBZSFJndEM0MFk4Z1hISmNiaWpRdnRDOUlOR1AwTExRdTlHUDBMWFJndEdCMFk4ZzBMM1FzTkN4MEx2Ump0QzAwTERSZ3RDMTBMdlF0ZEM4S1M0OEwzQStYSEpjYmp4d1B0Q2YwTDdRdTlDMUlOQyswWUxRdnRDeDBZRFFzTkMyMExEUXRkR0NJTkdDMExYUXV0R0QwWW5RdGRDMUlOQy8wTDdRdXRDKzBMdlF0ZEM5MExqUXRTNGcwSmdnMEwvUXZ0QzMwTExRdnRDNzBZL1F0ZEdDSU5DLzBMN1F1OUdNMExmUXZ0Q3kwTERSZ3RDMTBMdlJqaURRc3RDMzBMRFF1TkM4MEw3UXROQzEwTG5SZ2RHQzBMTFF2dEN5MExEUmd0R01JTkdCSU5DNDBMUFJnTkMrMExrdUlGeHlYRzdRbXRDNzBMalF1aURRdjlDK0lOQy8wTDdRdTlHT0lOQ3kwWXZRdDlHTDBMTFFzTkMxMFlJZzBMalF2ZEN5MExYUmdOR0IwTGpSamlEUmdkQyswWUhSZ3RDKzBZL1F2ZEM0MFk4ZzBMclF1OUMxMFlMUXV0QzRMQ0RRdjlDK0lOQzYwTDdSZ3RDKzBZRFF2dEM1SU5DLzBMN1F1OUdNMExmUXZ0Q3kwTERSZ3RDMTBMdlJqQ0RRdXRDNzBMalF1dEM5MFlQUXV5QW9JTkMyMExqUXN0Q3cwWThnTFNCY2NseHUwWVBRdk5DNDBZRFFzTkMxMFlJc0lOQzgwTFhSZ05HQzBMTFFzTkdQSUMwZzBMN1F0dEM0MExMUXNOQzEwWUlnS1M0OEwzQStZRHRjY2x4dWZWeHlYRzVjY2x4dVpYaHdiM0owSUdSbFptRjFiSFFnWVdSa1FXSnZkWFE3SWl3aUozVnpaU0J6ZEhKcFkzUW5PMXh5WEc1Y2NseHVZMnhoYzNNZ1EyRnNZM1ZzWVhScGJtZEhZVzFsVEdsbVpTQjdYSEpjYmlBZ0lDQmpiMjV6ZEhKMVkzUnZjaWhzYVc1bExDQmpiMngxYlc0cElIdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtZGhiV1ZNYVc1bFRuVnRZbVYzSUQwZ2JHbHVaU0I4ZkNBME1EdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtZGhiV1ZEYjJ4MWJXNU9kVzFpWlhjZ1BTQmpiMngxYlc0Z2ZId2dOREE3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVuWVcxbFRHbG1aVUZ5Y21GNUlEMGdkR2hwY3k1amNtVmhkR1ZIWVcxbFFYSnlZWGtvYkdsdVpTd2dZMjlzZFcxdUtUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtTnZiblJoYVc0Z1BTQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0NjalkyOXVkR0ZwYmljcE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVoyRnRaVk53WldWa0lEMGdaRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2loY0lpTnlZVzVuWlVkaGJXVlRjR1ZsWkZ3aUtUdGNjbHh1SUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTV6ZEdGblpVaHBjM1J2Y25rcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV6ZEdGblpVaHBjM1J2Y25rdWNIVnphQ2gwYUdsekxtZGhiV1ZNYVdabFFYSnlZWGtwTzF4eVhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjM1JoWjJWSWFYTjBiM0o1SUQwZ1cxMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YzNSaFoyVklhWE4wYjNKNUxuQjFjMmdvZEdocGN5NW5ZVzFsVEdsbVpVRnljbUY1S1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXpkV0p6WTNKcFltVlViME5zYVdOclQyNUJjbkpoZVNncE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWNHeGhlVk4wWVhSbElEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1OMWNuSmxiblJCY25KaGVVbHVaR1Y0SUQwZ2RHaHBjeTV6ZEdGblpVaHBjM1J2Y25rdWJHVnVaM1JvSUMwZ01UdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0J6ZFdKelkzSnBZbVZVYjBOc2FXTnJUMjVCY25KaGVTZ3BJSHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbmR5WVhCd1pYSkRiR2xqYTA5dVFYSnlZWGtnUFNCMGFHbHpMbU5zYVdOclQyNUJjbkpoZVM1aWFXNWtLSFJvYVhNcE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyOXVkR0ZwYmk1aFpHUkZkbVZ1ZEV4cGMzUmxibVZ5S0NkamJHbGpheWNzSUhSb2FYTXVkM0poY0hCbGNrTnNhV05yVDI1QmNuSmhlU2s3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1kyeHBZMnRQYmtGeWNtRjVLR1YyS1NCN1hISmNiaUFnSUNBZ0lDQWdiR1YwSUdobGFXZG9kQ0E5SUhSb2FYTXVZMjl1ZEdGcGJpNWpiR2xsYm5SSVpXbG5hSFE3WEhKY2JpQWdJQ0FnSUNBZ2JHVjBJSGRwWkhSb0lEMGdkR2hwY3k1amIyNTBZV2x1TG1Oc2FXVnVkRmRwWkhSb08xeHlYRzRnSUNBZ0lDQWdJR3hsZENCNElEMGdaWFl1YjJabWMyVjBXRHRjY2x4dUlDQWdJQ0FnSUNCc1pYUWdlU0E5SUdWMkxtOW1abk5sZEZrN1hISmNiaUFnSUNBZ0lDQWdiR1YwSUhKdmQwaGxhV2RvZENBOUlHaGxhV2RvZENBdklIUm9hWE11WjJGdFpVeHBibVZPZFcxaVpYYzdYSEpjYmlBZ0lDQWdJQ0FnYkdWMElHTmxiR3hYYVdSMGFDQTlJSGRwWkhSb0lDOGdkR2hwY3k1bllXMWxRMjlzZFcxdVRuVnRZbVYzTzF4eVhHNGdJQ0FnSUNBZ0lHeGxkQ0J2Wm1aelpYUllJRDBnVFdGMGFDNW1iRzl2Y2loNElDOGdZMlZzYkZkcFpIUm9LVHRjY2x4dUlDQWdJQ0FnSUNCc1pYUWdiMlptYzJWMFdTQTlJRTFoZEdndVpteHZiM0lvZVNBdklISnZkMGhsYVdkb2RDazdYSEpjYmlBZ0lDQWdJQ0FnYkdWMElHTmxiR3dnUFNCMGFHbHpMbk4wWVdkbFNHbHpkRzl5ZVZ0MGFHbHpMbU4xY25KbGJuUkJjbkpoZVVsdVpHVjRYVnR2Wm1aelpYUlpYVnR2Wm1aelpYUllYVHRjY2x4dUlDQWdJQ0FnSUNCcFppQW9ZMlZzYkNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbk4wWVdkbFNHbHpkRzl5ZVZ0MGFHbHpMbU4xY25KbGJuUkJjbkpoZVVsdVpHVjRYVnR2Wm1aelpYUlpYVnR2Wm1aelpYUllYU0E5SURBN1hISmNiaUFnSUNBZ0lDQWdmU0JsYkhObElIUm9hWE11YzNSaFoyVklhWE4wYjNKNVczUm9hWE11WTNWeWNtVnVkRUZ5Y21GNVNXNWtaWGhkVzI5bVpuTmxkRmxkVzI5bVpuTmxkRmhkSUQwZ01UdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuTjBZV2RsU0dsemRHOXllUzV6Y0d4cFkyVW9kR2hwY3k1amRYSnlaVzUwUVhKeVlYbEpibVJsZUNBcklERXBPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVaWFpsYm5SQ2RYTXVkSEpwWjJkbGNpZ25kbWxsZHljc0lIUm9hWE1wTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHTnlaV0YwWlVkaGJXVkJjbkpoZVNoc2FXNWxMQ0JqYjJ4MWJXNHBJSHRjY2x4dUlDQWdJQ0FnSUNCc1pYUWdZWEp5WVhrZ1BTQmJYVHRjY2x4dUlDQWdJQ0FnSUNCbWIzSWdLR3hsZENCcElEMGdNRHNnYVNBOElHeHBibVU3SUNzcmFTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNaWFFnYm1WM1VtOTNJRDBnVzEwN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdadmNpQW9iR1YwSUdvZ1BTQXdPeUJxSUR3Z1kyOXNkVzF1T3lBcksyb3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1bGQxSnZkeTV3ZFhOb0tEQXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHRnljbUY1TG5CMWMyZ29ibVYzVW05M0tUdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TG1Ga1pGUnZRWEp5WVhsR2FYaGxaRWwwWlcwb1lYSnlZWGtwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHRmtaRlJ2UVhKeVlYbEdhWGhsWkVsMFpXMG9ZWEp5WVhrcGUxeHlYRzRnSUNBZ0lDQWdJR3hsZENCalpXNTBaWEpEYjJ4MWJXNGdQU0JOWVhSb0xuSnZkVzVrS0dGeWNtRjVXekJkTG14bGJtZDBhQ0F2SURJcE8xeHlYRzRnSUNBZ0lDQWdJR3hsZENCalpXNTBaWEpNYVc1bElEMGdUV0YwYUM1eWIzVnVaQ2hoY25KaGVTNXNaVzVuZEdnZ0x5QXlLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdZWEp5WVhsYlkyVnVkR1Z5VEdsdVpWMWJZMlZ1ZEdWeVEyOXNkVzF1WFNBOUlERTdYSEpjYmlBZ0lDQWdJQ0FnWVhKeVlYbGJZMlZ1ZEdWeVRHbHVaU0F0SURGZFcyTmxiblJsY2tOdmJIVnRibDBnUFNBeE8xeHlYRzRnSUNBZ0lDQWdJR0Z5Y21GNVcyTmxiblJsY2t4cGJtVWdLeUF4WFZ0alpXNTBaWEpEYjJ4MWJXNWRJRDBnTVR0Y2NseHVJQ0FnSUNBZ0lDQmhjbkpoZVZ0alpXNTBaWEpNYVc1bElDc2dNVjFiWTJWdWRHVnlRMjlzZFcxdVhTQTlJREU3WEhKY2JpQWdJQ0FnSUNBZ1lYSnlZWGxiWTJWdWRHVnlUR2x1WlNBcklERmRXMk5sYm5SbGNrTnZiSFZ0YmlBcklERmRJRDBnTVR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR0Z5Y21GNU8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJSE4wWVhKMFEyRnNZM1ZzWVhSbEtDa2dlMXh5WEc0Z0lDQWdJQ0FnSUdsbUlDaDBhR2x6TG5OMFlXZGxTR2x6ZEc5eWVTNXNaVzVuZEdncElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR04xY25KbGJuUk1hV1psVTNSaFoyVWdQU0IwYUdsekxuTjBZV2RsU0dsemRHOXllVnQwYUdsekxtTjFjbkpsYm5SQmNuSmhlVWx1WkdWNFhUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVqWVd4amRXeGhkR1ZIWVcxbFRHbG1aU2hqZFhKeVpXNTBUR2xtWlZOMFlXZGxLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdkR2hwY3k1amRYSnlaVzUwUVhKeVlYbEpibVJsZUNBOUlIUm9hWE11YzNSaFoyVklhWE4wYjNKNUxteGxibWQwYUNBdElERTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnWTJGc1kzVnNZWFJsUjJGdFpVeHBabVVvYzNSaFoyVk1hV1psS1NCN1hISmNiaUFnSUNBZ0lDQWdiR1YwSUc1bGQxTjBZV2RsVDJaTWFXWmxJRDBnVzEwN1hISmNiaUFnSUNBZ0lDQWdabTl5SUNoc1pYUWdhU0E5SURBN0lHa2dQQ0IwYUdsekxtZGhiV1ZNYVc1bFRuVnRZbVYzT3lBcksya3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiR1YwSUc1bGQxSnZkMDl1VTNSaFoyVlBaa3hwWm1VZ1BTQmJYVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabTl5SUNoc1pYUWdhaUE5SURBN0lHb2dQQ0IwYUdsekxtZGhiV1ZEYjJ4MWJXNU9kVzFpWlhjN0lDc3JhaWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR0ZrYW1GalpXNTBSV3hsYldWdWRFeGxibWQwYUNBOUlIUm9hWE11WjJWMFFXUnFZV05sYm5SRmJHVnRaVzUwVEdWdVozUm9LR2tzSUdvc0lITjBZV2RsVEdsbVpTazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1lXUnFZV05sYm5SRmJHVnRaVzUwVEdWdVozUm9JRDA5UFNBeklDWW1JQ0Z6ZEdGblpVeHBabVZiYVYxYmFsMHBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVaWGRTYjNkUGJsTjBZV2RsVDJaTWFXWmxMbkIxYzJnb01TazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0dGa2FtRmpaVzUwUld4bGJXVnVkRXhsYm1kMGFDQTlQVDBnTWlCOGZDQW9ZV1JxWVdObGJuUkZiR1Z0Wlc1MFRHVnVaM1JvSUQwOVBTQXpJQ1ltSUhOMFlXZGxUR2xtWlZ0cFhWdHFYU2twSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1WlhkU2IzZFBibE4wWVdkbFQyWk1hV1psTG5CMWMyZ29jM1JoWjJWTWFXWmxXMmxkVzJwZEtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvWVdScVlXTmxiblJGYkdWdFpXNTBUR1Z1WjNSb0lEd2dNaUI4ZkNCaFpHcGhZMlZ1ZEVWc1pXMWxiblJNWlc1bmRHZ2dQaUF6S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYm1WM1VtOTNUMjVUZEdGblpVOW1UR2xtWlM1d2RYTm9LREFwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUc1bGQxTjBZV2RsVDJaTWFXWmxMbkIxYzJnb2JtVjNVbTkzVDI1VGRHRm5aVTltVEdsbVpTazdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YzNSaFoyVklhWE4wYjNKNUxuTndiR2xqWlNoMGFHbHpMbU4xY25KbGJuUkJjbkpoZVVsdVpHVjRJQ3NnTVNrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1emRHRm5aVWhwYzNSdmNua3VjSFZ6YUNodVpYZFRkR0ZuWlU5bVRHbG1aU2s3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1oyVjBRV1JxWVdObGJuUkZiR1Z0Wlc1MFRHVnVaM1JvS0dodmNtbDZiMjUwWVd4T2RXMWlaWElzSUhabGNuUnBZMkZzVG5WdFltVnlMQ0J6ZEdGblpVeHBabVVwSUh0Y2NseHVJQ0FnSUNBZ0lDQnNaWFFnWTI5MWJuUWdQU0F3TzF4eVhHNGdJQ0FnSUNBZ0lHWnZjaUFvYkdWMElHa2dQU0JvYjNKcGVtOXVkR0ZzVG5WdFltVnlJQzBnTVRzZ2FTQThQU0JvYjNKcGVtOXVkR0ZzVG5WdFltVnlJQ3NnTVRzZ0t5dHBLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2lBb2JHVjBJR29nUFNCMlpYSjBhV05oYkU1MWJXSmxjaUF0SURFN0lHb2dQRDBnZG1WeWRHbGpZV3hPZFcxaVpYSWdLeUF4T3lBcksyb3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBJRDA5UFNCb2IzSnBlbTl1ZEdGc1RuVnRZbVZ5SUNZbUlHb2dQVDA5SUhabGNuUnBZMkZzVG5WdFltVnlLU0JqYjI1MGFXNTFaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hLR2tnUENBd0lIeDhJR29nUENBd0lIeDhJR2tnUGlCMGFHbHpMbWRoYldWTWFXNWxUblZ0WW1WM0lDMGdNU0I4ZkNCcUlENGdkR2hwY3k1bllXMWxRMjlzZFcxdVRuVnRZbVYzSUMwZ01Ta2dKaVpjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkR0ZuWlV4cFptVmJhVjFiYWwwZ1BUMDlJREVwWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdLeXRqYjNWdWREdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWTI5MWJuUTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnY21Wd1pXRjBSMkZ0WlNncElIdGNjbHh1SUNBZ0lDQWdJQ0J6WlhSVWFXMWxiM1YwS0NncElEMCtJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSb2FYTXVjR3hoZVZOMFlYUmxLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbk4wWVhKMFEyRnNZM1ZzWVhSbEtIUm9hWE11YzNSaFoyVklhWE4wYjNKNUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpYWmxiblJDZFhNdWRISnBaMmRsY2lnbmRtbGxkeWNzSUhSb2FYTXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXlaWEJsWVhSSFlXMWxLQ2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvSVhSb2FYTXVjR3hoZVZOMFlYUmxLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamJHVmhjbFJwYldWdmRYUW9LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgwc0lDdDBhR2x6TG1kaGJXVlRjR1ZsWkM1MllXeDFaU0FxSURFd01DazdYSEpjYmlBZ0lDQjlYSEpjYm4xY2NseHVYSEpjYm1WNGNHOXlkQ0JrWldaaGRXeDBJRU5oYkdOMWJHRjBhVzVuUjJGdFpVeHBabVU3SWl3aUozVnpaU0J6ZEhKcFkzUW5PMXh5WEc1Y2NseHVhVzF3YjNKMElFTmhiR04xYkdGMGFXNW5SMkZ0WlV4cFptVWdabkp2YlNCY0lpNHZZMkZzWTNWc1lYUnBibWRIWVcxbFRHbG1aVndpTzF4eVhHNWNjbHh1WTJ4aGMzTWdRMjl1ZEhKdmJITWdaWGgwWlc1a2N5QkRZV3hqZFd4aGRHbHVaMGRoYldWTWFXWmxJSHRjY2x4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0dWMlpXNTBRblZ6S1NCN1hISmNiaUFnSUNBZ0lDQWdiR1YwSUhObGJHVmpkRXhwYm1VZ1BTQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0Z3aUkzTmxiR1ZqZEV4cGJtVmNJaWs3WEhKY2JpQWdJQ0FnSUNBZ2JHVjBJSE5sYkdWamRFTnZiSFZ0YmlBOUlHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0lvWENJamMyVnNaV04wUTI5c2RXMXVYQ0lwTzF4eVhHNGdJQ0FnSUNBZ0lITjFjR1Z5S0N0elpXeGxZM1JNYVc1bExuWmhiSFZsTENBcmMyVnNaV04wUTI5c2RXMXVMblpoYkhWbExDQmxkbVZ1ZEVKMWN5azdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NWxkbVZ1ZEVKMWN5QTlJR1YyWlc1MFFuVnpPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjMlZzWldOMFRHbHVaU0E5SUhObGJHVmpkRXhwYm1VN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1elpXeGxZM1JEYjJ4MWJXNGdQU0J6Wld4bFkzUkRiMngxYlc0N1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1aWRYUjBiMjV6SUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWhjSWlOaWRYUjBiMjV6WENJcE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWMzVmljMk55YVdKbFZHOURiR2xqYTBKMWRIUnZiaWdwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lITjFZbk5qY21saVpWUnZRMnhwWTJ0Q2RYUjBiMjRvS1NCN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1M2NtRndjR1Z5UTJ4cFkydFBia052Ym5SeWIyeHpRblYwZEc5dUlEMGdkR2hwY3k1amJHbGphMDl1UTI5dWRISnZiSE5DZFhSMGIyNHVZbWx1WkNoMGFHbHpLVHRjY2x4dUlDQWdJQ0FnSUNCMGFHbHpMbUoxZEhSdmJuTXVZV1JrUlhabGJuUk1hWE4wWlc1bGNpaGNJbU5zYVdOclhDSXNJSFJvYVhNdWQzSmhjSEJsY2tOc2FXTnJUMjVEYjI1MGNtOXNjMEoxZEhSdmJpazdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXlaWEJsWVhSSFlXMWxLQ2s3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ1kyeHBZMnRQYmtOdmJuUnliMnh6UW5WMGRHOXVLR1YyS1NCN1hISmNiaUFnSUNBZ0lDQWdiR1YwSUhSaGNtZGxkQ0E5SUdWMkxuUmhjbWRsZER0Y2NseHVJQ0FnSUNBZ0lDQnBaaUFvZEdGeVoyVjBMbU5zYjNObGMzUW9YQ0lqWW1GamExd2lLU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RHaHBjeTVqZFhKeVpXNTBRWEp5WVhsSmJtUmxlQ0ErSURBcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzB0ZEdocGN5NWpkWEp5Wlc1MFFYSnlZWGxKYm1SbGVEdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdVpYWmxiblJDZFhNdWRISnBaMmRsY2lnbmRtbGxkeWNzSUhSb2FYTXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNoMFlYSm5aWFF1WTJ4dmMyVnpkQ2hjSWlObWIzSjNZWEprWENJcEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gwYUdsekxtTjFjbkpsYm5SQmNuSmhlVWx1WkdWNElEd2dkR2hwY3k1emRHRm5aVWhwYzNSdmNua3ViR1Z1WjNSb0lDMGdNU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0t5dDBhR2x6TG1OMWNuSmxiblJCY25KaGVVbHVaR1Y0TzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVsZG1WdWRFSjFjeTUwY21sbloyVnlLQ2QyYVdWM0p5d2dkR2hwY3lrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLSFJoY21kbGRDNWpiRzl6WlhOMEtGd2lJM0JzWVhsY0lpa3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSaGNtZGxkQzUyWVd4MVpTQTlQVDBnWENKVGRHOXdYQ0lwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUmhjbWRsZEM1MllXeDFaU0E5SUZ3aVVHeGhlVndpTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV3YkdGNVUzUmhkR1VnUFNCbVlXeHpaVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2gwWVhKblpYUXVkbUZzZFdVZ1BUMDlJRndpVUd4aGVWd2lLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMFlYSm5aWFF1ZG1Gc2RXVWdQU0JjSWxOMGIzQmNJanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjR3hoZVZOMFlYUmxJRDBnZEhKMVpUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNtVndaV0YwUjJGdFpTZ3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNTlYSEpjYmx4eVhHNWxlSEJ2Y25RZ1pHVm1ZWFZzZENCRGIyNTBjbTlzY3pzaUxDSW5kWE5sSUhOMGNtbGpkQ2M3WEhKY2JseHlYRzVwYlhCdmNuUWdZV1JrUVdKdmRYUWdabkp2YlNCY0lpNHZZV0p2ZFhSUVlXZGxYQ0k3WEhKY2JtbHRjRzl5ZENCWGNtbDBaVU5oYm5aaGMwZGhiV1ZNYVdabElHWnliMjBnWENJdUwzZHlhWFJsUTJGdWRtRnpSMkZ0WlV4cFptVmNJanRjY2x4dWFXMXdiM0owSUZkeWFYUmxVMVpIUjJGdFpVeHBabVVnWm5KdmJTQmNJaTR2ZDNKcGRHVlRWa2RIWVcxbFRHbG1aVndpTzF4eVhHNXBiWEJ2Y25RZ1EyOXVkSEp2YkhNZ1puSnZiU0JjSWk0dlkyOXVkSEp2YkhOY0lqdGNjbHh1YVcxd2IzSjBJRmR5YVhSbFZHVjRkRWRoYldWTWFXWmxJR1p5YjIwZ1hDSXVMM2R5YVhSbFZHVjRkRWRoYldWTWFXWmxYQ0k3WEhKY2JtbHRjRzl5ZENCRmRtVnVkRUoxY3lCbWNtOXRJRndpTGk0dmRYUnBiSE12WlhabGJuUkNkWE5jSWp0Y2NseHVhVzF3YjNKMElGSnZkWFJsY2lCbWNtOXRJRndpTGk0dmRYUnBiSE12Y205MWRHVnlYQ0k3WEhKY2JseHlYRzVzWlhRZ1pYWmxiblJDZFhNZ1BTQnVaWGNnUlhabGJuUkNkWE1vS1R0Y2NseHViR1YwSUd4cFptVkhZVzFsTzF4eVhHNWNjbHh1YkdWMElHWnZjbTFEYjI1MGNtOXNjeUE5SUdSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSW9YQ0lqWm05eWJTMWpiMjUwY205c2Mxd2lLVHRjY2x4dVptOXliVU52Ym5SeWIyeHpMbUZrWkVWMlpXNTBUR2x6ZEdWdVpYSW9YQ0pqYUdGdVoyVmNJaXdnS0dWMktTQTlQaUI3WEhKY2JpQWdJQ0JwWmlBb2JHbG1aVWRoYldVdWMyVnNaV04wVEdsdVpTNTJZV3gxWlNBK0lERTFNQ2tnYkdsbVpVZGhiV1V1YzJWc1pXTjBUR2x1WlM1MllXeDFaU0E5SURFMU1EdGNjbHh1SUNBZ0lHVnNjMlVnYVdZZ0tHeHBabVZIWVcxbExuTmxiR1ZqZEV4cGJtVXVkbUZzZFdVZ1BDQXpLU0JzYVdabFIyRnRaUzV6Wld4bFkzUk1hVzVsTG5aaGJIVmxJRDBnTXp0Y2NseHVYSEpjYmlBZ0lDQnBaaUFvYkdsbVpVZGhiV1V1YzJWc1pXTjBRMjlzZFcxdUxuWmhiSFZsSUQ0Z01UVXdLU0JzYVdabFIyRnRaUzV6Wld4bFkzUkRiMngxYlc0dWRtRnNkV1VnUFNBeE5UQTdYSEpjYmlBZ0lDQmxiSE5sSUdsbUlDaHNhV1psUjJGdFpTNXpaV3hsWTNSRGIyeDFiVzR1ZG1Gc2RXVWdQQ0F6S1NCc2FXWmxSMkZ0WlM1elpXeGxZM1JEYjJ4MWJXNHVkbUZzZFdVZ1BTQXpPMXh5WEc1Y2NseHVJQ0FnSUd4bGRDQjBZWEpuWlhRZ1BTQmxkaTUwWVhKblpYUTdYSEpjYmlBZ0lDQnBaaUFvZEdGeVoyVjBMbU5zYjNObGMzUW9YQ0lqYzJWc1pXTjBUR2x1WlZ3aUtTQjhmQ0IwWVhKblpYUXVZMnh2YzJWemRDaGNJaU56Wld4bFkzUkRiMngxYlc1Y0lpa3BJSHRjY2x4dUlDQWdJQ0FnSUNCc2FXWmxSMkZ0WlM1amIyNTBZV2x1TG5KbGJXOTJaVVYyWlc1MFRHbHpkR1Z1WlhJb0oyTnNhV05ySnl3Z2JHbG1aVWRoYldVdWQzSmhjSEJsY2tOc2FXTnJUMjVCY25KaGVTazdYSEpjYmlBZ0lDQWdJQ0FnYkdsbVpVZGhiV1V1WW5WMGRHOXVjeTV5WlcxdmRtVkZkbVZ1ZEV4cGMzUmxibVZ5S0NkamJHbGpheWNzSUd4cFptVkhZVzFsTG5keVlYQndaWEpEYkdsamEwOXVRMjl1ZEhKdmJITkNkWFIwYjI0cE8xeHlYRzRnSUNBZ0lDQWdJR3hwWm1WSFlXMWxJRDBnYm1WM0lFTnZiblJ5YjJ4ektHVjJaVzUwUW5WektUdGNjbHh1SUNBZ0lDQWdJQ0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY2pjR3hoZVNjcExuWmhiSFZsSUQwZ1hDSlRkRzl3WENJN1hISmNiaUFnSUNBZ0lDQWdaWFpsYm5SQ2RYTXVkSEpwWjJkbGNpZ25kbWxsZHljc0lHeHBabVZIWVcxbEtUdGNjbHh1SUNBZ0lIMWNjbHh1ZlNrN1hISmNibHh5WEc1c1pYUWdjbTkxZEdWeUlEMGdibVYzSUZKdmRYUmxjaWg3WEhKY2JpQWdJQ0J5YjNWMFpYTTZJRnQ3WEhKY2JpQWdJQ0FnSUNBZ2JtRnRaVG9nSjJsdVpHVjRKeXhjY2x4dUlDQWdJQ0FnSUNCdFlYUmphRG9nSnljc1hISmNiaUFnSUNBZ0lDQWdiMjVDWldadmNtVkZiblJsY2pvZ0tDa2dQVDRnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JzWlhRZ1kyOXVkR0ZwYmlBOUlHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0lvWENJalkyOXVkR0ZwYmx3aUtUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JHVjBJR052Ym5SeWIyeHpJRDBnWkc5amRXMWxiblF1Y1hWbGNubFRaV3hsWTNSdmNpaGNJaU5qYjI1MGNtOXNjMXdpS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWTI5dWRHRnBiaTV6ZEhsc1pTNWthWE53YkdGNUlEMGdYQ0p1YjI1bFhDSTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZiblJ5YjJ4ekxuTjBlV3hsTG1ScGMzQnNZWGtnUFNCY0ltNXZibVZjSWp0Y2NseHVJQ0FnSUNBZ0lDQjlMRnh5WEc0Z0lDQWdJQ0FnSUc5dVJXNTBaWEk2SUNncElEMCtJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdobFlXUmxjbFJsZUhRZ1BTQmtiMk4xYldWdWRDNWpjbVZoZEdWRmJHVnRaVzUwS0Z3aWFERmNJaWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2hsWVdSbGNsUmxlSFF1YzJWMFFYUjBjbWxpZFhSbEtGd2lhV1JjSWl3Z1hDSm9aV0ZrWlhKVVpYaDBYQ0lwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JvWldGa1pYSlVaWGgwTG1sdWJtVnlTRlJOVENBOUlGd2kwSkxSaTlDeDBMWFJnTkM0MFlMUXRTRFJnTkMxMExiUXVOQzhJTkMrMFlMUXZ0Q3gwWURRc05DMjBMWFF2ZEM0MFk4ZzBMalFzOUdBMFl0Y0lqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1pHOWpkVzFsYm5RdVltOWtlUzVoY0hCbGJtUkRhR2xzWkNob1pXRmtaWEpVWlhoMEtUdGNjbHh1SUNBZ0lDQWdJQ0I5TEZ4eVhHNGdJQ0FnSUNBZ0lHOXVUR1ZoZG1VNklDZ3BJRDArSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHaGxZV1JsY2xSbGVIUWdQU0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtGd2lJMmhsWVdSbGNsUmxlSFJjSWlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdobFlXUmxjbFJsZUhRdWMzUjViR1V1WkdsemNHeGhlU0E5SUZ3aWJtOXVaVndpTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lIMHNJSHRjY2x4dUlDQWdJQ0FnSUNCdVlXMWxPaUFuVkdWNGRDY3NYSEpjYmlBZ0lDQWdJQ0FnYldGMFkyZzZJQzlVWlhoMEx5eGNjbHh1SUNBZ0lDQWdJQ0J2YmtKbFptOXlaVVZ1ZEdWeU9pQW9LU0E5UGlCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpiMjUwWVdsdUlEMGdaRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2loY0lpTmpiMjUwWVdsdVhDSXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWTI5dWRISnZiSE1nUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLRndpSTJOdmJuUnliMnh6WENJcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNTBZV2x1TG5OMGVXeGxMbVJwYzNCc1lYa2dQU0JjSW1Kc2IyTnJYQ0k3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5SeWIyeHpMbk4wZVd4bExtUnBjM0JzWVhrZ1BTQmNJbUpzYjJOclhDSTdYSEpjYmlBZ0lDQWdJQ0FnZlN4Y2NseHVJQ0FnSUNBZ0lDQnZia1Z1ZEdWeU9pQW9LU0E5UGlCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdWMlpXNTBRblZ6TG05dUtDZDJhV1YzSnl3Z1YzSnBkR1ZVWlhoMFIyRnRaVXhwWm1VcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JV3hwWm1WSFlXMWxLU0JzYVdabFIyRnRaU0E5SUc1bGR5QkRiMjUwY205c2N5aGxkbVZ1ZEVKMWN5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHVjJaVzUwUW5WekxuUnlhV2RuWlhJb0ozWnBaWGNuTENCc2FXWmxSMkZ0WlNrN1hISmNiaUFnSUNBZ0lDQWdmU3hjY2x4dUlDQWdJQ0FnSUNCdmJreGxZWFpsT2lBb0tTQTlQaUI3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1YyWlc1MFFuVnpMbTltWmlnbmRtbGxkeWNzSUZkeWFYUmxWR1Y0ZEVkaGJXVk1hV1psS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlMQ0I3WEhKY2JpQWdJQ0FnSUNBZ2JtRnRaVG9nSjBOaGJuWmhjeWNzWEhKY2JpQWdJQ0FnSUNBZ2JXRjBZMmc2SUM5RFlXNTJZWE12TEZ4eVhHNGdJQ0FnSUNBZ0lHOXVRbVZtYjNKbFJXNTBaWEk2SUNncElEMCtJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiR1YwSUdOdmJuUmhhVzRnUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLRndpSTJOdmJuUmhhVzVjSWlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpiMjUwY205c2N5QTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb1hDSWpZMjl1ZEhKdmJITmNJaWs3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR052Ym5SaGFXNHVjM1I1YkdVdVpHbHpjR3hoZVNBOUlGd2lZbXh2WTJ0Y0lqdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVkSEp2YkhNdWMzUjViR1V1WkdsemNHeGhlU0E5SUZ3aVlteHZZMnRjSWp0Y2NseHVJQ0FnSUNBZ0lDQjlMRnh5WEc0Z0lDQWdJQ0FnSUc5dVJXNTBaWEk2SUNncElEMCtJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdaWFpsYm5SQ2RYTXViMjRvSjNacFpYY25MQ0JYY21sMFpVTmhiblpoYzBkaGJXVk1hV1psS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRnNhV1psUjJGdFpTa2diR2xtWlVkaGJXVWdQU0J1WlhjZ1EyOXVkSEp2YkhNb1pYWmxiblJDZFhNcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbGRtVnVkRUoxY3k1MGNtbG5aMlZ5S0NkMmFXVjNKeXdnYkdsbVpVZGhiV1VwTzF4eVhHNGdJQ0FnSUNBZ0lIMHNYSEpjYmlBZ0lDQWdJQ0FnYjI1TVpXRjJaVG9nS0NrZ1BUNGdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxkbVZ1ZEVKMWN5NXZabVlvSjNacFpYY25MQ0JYY21sMFpVTmhiblpoYzBkaGJXVk1hV1psS1R0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlMQ0I3WEhKY2JpQWdJQ0FnSUNBZ2JtRnRaVG9nSjFOV1J5Y3NYSEpjYmlBZ0lDQWdJQ0FnYldGMFkyZzZJQzlUVmtjdkxGeHlYRzRnSUNBZ0lDQWdJRzl1UW1WbWIzSmxSVzUwWlhJNklDZ3BJRDArSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYkdWMElHTnZiblJoYVc0Z1BTQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0Z3aUkyTnZiblJoYVc1Y0lpazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0JqYjI1MGNtOXNjeUE5SUdSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSW9YQ0lqWTI5dWRISnZiSE5jSWlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuUmhhVzR1YzNSNWJHVXVaR2x6Y0d4aGVTQTlJRndpWW14dlkydGNJanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEhKdmJITXVjM1I1YkdVdVpHbHpjR3hoZVNBOUlGd2lZbXh2WTJ0Y0lqdGNjbHh1SUNBZ0lDQWdJQ0I5TEZ4eVhHNGdJQ0FnSUNBZ0lHOXVSVzUwWlhJNklDZ3BJRDArSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnWlhabGJuUkNkWE11YjI0b0ozWnBaWGNuTENCWGNtbDBaVk5XUjBkaGJXVk1hV1psS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDRnNhV1psUjJGdFpTa2diR2xtWlVkaGJXVWdQU0J1WlhjZ1EyOXVkSEp2YkhNb1pYWmxiblJDZFhNcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCbGRtVnVkRUoxY3k1MGNtbG5aMlZ5S0NkMmFXVjNKeXdnYkdsbVpVZGhiV1VwTzF4eVhHNGdJQ0FnSUNBZ0lIMHNYSEpjYmlBZ0lDQWdJQ0FnYjI1TVpXRjJaVG9nS0NrZ1BUNGdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxkbVZ1ZEVKMWN5NXZabVlvSjNacFpYY25MQ0JYY21sMFpWTldSMGRoYldWTWFXWmxLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNCOUxDQjdYSEpjYmlBZ0lDQWdJQ0FnYm1GdFpUb2dKMEZpYjNWMEp5eGNjbHh1SUNBZ0lDQWdJQ0J0WVhSamFEb2dMMEZpYjNWMEx5eGNjbHh1SUNBZ0lDQWdJQ0J2YmtKbFptOXlaVVZ1ZEdWeU9pQW9LU0E5UGlCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUd4bGRDQmpiMjUwWVdsdUlEMGdaRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2loY0lpTmpiMjUwWVdsdVhDSXBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNaWFFnWTI5dWRISnZiSE1nUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLRndpSTJOdmJuUnliMnh6WENJcE8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNTBZV2x1TG5OMGVXeGxMbVJwYzNCc1lYa2dQU0JjSW01dmJtVmNJanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEhKdmJITXVjM1I1YkdVdVpHbHpjR3hoZVNBOUlGd2libTl1WlZ3aU8xeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9iR2xtWlVkaGJXVXBJR3hwWm1WSFlXMWxMbkJzWVhsVGRHRjBaU0E5SUdaaGJITmxPMXh5WEc0Z0lDQWdJQ0FnSUgwc1hISmNiaUFnSUNBZ0lDQWdiMjVGYm5SbGNqb2dLQ2tnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZV0p2ZFhSRWFYWWdQU0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtGd2lJMkZpYjNWMFJHbDJYQ0lwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXRmliM1YwUkdsMktTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JoWkdSQlltOTFkQ2dwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVdKdmRYUkVhWFl1YzNSNWJHVXVaR2x6Y0d4aGVTQTlJRndpWW14dlkydGNJanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgwc1hISmNiaUFnSUNBZ0lDQWdiMjVNWldGMlpUb2dLQ2tnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCc1pYUWdZV0p2ZFhSRWFYWWdQU0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtGd2lJMkZpYjNWMFJHbDJYQ0lwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JoWW05MWRFUnBkaTV6ZEhsc1pTNWthWE53YkdGNUlEMGdYQ0p1YjI1bFhDSTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hzYVdabFIyRnRaU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHbG1aVWRoYldVdWNHeGhlVk4wWVhSbElEMGdkSEoxWlR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxkQ0J3YkdGNVFuVjBkRzl1SUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWhjSWlOd2JHRjVYQ0lwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSEJzWVhsQ2RYUjBiMjR1ZG1Gc2RXVWdQVDA5SUZ3aVUzUnZjRndpS1NCc2FXWmxSMkZ0WlM1eVpYQmxZWFJIWVcxbEtDazdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0I5TEZ4eVhHNGdJQ0FnWFZ4eVhHNTlLVHRjY2x4dVhISmNibVY0Y0c5eWRDQmtaV1poZFd4MElHeHBabVZIWVcxbE95SXNJaWQxYzJVZ2MzUnlhV04wSnp0Y2NseHVYSEpjYm1Oc1lYTnpJRmR5YVhSbFEyRnVkbUZ6UjJGdFpVeHBabVVnZTF4eVhHNGdJQ0FnWTI5dWMzUnlkV04wYjNJb1oyRnRaVXhwWm1VcGUxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyRnVkbUZ6SUQwZ1pHOWpkVzFsYm5RdVkzSmxZWFJsUld4bGJXVnVkQ2hjSW1OaGJuWmhjMXdpS1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1kaGJXVk1hV1psSUQwZ1oyRnRaVXhwWm1VN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1VFVWVkJVa1ZmVTBsYVJTQTlJRGc3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTV6ZEdGeWRGZHlhWFJsUjJGdFpTZ3BPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUhOMFlYSjBWM0pwZEdWSFlXMWxLQ2tnZTF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11ZDNKcGRHVkhZVzFsS0hSb2FYTXVaMkZ0WlV4cFptVXVjM1JoWjJWSWFYTjBiM0o1VzNSb2FYTXVaMkZ0WlV4cFptVXVZM1Z5Y21WdWRFRnljbUY1U1c1a1pYaGRMSFJvYVhNdWNISmxLVHRjY2x4dUlDQWdJQ0FnSUNCM2FXNWtiM2N1Ykc5allYUnBiMjR1YUdGemFDQTlJR0JEWVc1MllYTW1aMkZ0WlZOMFlYUmxQU1I3ZEdocGN5NW5ZVzFsVEdsbVpTNWpkWEp5Wlc1MFFYSnlZWGxKYm1SbGVDQXJJREY5WUR0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQjNjbWwwWlVkaGJXVW9iR0Z6ZEV4cFptVlRkR0ZuWlNrZ2UxeHlYRzRnSUNBZ0lDQWdJR3hsZENCMlpYSjBhV05oYkV4bGJtZDBhQ0E5SUd4aGMzUk1hV1psVTNSaFoyVXViR1Z1WjNSb0xGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCb2IzSnBlbTl1ZEdGc1RHVnVaM1JvSUQwZ2JHRnpkRXhwWm1WVGRHRm5aVnN3WFM1c1pXNW5kR2c3WEhKY2JseHlYRzRnSUNBZ0lDQWdJSFJvYVhNdVkyRnVkbUZ6TG1obGFXZG9kQ0E5SUhabGNuUnBZMkZzVEdWdVozUm9JQ29nTVRFN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1allXNTJZWE11ZDJsa2RHZ2dQU0JvYjNKcGVtOXVkR0ZzVEdWdVozUm9JQ29nTVRFN1hISmNibHh5WEc0Z0lDQWdJQ0FnSUd4bGRDQmpkSGdnUFNCMGFHbHpMbU5oYm5aaGN5NW5aWFJEYjI1MFpYaDBLQ2N5WkNjcE8xeHlYRzRnSUNBZ0lDQWdJR04wZUM1aVpXZHBibEJoZEdnb0tUdGNjbHh1SUNBZ0lDQWdJQ0JzWlhRZ2VTQTlJREE3WEhKY2JpQWdJQ0FnSUNBZ1ptOXlJQ2hzWlhRZ2FTQTlJREE3SUdrZ1BDQjJaWEowYVdOaGJFeGxibWQwYURzZ0t5dHBLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR3hsZENCNElEMGdNRHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabTl5SUNoc1pYUWdhaUE5SURBN0lHb2dQQ0JvYjNKcGVtOXVkR0ZzVEdWdVozUm9PeUFySzJvcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoc1lYTjBUR2xtWlZOMFlXZGxXMmxkVzJwZEtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamRIZ3VjbVZqZENoNExDQjVMQ0IwYUdsekxsTlJWVUZTUlY5VFNWcEZMQ0IwYUdsekxsTlJWVUZTUlY5VFNWcEZLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZ2dLejBnTVRFN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnZVNBclBTQXhNVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdZM1I0TG1acGJHeFRkSGxzWlNBOUlGd2lJemhpWXpNMFlWd2lPMXh5WEc0Z0lDQWdJQ0FnSUdOMGVDNW1hV3hzS0NrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1bllXMWxUR2xtWlM1amIyNTBZV2x1TG1sdWJtVnlTRlJOVENBOUlGd2lYQ0k3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVuWVcxbFRHbG1aUzVqYjI1MFlXbHVMbUZ3Y0dWdVpFTm9hV3hrS0hSb2FYTXVZMkZ1ZG1GektUdGNjbHh1SUNBZ0lIMWNjbHh1ZlZ4eVhHNWNjbHh1Wlhod2IzSjBJR1JsWm1GMWJIUWdWM0pwZEdWRFlXNTJZWE5IWVcxbFRHbG1aVHNpTENJbmRYTmxJSE4wY21samRDYzdYSEpjYmx4eVhHNWpiR0Z6Y3lCWGNtbDBaVk5XUjBkaGJXVk1hV1psSUh0Y2NseHVJQ0FnSUdOdmJuTjBjblZqZEc5eUtHZGhiV1ZNYVdabEtTQjdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NVRVVlZCVWtWZlUwbGFSU0E5SURnN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1VFZrZGZUbE1nUFNCY0ltaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREF2YzNablhDSTdYSEpjYmlBZ0lDQWdJQ0FnZEdocGN5NXpkbWNnUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBUbE1vZEdocGN5NVRWa2RmVGxNc0lDZHpkbWNuS1R0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5keVlYQndaWElnUFNCa2IyTjFiV1Z1ZEM1amNtVmhkR1ZGYkdWdFpXNTBUbE1vZEdocGN5NVRWa2RmVGxNc0lDZHlaV04wSnlrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1M2NtRndjR1Z5TG5ObGRFRjBkSEpwWW5WMFpTZ25ZMnhoYzNNbkxDQW5kM0poY0hCbGNpY3BPMXh5WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjM1puTG1Gd2NHVnVaRU5vYVd4a0tIUm9hWE11ZDNKaGNIQmxjaWs3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVuWVcxbFRHbG1aU0E5SUdkaGJXVk1hV1psTzF4eVhHNGdJQ0FnSUNBZ0lIUm9hWE11YzNSaGNuUlhjbWwwWlVkaGJXVW9LVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCemRHRnlkRmR5YVhSbFIyRnRaU2dwSUh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5keWFYUmxSMkZ0WlNoMGFHbHpMbWRoYldWTWFXWmxMbk4wWVdkbFNHbHpkRzl5ZVZ0MGFHbHpMbWRoYldWTWFXWmxMbU4xY25KbGJuUkJjbkpoZVVsdVpHVjRYU3dnZEdocGN5NXdjbVVwTzF4eVhHNGdJQ0FnSUNBZ0lIZHBibVJ2ZHk1c2IyTmhkR2x2Ymk1b1lYTm9JRDBnWUZOV1J5Wm5ZVzFsVTNSaGRHVTlKSHQwYUdsekxtZGhiV1ZNYVdabExtTjFjbkpsYm5SQmNuSmhlVWx1WkdWNElDc2dNWDFnTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lIZHlhWFJsUjJGdFpTaHNZWE4wVEdsbVpWTjBZV2RsS1NCN1hISmNiaUFnSUNBZ0lDQWdiR1YwSUhabGNuUnBZMkZzVEdWdVozUm9JRDBnYkdGemRFeHBabVZUZEdGblpTNXNaVzVuZEdnc1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdodmNtbDZiMjUwWVd4TVpXNW5kR2dnUFNCc1lYTjBUR2xtWlZOMFlXZGxXekJkTG14bGJtZDBhRHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdkR2hwY3k1emRtY3VjMlYwUVhSMGNtbGlkWFJsS0Nkb1pXbG5hSFFuTENCMlpYSjBhV05oYkV4bGJtZDBhQ0FxSURFeEtUdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuTjJaeTV6WlhSQmRIUnlhV0oxZEdVb0ozZHBaSFJvSnl3Z2FHOXlhWHB2Ym5SaGJFeGxibWQwYUNBcUlERXhLVHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdiR1YwSUhrZ1BTQXdPMXh5WEc0Z0lDQWdJQ0FnSUdadmNpQW9iR1YwSUdrZ1BTQXdPeUJwSUR3Z2RtVnlkR2xqWVd4TVpXNW5kR2c3SUNzcmFTa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNaWFFnZUNBOUlEQTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZjaUFvYkdWMElHb2dQU0F3T3lCcUlEd2dhRzl5YVhwdmJuUmhiRXhsYm1kMGFEc2dLeXRxS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYkdGemRFeHBabVZUZEdGblpWdHBYVnRxWFNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bGRDQlRWa2RUY1hWaGNtVWdQU0JnUEhKbFkzUWdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I0UFZ3aUpIdDRmVndpWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCNVBWd2lKSHQ1ZlZ3aVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjNhV1IwYUQxY0lpUjdkR2hwY3k1VFVWVkJVa1ZmVTBsYVJYMWNJbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJ4aGMzTTlYQ0pwYm01bGNpMXpjWFZoY21WY0lpQXZQbUJjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5OMlp5NXBibTVsY2toVVRVd2dLejBnVTFaSFUzRjFZWEpsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdlQ0FyUFNBeE1UdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCNUlDczlJREV4TzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtZGhiV1ZNYVdabExtTnZiblJoYVc0dWFXNXVaWEpJVkUxTUlEMGdYQ0pjSWp0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1kaGJXVk1hV1psTG1OdmJuUmhhVzR1WVhCd1pXNWtRMmhwYkdRb2RHaHBjeTV6ZG1jcE8xeHlYRzRnSUNBZ2ZWeHlYRzU5WEhKY2JseHlYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQlhjbWwwWlZOV1IwZGhiV1ZNYVdabE95SXNJaWQxYzJVZ2MzUnlhV04wSnp0Y2NseHVYSEpjYm1Oc1lYTnpJRmR5YVhSbFZHVjRkRWRoYldWTWFXWmxJSHRjY2x4dUlDQWdJR052Ym5OMGNuVmpkRzl5S0dkaGJXVk1hV1psS1h0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5CeVpTQTlJR1J2WTNWdFpXNTBMbU55WldGMFpVVnNaVzFsYm5Rb1hDSndjbVZjSWlrN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1bllXMWxUR2xtWlNBOUlHZGhiV1ZNYVdabE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWMzUmhjblJYY21sMFpVZGhiV1VvS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQnpkR0Z5ZEZkeWFYUmxSMkZ0WlNncElIdGNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxuZHlhWFJsUjJGdFpTaDBhR2x6TG1kaGJXVk1hV1psTG5OMFlXZGxTR2x6ZEc5eWVWdDBhR2x6TG1kaGJXVk1hV1psTG1OMWNuSmxiblJCY25KaGVVbHVaR1Y0WFN4MGFHbHpMbkJ5WlNrN1hISmNiaUFnSUNBZ0lDQWdkMmx1Wkc5M0xteHZZMkYwYVc5dUxtaGhjMmdnUFNCZ1ZHVjRkQ1puWVcxbFUzUmhkR1U5Skh0MGFHbHpMbWRoYldWTWFXWmxMbU4xY25KbGJuUkJjbkpoZVVsdVpHVjRJQ3NnTVgxZ08xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJSGR5YVhSbFIyRnRaU2hzWVhOMFRHbG1aVk4wWVdkbEtTQjdYSEpjYmlBZ0lDQWdJQ0FnYkdWMElIWmxjblJwWTJGc1RHVnVaM1JvSUQwZ2JHRnpkRXhwWm1WVGRHRm5aUzVzWlc1bmRHZ3NYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHaHZjbWw2YjI1MFlXeE1aVzVuZEdnZ1BTQnNZWE4wVEdsbVpWTjBZV2RsV3pCZExteGxibWQwYUR0Y2NseHVJQ0FnSUNBZ0lDQnNaWFFnZEdWNGRFZGhiV1ZNYVdabElEMGdYQ0pjSWp0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnWm05eUlDaHNaWFFnYVNBOUlEQTdJR2tnUENCMlpYSjBhV05oYkV4bGJtZDBhRHNnS3l0cEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwSUQ0Z01Da2dkR1Y0ZEVkaGJXVk1hV1psSUNzOUlGd2lYRnh1WENJN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdadmNpQW9iR1YwSUdvZ1BTQXdPeUJxSUR3Z2FHOXlhWHB2Ym5SaGJFeGxibWQwYURzZ0t5dHFLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9iR0Z6ZEV4cFptVlRkR0ZuWlZ0cFhWdHFYU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJsZUhSSFlXMWxUR2xtWlNBclBTQmNJbmhjSWp0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCMFpYaDBSMkZ0WlV4cFptVWdLejBnWENJZ1hDSTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV3Y21VdWFXNXVaWEpJVkUxTUlEMGdkR1Y0ZEVkaGJXVk1hV1psTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0IwYUdsekxtZGhiV1ZNYVdabExtTnZiblJoYVc0dWFXNXVaWEpJVkUxTUlEMGdYQ0pjSWp0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG1kaGJXVk1hV1psTG1OdmJuUmhhVzR1WVhCd1pXNWtRMmhwYkdRb2RHaHBjeTV3Y21VcE8xeHlYRzRnSUNBZ2ZWeHlYRzU5WEhKY2JseHlYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQlhjbWwwWlZSbGVIUkhZVzFsVEdsbVpUc2lMQ0luZFhObElITjBjbWxqZENjN1hISmNibU5zWVhOeklFVjJaVzUwUW5WeklIdGNjbHh1SUNBZ0lHTnZibk4wY25WamRHOXlLQ2w3WEhKY2JpQWdJQ0FnSUNBZ2RHaHBjeTVzYVhOMFpXNWxjbk1nUFNCN2ZUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0J2YmlodVlXMWxMQ0JqWWlrZ2UxeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWJHbHpkR1Z1WlhKelcyNWhiV1ZkSUQwZ2RHaHBjeTVzYVhOMFpXNWxjbk5iYm1GdFpWMGdmSHdnVzEwN1hISmNiaUFnSUNBZ0lDQWdkR2hwY3k1c2FYTjBaVzVsY25OYmJtRnRaVjB1Y0hWemFDaGpZaWs3WEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ2RISnBaMmRsY2lodVlXMWxMQ0F1TGk1a1lYUmhLU0I3WEhKY2JpQWdJQ0FnSUNBZ2FXWWdLSFJvYVhNdWJHbHpkR1Z1WlhKelcyNWhiV1ZkS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXViR2x6ZEdWdVpYSnpXMjVoYldWZExtWnZja1ZoWTJnb1kySWdQVDRnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR05pTG1OdmJuTjBjblZqZEc5eUtYdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVpYY2dZMklvTGk0dVpHRjBZU2s3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnWTJJb0xpNHVaR0YwWVNrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwcE8xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCdlptWW9ibUZ0WlN3Z1kySXBJSHRjY2x4dUlDQWdJQ0FnSUNCcFppQW9JV05pS1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdSbGJHVjBaU0IwYUdsekxteHBjM1JsYm1WeWMxdHVZVzFsWFR0Y2NseHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbXhwYzNSbGJtVnljMXR1WVcxbFhTQTlJSFJvYVhNdWJHbHpkR1Z1WlhKelcyNWhiV1ZkTG1acGJIUmxjaWdvWVhKeVlYbERZV3hzWW1GamF5a2dQVDRnSVNoallpQTlQVDBnWVhKeVlYbERZV3hzWW1GamF5a3BYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lHOXVZMlVvYm1GdFpTd2dZMklwSUh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG05dUtHNWhiV1VzSUc5dVkyVlBabVlwTzF4eVhHNGdJQ0FnSUNBZ0lHeGxkQ0J6Wld4bUlEMGdkR2hwY3p0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnYjI1alpVOW1aaWd1TGk1a1lYUmhLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR05pS0M0dUxtUmhkR0VwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JrWld4bGRHVWdjMlZzWmk1c2FYTjBaVzVsY25OYmJtRnRaVjA3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzU5WEhKY2JseHlYRzVsZUhCdmNuUWdaR1ZtWVhWc2RDQkZkbVZ1ZEVKMWN6c2lMQ0luZFhObElITjBjbWxqZENjN1hISmNibU5zWVhOeklGSnZkWFJsY2lCN1hISmNiaUFnSUNCamIyNXpkSEoxWTNSdmNpaHZjSFJwYjI1eklEMGdXMTBwSUh0Y2NseHVJQ0FnSUNBZ0lDQjBhR2x6TG5KdmRYUmxjeUE5SUc5d2RHbHZibk11Y205MWRHVnpPMXh5WEc0Z0lDQWdJQ0FnSUhkcGJtUnZkeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLRndpYUdGemFHTm9ZVzVuWlZ3aUxDQW9LU0E5UGlCMGFHbHpMbWhoYzJoRGFHVmpheWgzYVc1a2IzY3ViRzlqWVhScGIyNHVhR0Z6YUNrcE8xeHlYRzRnSUNBZ0lDQWdJSFJvYVhNdWFHRnphRU5vWldOcktIZHBibVJ2ZHk1c2IyTmhkR2x2Ymk1b1lYTm9LVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR1pwYm1ST1pYZFNiM1YwWlNob1lYTm9LU0I3WEhKY2JpQWdJQ0FnSUNBZ2JHVjBJSEp2ZFhSbE8xeHlYRzRnSUNBZ0lDQWdJR3hsZENCelpXeG1JRDBnZEdocGN6dGNjbHh1SUNBZ0lDQWdJQ0JwWmlBb0lYUm9hWE11Y205MWRHVnpLU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJqdGNjbHh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0hSb2FYTXVjbTkxZEdWekxteGxibWQwYUNBOVBUMGdNU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkR2hwY3k1bWFXNWtVbTkxZEdVb2FHRnphQ3dnZEdocGN5NXliM1YwWlhOYk1GMHBPMXh5WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWNtOTFkR1Z6TG1admNrVmhZMmdvS0hKdmRYUmxTWFJsYlNrZ1BUNGdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tITmxiR1l1Wm1sdVpGSnZkWFJsS0doaGMyZ3NJSEp2ZFhSbFNYUmxiU2twSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbTkxZEdVZ1BTQnliM1YwWlVsMFpXMDdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdjbTkxZEdVN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdabWx1WkZKdmRYUmxLR2hoYzJnc0lHbDBaVzBwZTF4eVhHNGdJQ0FnSUNBZ0lHbG1JQ2gwZVhCbGIyWWdhWFJsYlM1dFlYUmphQ0E5UFQwZ0ozTjBjbWx1WnljZ0ppWWdhR0Z6YUNBOVBUMGdhWFJsYlM1dFlYUmphQ0I4ZkZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwZVhCbGIyWWdhWFJsYlM1dFlYUmphQ0E5UFQwZ0oyWjFibU4wYVc5dUp5QW1KaUJwZEdWdExtMWhkR05vS0doaGMyZ3BJSHg4WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR2wwWlcwdWJXRjBZMmdnYVc1emRHRnVZMlZ2WmlCU1pXZEZlSEFnSmlZZ2FHRnphQzV0WVhSamFDaHBkR1Z0TG0xaGRHTm9LU2tnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdhWFJsYlR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnYUdGemFFTm9aV05yS0doaGMyZ3BlMXh5WEc0Z0lDQWdJQ0FnSUdoaGMyZ2dQU0JvWVhOb0xuTnNhV05sS0RFcE8xeHlYRzRnSUNBZ0lDQWdJR3hsZENCd2NtVlNiM1YwWlNBOUlIUm9hWE11WVdOMGFYWmxVbTkxZEdVN1hISmNiaUFnSUNBZ0lDQWdiR1YwSUc1bGQxSnZkWFJsSUQwZ2RHaHBjeTVtYVc1a1RtVjNVbTkxZEdVb2FHRnphQ2s3WEhKY2JseHlYRzRnSUNBZ0lDQWdJR2xtSUNnaGJtVjNVbTkxZEdVcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4eVhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9kSGx3Wlc5bUlHNWxkMUp2ZFhSbExtMWhkR05vSUQwOVBTQW5jM1J5YVc1bkp5a2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5KdmRYUmxVR0Z5WVcxeklEMGdibVYzVW05MWRHVXViV0YwWTJnN1hISmNiaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2h1WlhkU2IzVjBaUzV0WVhSamFDQnBibk4wWVc1alpXOW1JRkpsWjBWNGNDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG5KdmRYUmxVR0Z5WVcxeklEMGdhR0Z6YUM1dFlYUmphQ2h1WlhkU2IzVjBaUzV0WVhSamFDbGJNVjA3WEhKY2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaDBlWEJsYjJZZ2JtVjNVbTkxZEdVdWJXRjBZMmdnUFQwOUlDZG1kVzVqZEdsdmJpY3BJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1eWIzVjBaVkJoY21GdGN5QTlJRzVsZDFKdmRYUmxMbTFoZEdOb0tHaGhjMmdwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ1VISnZiV2x6WlM1eVpYTnZiSFpsS0NsY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnTG5Sb1pXNG9LQ2tnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hCeVpWSnZkWFJsSUNZbUlIQnlaVkp2ZFhSbExtOXVUR1ZoZG1VcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbkJ5WlZKdmRYUmxVR0Z5WVcxeklEOGdjSEpsVW05MWRHVXViMjVNWldGMlpTaDBhR2x6TG5CeVpWSnZkWFJsVUdGeVlXMXpLU0E2SUhCeVpWSnZkWFJsTG05dVRHVmhkbVVvS1Z4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBdWRHaGxiaWdvS1NBOVBpQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JtVjNVbTkxZEdVZ0ppWWdibVYzVW05MWRHVXViMjVDWldadmNtVkZiblJsY2lrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVjbTkxZEdWUVlYSmhiWE1nUHlCdVpYZFNiM1YwWlM1dmJrSmxabTl5WlVWdWRHVnlLSFJvYVhNdWNtOTFkR1ZRWVhKaGJYTXBJRG9nYm1WM1VtOTFkR1V1YjI1Q1pXWnZjbVZGYm5SbGNpZ3BYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBwWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQzUwYUdWdUtDZ3BJRDArSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h1WlhkU2IzVjBaU0FtSmlCdVpYZFNiM1YwWlM1dmJrVnVkR1Z5S1NCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXliM1YwWlZCaGNtRnRjeUEvSUc1bGQxSnZkWFJsTG05dVJXNTBaWElvZEdocGN5NXliM1YwWlZCaGNtRnRjeWtnT2lCdVpYZFNiM1YwWlM1dmJrVnVkR1Z5S0NsY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTbGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0xuUm9aVzRvS0NrZ1BUNGdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NWhZM1JwZG1WU2IzVjBaU0E5SUc1bGQxSnZkWFJsTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTV3Y21WU2IzVjBaVkJoY21GdGN5QTlJSFJvYVhNdWNtOTFkR1ZRWVhKaGJYTTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHBYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDNWpZWFJqYUNnb1pYSnliM0lwSUQwK0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXViRzluS0dWeWNtOXlLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEhKY2JpQWdJQ0I5WEhKY2JuMWNjbHh1WEhKY2JtVjRjRzl5ZENCa1pXWmhkV3gwSUZKdmRYUmxjanNpWFgwPVxuIl19
